/* 
* Copyright (c) 2000-2015 Samsung Electronics Co., Ltd All Rights Reserved
*
* Licensed under the Apache License, Version 2.0 (the "License"); 
* you may not use this file except in compliance with the License. 
* You may obtain a copy of the License at 
* 
* http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS, 
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
* See the License for the specific language governing permissions and 
* limitations under the License. 
* 
*/

#define ENTRY_TEXT_SIZE_INC 44
#define ENTRY_TEXT_COLOR_INC "#FFFFFF"
#define ENTRY_CURSOR_COLOR_INC 42 109 140 255
#define ENTRY_PREEDIT_BACKGROUND_COLOR_INC "#000000"
#define ENTRY_PREEDIT_TEXT_COLOR_INC "#FFFFFFFF"
#define ENTRY_SELECTION_BG_COLOR 90 123 138 127
#define ENTRY_SELECTION_BLOCK_HANDLE_MIN_SIZE 48 67
#define MAGNIFIER_HEIGHT_FILL 182
#define MAGNIFIER_HEIGHT_FIXED 108
#define MAGNIFIER_WIDTH_FIXED 358

#define EDITFIELD_TITLE_SIZE_INC 32
#define EDITFIELD_TITLE_COLOR_INC 255 255 255 255// 73 73 73 255
#define EDITFIELD_GUIDE_TEXT_COLOR_INC 250 250 250 255//189 189 189 255
#define EDITFIELD_DEFAULT_ERASER_MINW_INC 48
#define EDITFIELD_DEFAULT_ERASER_MINH_INC 48
#define EDITFIELD_SEARCHBAR_ERASER_MINW_INC 38
#define EDITFIELD_SEARCHBAR_ERASER_MINH_INC 38
#define EDITFIELD_DEFAULT_MINH_INC 112
#define EDITFIELD_SEARCHBAR_MINH_INC 50
#define EDITFIELD_DEFAULT_TOP1_SINGLE_INC 20
#define EDITFIELD_DEFAULT_TOP1_MULTI_INC 45
#define EDITFIELD_DEFAULT_TOP2_INC 6
#define EDITFIELD_DEFAULT_LEFT1_INC 0
#define EDITFIELD_DEFAULT_LEFT2_INC 0
#define EDITFIELD_DEFAULT_LEFT3_INC 2
#define EDITFIELD_DEFAULT_RIGHT1_ERASER_HIDE_INC 0
#define EDITFIELD_DEFAULT_RIGHT1_ERASER_SHOW_INC 60
#define EDITFIELD_DEFAULT_RIGHT2_INC 0
#define EDITFIELD_DEFAULT_BOTTOM1_SINGLE_INC 20
#define EDITFIELD_DEFAULT_BOTTOM1_MULTI_INC 5
#define EDITFIELD_DEFAULT_BOTTOM2_SINGLE_INC 32
#define EDITFIELD_DEFAULT_BOTTOM2_MULTI_INC 6
#define EDITFIELD_DEFAULT_BOTTOM3_SINGLE_INC 85
#define EDITFIELD_DEFAULT_BOTTOM3_MULTI_INC 60
#define EDITFIELD_SEARCHBAR_TOP1_SINGLE_INC 6
#define EDITFIELD_SEARCHBAR_TOP1_MULTI_INC 10
#define EDITFIELD_SEARCHBAR_TOP2_INC 10
#define EDITFIELD_SEARCHBAR_LEFT1_INC 0
#define EDITFIELD_SEARCHBAR_LEFT2_INC 0
#define EDITFIELD_SEARCHBAR_LEFT3_INC 2
#define EDITFIELD_SEARCHBAR_RIGHT1_ERASER_HIDE_INC 15
#define EDITFIELD_SEARCHBAR_RIGHT1_ERASER_SHOW_INC 55
#define EDITFIELD_SEARCHBAR_RIGHT2_INC 5
#define EDITFIELD_SEARCHBAR_BOTTOM1_SINGLE_INC 8
#define EDITFIELD_SEARCHBAR_BOTTOM1_MULTI_INC 2
#define EDITFIELD_SEARCHBAR_BOTTOM2_SINGLE_INC 16
#define EDITFIELD_SEARCHBAR_BOTTOM2_MULTI_INC 2
#define EDITFIELD_SEARCHBAR_BOTTOM3_SINGLE_INC 50
#define EDITFIELD_SEARCHBAR_BOTTOM3_MULTI_INC 50

#define ENTRY_BLOCK_HANDLE_SOURCE2 "elm/entry/selection/block_handle_right"
#define ENTRY_BLOCK_HANDLE_SOURCE3 "elm/entry/selection/block_handle_left"
/////////////////////////////////////////////////////////////////////////
group { name: "elm/entry/selection/block_handle_left";
	data.item: "position" "BOTTOM";
	data.item: "height" "40";
	images {
	  image: "copy&paste_Icon_left.png" COMP;
	  image: "copy&paste_Icon_left_press.png" COMP;
	  image: "copy&paste_Icon_left_top.png" COMP;
	  image: "copy&paste_Icon_left_top_press.png" COMP;
	}
	parts {
		part { name: "bg";
			type: RECT;
			scale: 1;
			mouse_events: 1;
			description { state: "default" 0.0;
				visible: 0;
				fixed: 1 1;
				align: 1 0;
				min: ENTRY_SELECTION_BLOCK_HANDLE_MIN_SIZE;
				color: 0 0 0 0;
			}
			description { state: "show" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part { name: "handle";
			mouse_events: 1;
			scale: 1;
			description { state: "default" 0.0;
				visible: 0;
				fixed: 1 1;
				align: 1 0;
				min: ENTRY_SELECTION_BLOCK_HANDLE_MIN_SIZE;
				rel1 {
					relative: 1.1 0.0;
					offset: 0 -2;
					to: "bg";
				}
				rel2 {
					relative: 1.1 0.0;
					offset: 0 -2;
					to: "bg";
				}
				image {
					normal: "copy&paste_Icon_left.png";
					border: 0 0 0 0;
				}
				image.middle: SOLID;
				fill.smooth: 0;
			}
			description { state: "show" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
			description { state: "top" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				align: 1 1;
				image {
					normal: "copy&paste_Icon_left_top.png";
				}
			}
			description { state: "press" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				image {
					normal: "copy&paste_Icon_left_press.png";
				}
			}
			description { state: "top_press" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				align: 1 1;
				image {
					normal: "copy&paste_Icon_left_top_press.png";
				}
			}
		}
	}
	script {
		public handler_ontop;
		public handler_pressed;
		public handler_focused;
	}
	programs {
		program { name: "focused";
			signal: "elm,action,focus";
			source: "elm";
			script {
				set_int(handler_focused, 1);
			}
		}
		program { name: "unfocused";
			signal: "elm,action,unfocus";
			source: "elm";
			script {
				set_int(handler_focused, 0);
					set_state(PART:"handle", "default", 0.0);
			}
		}
		program { name: "top";
			signal: "elm,state,top";
			source: "elm";
			script {
				new pressed;
				new focused;
				pressed = get_int(handler_pressed);
				focused = get_int(handler_focused);
				set_int(handler_ontop, 1);
									if (focused)
									{
										 if (pressed)
										   set_state(PART:"handle", "top_press", 0.0);
										 else
										   set_state(PART:"handle", "top", 0.0);
									}
									else
									{
										 set_state(PART:"handle", "default", 0.0);
									}
			}
		}
		program { name: "bottom";
			signal: "elm,state,bottom";
			source: "elm";
			script {
				new pressed;
				new focused;
				pressed = get_int(handler_pressed);
				focused = get_int(handler_focused);
				set_int(handler_ontop, 0);
									if (focused)
									{
										 if (pressed)
										   set_state(PART:"handle", "press", 0.0);
										 else
										   set_state(PART:"handle", "show", 0.0);
									}
									else
									{
										 set_state(PART:"handle", "default", 0.0);
									}
			}
		}
		program { name: "pressed";
			signal: "mouse,down,1";
			source: "handle";
			script {
				new pos;
				pos = get_int(handler_ontop);
				set_int(handler_pressed, 1);
				if (pos)
					set_state(PART:"handle", "top_press", 0.0);
				else
					set_state(PART:"handle", "press", 0.0);
			}
		}
		program { name: "unpressed";
			signal: "mouse,up,1";
			source: "handle";
			script {
				new pos;
				pos = get_int(handler_ontop);
				set_int(handler_pressed, 0);
				if (pos)
					set_state(PART:"handle", "top", 0.0);
				else
					set_state(PART:"handle", "show", 0.0);
			}
		}
	}
}

group { name: "elm/entry/selection/block_handle_right";
	data.item: "position" "BOTH";
	data.item: "height" "40";
	images {
	  image: "copy&paste_Icon_right.png" COMP;
	  image: "copy&paste_Icon_right_press.png" COMP;
	  image: "copy&paste_Icon_right_top.png" COMP;
	  image: "copy&paste_Icon_right_top_press.png" COMP;
	}
	parts {
		part { name: "handle";
			mouse_events: 1;
			scale: 1;
			description { state: "default" 0.0;
				visible: 0;
				fixed: 1 1;
				align: 0 0;
				min: ENTRY_SELECTION_BLOCK_HANDLE_MIN_SIZE;
				rel1 {
					relative: 0.0 0.0;
					offset: 0 -2;
				}
				rel2 {
					relative: 0.0 0.0;
					offset: 0 -2;
				}
				image {
					normal: "copy&paste_Icon_right.png";
					border: 0 0 0 0;
				}
				image.middle: SOLID;
				fill.smooth: 0;
			}
			description { state: "show" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
			description { state: "top" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				align: 0 1;
				image {
					normal: "copy&paste_Icon_right_top.png";
				}
			}
			description { state: "press" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				image {
					normal: "copy&paste_Icon_right_press.png";
				}
			}
			description { state: "top_press" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				align: 0 1;
				image {
					normal: "copy&paste_Icon_right_top_press.png";
				}
			}
		}
	}
	script {
		public handler_ontop;
		public handler_pressed;
		public handler_focused;
	}
	programs {
		program { name: "focused";
			signal: "elm,action,focus";
			source: "elm";
			script {
				set_int(handler_focused, 1);
			}
		}
		program { name: "unfocused";
			signal: "elm,action,unfocus";
			source: "elm";
			script {
				set_int(handler_focused, 0);
					set_state(PART:"handle", "default", 0.0);
			}
		}
		program { name: "top";
			signal: "elm,state,top";
			source: "elm";
			script {
				new pressed;
				new focused;
				pressed = get_int(handler_pressed);
				focused = get_int(handler_focused);
									set_int(handler_ontop, 1);
									if (focused)
									{
										 if (pressed)
										   set_state(PART:"handle", "top_press", 0.0);
										 else
										   set_state(PART:"handle", "top", 0.0);
									}
									else
									{
										 set_state(PART:"handle", "default", 0.0);
									}
			}
		}
		program { name: "bottom";
			signal: "elm,state,bottom";
			source: "elm";
			script {
				new pressed;
				new focused;
				pressed = get_int(handler_pressed);
				focused = get_int(handler_focused);
				set_int(handler_ontop, 0);
									if (focused)
									{
										 if (pressed)
										   set_state(PART:"handle", "press", 0.0);
										 else
										   set_state(PART:"handle", "show", 0.0);
									}
									else
									{
										 set_state(PART:"handle", "default", 0.0);
									}
			}
		}
		program { name: "pressed";
			signal: "mouse,down,1";
			source: "handle";
			script {
				new pos;
				pos = get_int(handler_ontop);
				set_int(handler_pressed, 1);
				if (pos)
					set_state(PART:"handle", "top_press", 0.0);
				else
					set_state(PART:"handle", "press", 0.0);
			}
		}
		program { name: "unpressed";
			signal: "mouse,up,1";
			source: "handle";
			script {
				new pos;
				pos = get_int(handler_ontop);
				set_int(handler_pressed, 0);
				if (pos)
					set_state(PART:"handle", "top", 0.0);
				else
					set_state(PART:"handle", "show", 0.0);
			}
		}
	}
}

group { name: "elm/entry/anchor/default";
	parts {
		part { name: "bg";
			type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
				color: 128 0 0 64;
			}
		}
	}
}
/////////////////////////////////////////////////////////////////////////

/* This file is copied at 10/17/2011 */

group { name: "elm/editfield/base/music/default";
   images {
      image: "00_EditField_clear.png" COMP;
   }
   styles {
      style { name: "editfield_content_singleline_style";
         base: "Tizen:style=Roman font_size="ENTRY_TEXT_SIZE_INC" color="ENTRY_TEXT_COLOR_INC" wrap=mixed ellipsis=1";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ Tizen:style=Oblique";
         tag:  "b" "+ Tizen:style=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ Tizen:style=Bold";
      }
      style { name: "editfield_content_multiline_style";
         base: "Tizen:style=Roman font_size="ENTRY_TEXT_SIZE_INC" color="ENTRY_TEXT_COLOR_INC" wrap=mixed";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ Tizen:style=Oblique";
         tag:  "b" "+ Tizen:style=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ Tizen:style=Bold";
      }
      style { name: "editfield_content_password_style";
         base: "Tizen:style=Roman font_size="ENTRY_TEXT_SIZE_INC" color="ENTRY_TEXT_COLOR_INC" wrap=none ellipsis=1";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ Tizen:style=Oblique";
         tag:  "b" "+ Tizen:style=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ Tizen:style=Bold";
      }
   }
   script {
      public single_line = 0;
      public password_mode = 0;

      public set_multi_line() {
         set_int(single_line, 0);
      }
      public set_single_line() {
         set_int(single_line, 1);
      }
      public set_password() {
         set_int(password_mode, 1);
      }
      public unset_password() {
         set_int(password_mode, 0);
      }
      public no_edit() {
         if(get_int(single_line) == 1) {
            if(get_int(password_mode) == 0) {
               set_state(PART:"elm.content.single", "no_edit", 0.0);
               set_state(PART:"elm.content.multi", "default", 0.0);
               set_state(PART:"elm.content.password", "default", 0.0);
            }
            else {
               set_state(PART:"elm.content.single", "default", 0.0);
               set_state(PART:"elm.content.multi", "default", 0.0);
               set_state(PART:"elm.content.password", "no_edit", 0.0);
            }
         }
         else if(get_int(single_line) == 0) {
            set_state(PART:"elm.content.single", "default", 0.0);
            set_state(PART:"elm.content.multi", "no_edit", 0.0);
            set_state(PART:"elm.content.password", "default", 0.0);
         }
         set_state(PART:"elm.swallow.content", "no_edit", 0.0);
         set_state(PART:"over", "default", 0.0);
         set_state(PART:"top2", "default", 0.0);
      }
   }
   parts {
      part {
         name: "base";
         type: RECT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            min: 0 EDITFIELD_DEFAULT_MINH_INC;
            color: MP_GENLIST_BG_COLOR;
         }
      }
      part {
         name: "top1";
         type: RECT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            min: 0 EDITFIELD_DEFAULT_TOP1_SINGLE_INC;
            fixed: 1 1;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 0.0;
            align: 0.5 0;
         }
         description {
            state: "elm.text.show" 0.0;
            inherit: "default" 0.0;
            min: 0 EDITFIELD_DEFAULT_TOP1_MULTI_INC;
         }
      }
      part {
         name: "top2";
         type: RECT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            min: 0 EDITFIELD_DEFAULT_TOP2_INC;
            fixed: 1 1;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 0.0;
            align: 0.5 0;
         }
         description {
            state: "edit" 0.0;
            inherit: "default" 0.0;
         }
      }
      part {
         name: "left1";
         type: RECT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            min: EDITFIELD_DEFAULT_LEFT1_INC 0;
            fixed: 1 1;
            align: 0 0;
            rel1.relative : 0.0 0.0;
            rel2.relative : 0.0 1.0;
         }
      }
      part {
         name: "left2";
         type: RECT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            min: EDITFIELD_DEFAULT_LEFT2_INC 0;
            fixed: 1 1;
            align: 0 0;
            rel1.relative : 0.0 0.0;
            rel2.relative : 0.0 1.0;
         }
      }
      part {
         name: "left3";
         type: RECT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            min: EDITFIELD_DEFAULT_LEFT3_INC 0;
            fixed: 1 1;
            align: 0 0;
            rel1 {
               to: "elm.swallow.content";
               relative: 0.0 0.0;
            }
            rel2 {
               to: "elm.swallow.content";
               relative: 0.0 1.0;
            }
         }
      }
      part {
         name: "right1";
         type: RECT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            min: EDITFIELD_DEFAULT_RIGHT1_ERASER_HIDE_INC 0;
            fixed: 1 1;
            align: 1 0;
            rel1.relative : 1.0 0.0;
            rel2.relative : 1.0 1.0;
         }
         description {
            state: "elm.eraser.show" 0.0;
            inherit: "default" 0.0;
            min: EDITFIELD_DEFAULT_RIGHT1_ERASER_SHOW_INC 0;
         }
      }
      part {
         name: "right2";
         type: RECT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            min: EDITFIELD_DEFAULT_RIGHT2_INC 0;
            fixed: 1 1;
            align: 1 0;
            rel1.relative : 1.0 0.0;
            rel2.relative : 1.0 1.0;
         }
      }
      part {
         name: "bottom1";
         type: RECT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            min: 0 EDITFIELD_DEFAULT_BOTTOM1_SINGLE_INC;
            fixed: 1 1;
            align: 0 1;
            rel1.relative: 0.0 1.0;
         }
         description {
            state: "elm.text.show" 0.0;
            inherit: "default" 0.0;
            min: 0 EDITFIELD_DEFAULT_BOTTOM1_MULTI_INC;
         }
      }
      part {
         name: "bottom2";
         type: RECT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            min: 0 EDITFIELD_DEFAULT_BOTTOM2_SINGLE_INC;
            fixed: 0 1;
            rel1.relative: 0.0 1.0;
            align: 0 1;
         }
         description {
            state: "elm.text.show" 0.0;
            inherit: "default" 0.0;
            min: 0 EDITFIELD_DEFAULT_BOTTOM2_MULTI_INC;
         }
      }
      part {
         name: "bottom3";
         type: RECT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            min: 0 EDITFIELD_DEFAULT_BOTTOM3_SINGLE_INC;
            fixed: 0 1;
            rel1.relative: 0.0 1.0;
            align: 0 1;
         }
         description {
            state: "elm.text.show" 0.0;
            inherit: "default" 0.0;
            min: 0 EDITFIELD_DEFAULT_BOTTOM3_MULTI_INC;
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            align: 0.0 0.0;
            min: 0 34;
            fixed: 1 1;
            rel1 {
               relative: 1.0 1.0;
               to_x: "left2";
               to_y: "top2";
            }
            rel2 {
               relative: 1.0 1.0;
               to_x: "left2";
               to_y: "top2";
            }
            color: EDITFIELD_TITLE_COLOR_INC;
            text {
               font: "TIZEN:style=Medium";
               size: EDITFIELD_TITLE_SIZE_INC;
               min: 1 1;
               align: 0.0 0.0;
            }
         }
         description {
            state: "elm.text.show" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "elm.guidetext";
         type: TEXT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            align: 0.0 0.0;
            fixed: 1 1;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            color: EDITFIELD_GUIDE_TEXT_COLOR_INC;
            text {
               font: "TIZEN:style=Roman";
	       size: ENTRY_TEXT_SIZE_INC;
               min: 0 0;
               align: 0.0 0.5;
            }
         }
         description {
            state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part {
         name: "elm.content.single";
         type: TEXTBLOCK;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            rel1 {
               to_x: "left3";
               to_y: "elm.swallow.content";
               relative: 1.0 0.0;
            }
            rel2.to: "elm.swallow.content";
            text {
               style: "editfield_content_singleline_style";
               min: 0 0;
               max: 0 1;
            }
         }
         description {
            state: "no_edit" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description {
            state: "edit" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part {
         name: "elm.content.multi";
         type: TEXTBLOCK;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            rel1 {
               to_x: "left3";
               to_y: "elm.swallow.content";
               relative: 1.0 0.0;
            }
            rel2.to: "elm.swallow.content";
            text {
               style: "editfield_content_multiline_style";
               min: 0 1;
            }
         }
         description {
            state: "no_edit" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description {
            state: "edit" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part {
         name: "elm.content.password";
         type: TEXTBLOCK;
         scale: 1;
         ignore_flags: ON_HOLD;
         entry_mode: PASSWORD;
         multiline: 0;
         description {
            state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            rel1 {
               to_x: "left3";
               to_y: "elm.swallow.content";
               relative: 1.0 0.0;
            }
            rel2.to: "elm.swallow.content";
            text {
               style: "editfield_content_password_style";
               repch: "*";
               min: 0 0;
               max: 0 1;
            }
         }
         description {
            state: "no_edit" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description {
            state: "edit" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            min: 0 40;
            rel1 {
               relative : 1.0 1.0;
               to_x: "left1";
               to_y: "top1";
            }
            rel2 {
               relative : 0.0 0.0;
               to_x: "right1";
               to_y: "bottom1";
            }
            align: 0.0 0.5;
         }
         description {
            state: "no_edit" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description {
            state: "edit" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "over";
         type: RECT;
         scale: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            color: 0 0 0 0;
         }
         description {
            state: "edit" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part {
         name: "eraser_image";
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 0;
            min: EDITFIELD_DEFAULT_ERASER_MINW_INC EDITFIELD_DEFAULT_ERASER_MINH_INC;
            fixed: 1 1;
            align: 1 1;
            rel1 {
               relative: 0.0 0.0;
               to_x : "right2";
               to_y : "bottom2";
            }
            rel2 {
               relative: 0.0 0.0;
               to_x : "right2";
               to_y : "bottom2";
            }
            image {
               normal: "00_EditField_clear.png";
               border: 10 10 10 10;
               border_scale: 1;
            }
         }
         description {
            state: "elm.eraser.show" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "eraser";
         mouse_events: 1;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            visible: 0;
            color: 0 0 0 0;
            rel1 {
               relative: 0.0 0.0;
               to_x : "eraser_image";
               to_y : "bottom3";
            }
         }
         description {
            state: "elm.eraser.show" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program {
         name: "guidetext_show";
         signal: "elm,state,guidetext,visible";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guidetext";
      }
      program {
         name: "guidetext_hide";
         signal: "elm,state,guidetext,hidden";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guidetext";
      }
      program {
         name: "eraser_show";
         signal: "elm,state,eraser,show";
         source: "elm";
         action: STATE_SET "elm.eraser.show" 0.0;
         target: "right1";
         target: "eraser_image";
         target: "eraser";
      }
      program {
         name: "eraser_hide";
         signal: "elm,state,eraser,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "right1";
         target: "eraser_image";
         target: "eraser";
      }
      program {
         name: "multiline_set";
         signal: "elm,state,text,multiline";
         source: "elm";
         script {
            set_multi_line();
         }
      }
      program {
         name: "singleline_set";
         signal: "elm,state,text,singleline";
         source: "elm";
         script {
            set_single_line();
         }
      }
      program {
         name: "password_set";
         signal: "elm,state,password,set";
         source: "elm";
         script {
            set_password();
         }
      }
      program {
         name: "password_unset";
         signal: "elm,state,password,unset";
         source: "elm";
         script {
            unset_password();
         }
      }
      program {
         name: "editing";
         signal: "elm,state,over,hide";
         source: "elm";
         action: STATE_SET "edit" 0.0;
         target: "elm.swallow.content";
         target: "elm.content.password";
         target: "elm.content.multi";
         target: "elm.content.single";
         target: "over";
         target: "top2";
      }
      program {
         name: "no_editing";
         signal: "elm,state,over,show";
         source: "elm";
         script {
            no_edit();
         }
      }
      program {
         name: "label_show";
         signal: "elm,state,text,visible";
         source: "elm";
         action: STATE_SET "elm.text.show" 0.0;
         target: "elm.text";
         target: "top1";
         target: "bottom1";
         target: "bottom2";
         target: "bottom3";
      }
      program {
         name: "label_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
         target: "top1";
         target: "bottom1";
         target: "bottom2";
         target: "bottom3";
      }
      program {
         name: "entry_show";
         signal: "elm,state,entry,show";
         source: "elm";
         action: STATE_SET "edit" 0.0;
         target: "elm.swallow.content";
         target: "elm.content.multi";
      }
   }
}

group { name: "elm/entry/cursor/music/default";
	parts {
		part { name: "clip2";
			type: RECT;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
				rel1.to: "clip";
				rel2.to: "clip";
			visible: 0;
			}
			description { state: "focused" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part { name: "clip";
			type: RECT;
			mouse_events: 0;
			scale: 1;
			clip_to: "clip2";
			description { state: "default" 0.0;
				rel1.offset: -10 0;
				rel2.offset: 9 9;
			}
			description { state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { name: "base";
			mouse_events: 0;
			scale: 1;
			clip_to: "clip";
			description { state: "default" 0.0;
				min: 2 2;
				align: 0.5 1.0;
				color: 0 0 0 0;
			}
		}

		part { name: "glow";
			type: RECT;
			mouse_events: 0;
			scale: 1;
			clip_to: "clip2";
			description { state: "default" 0.0;
				min: 3 0;
				fixed: 1 0;
				align: 0.5 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset: 0 2;
				}
				rel2 {
					relative: 0.0  1.0;
					offset: 0 -2;
				}
				color: ENTRY_CURSOR_COLOR_INC;
			}
			description { state: "hidden" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 0;
			}
		}
	}
	programs {
		program { name: "show";
			action: STATE_SET "hidden" 0.0;
			in: 0.6 0.0;
			target: "glow";
			after: "show4";
		}
		program { name: "show4";
			action: STATE_SET "default" 0.0;
			in: 0.6 0.0;
			target: "glow";
			after: "show";
		}
		program { name: "focused";
			signal: "elm,action,focus";
			source: "elm";
			action: STATE_SET "focused" 0.0;
			target: "clip2";
			after: "show4";
		}
		program { name: "unfocused";
			signal: "elm,action,unfocus";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "clip2";
			after: "stop_glow";
		}
		program { name: "stop_glow";
					action: ACTION_STOP;
			target: "show";
			target: "show4";
		}
	}
}

group { name: "elm/entry/base-single/music/default";
	data.item: "default_font_size" "24";
	data.item: "min_font_size" "8";
	data.item: "max_font_size" "60";
	styles
	{
		style { name: "entry_single_textblock_style";
			base: "Tizen:style=Roman font_size="ENTRY_TEXT_SIZE_INC" color="ENTRY_TEXT_COLOR_INC" wrap=none left_margin=2 right_margin=3";
			tag:  "br" "\n";
			tag:  "ps" "ps";
			tag:  "tab" "\t";
			tag:  "em" "+ Tizen:style=Oblique";
			tag:  "b" "+ Tizen:style=Bold";
			tag:  "link" "+ color=#800 underline=on underline_color=#8008";
			tag:  "hilight" "+ Tizen:style=Bold";
			tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC"";
			tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC"";
		}
		style { name: "entry_single_textblock_disabled_style";
			base: "Tizen:style=Roman font_size="ENTRY_TEXT_SIZE_INC" color=#00000080 wrap=none left_margin=2 right_margin=3";
			tag:  "br" "\n";
			tag:  "ps" "ps";
			tag:  "tab" "\t";
			tag:  "em" "+ Tizen:style=Oblique";
			tag:  "b" "+ Tizen:style=Bold";
			tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
			tag:  "hilight" "+ Tizen:style=Bold";
			tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC"";
			tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC"";
		}
	}
	data {
		item: context_menu_orientation "horizontal";
	}
	parts {
		part { name: "entry.swallow.background";
			type: SWALLOW;
			description { state: "default" 0.0;
				visible: 1;
				rel1 { relative: 0 0; to: "elm.text"; }
				rel2 { relative: 1 1; to: "elm.text"; }
			}
		}
	}

	parts {
		part { name: "elm.text";
			type: TEXTBLOCK;
			mouse_events: 1;
			scale: 1;
			entry_mode: EDITABLE;
			select_mode: BLOCK_HANDLE;
			//cursor_mode: BEFORE;
			multiline: 0;
			source: "elm/entry/selection/music/default"; // selection under
			source2: ENTRY_BLOCK_HANDLE_SOURCE2; // block handle
			source3: ENTRY_BLOCK_HANDLE_SOURCE3; // block handle
			source4: "elm/entry/cursor/music/default"; // cursorover
			source5: "elm/entry/anchor/default"; // anchor under
			description { state: "default" 0.0;
				text {
					style: "entry_single_textblock_style";
					min: 1 1;
					max: 0 0;
					align: 0.0 0.5;
				}
			}
			description { state: "disabled" 0.0;
					inherit: "default" 0.0;
				text {
					style: "entry_single_textblock_disabled_style";
				}
			}
		}
	}

	programs {
		program { name: "focus";
			signal: "load";
			source: "";
			action: FOCUS_SET;
			target: "elm.text";
		}
		program { name: "disable";
			signal: "elm,state,disabled";
			source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "elm.text";
		}
		program { name: "enable";
			signal: "elm,state,enabled";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
		}
	}
}

group { name: "elm/entry/selection/music/default";
	parts {
		part { name: "bg";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				color: ENTRY_SELECTION_BG_COLOR;
			}
		}
	}
}

