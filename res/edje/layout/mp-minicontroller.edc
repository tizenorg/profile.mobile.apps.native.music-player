/* 
* Copyright (c) 2000-2015 Samsung Electronics Co., Ltd All Rights Reserved
*
* Licensed under the Apache License, Version 2.0 (the "License"); 
* you may not use this file except in compliance with the License. 
* You may obtain a copy of the License at 
* 
* http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS, 
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
* See the License for the specific language governing permissions and 
* limitations under the License. 
* 
*/

#include "mp-defines.h"

#define MINI_H 70
#define MINI_H_PORT 70
#define TOP_PADDING 4
#define LEFT_PADDING 12
#define RIGHT_PADDING 4
#define BOTTOM_PADDING 6
#define ALBUM_ART_SIZE 120 120
#define BUTTON_SIZE_MIN_MAX	80 80
#define BIG_BTN_SIZE_MIN_MAX 80 80
#define BUTTON_EXPAND_OFFSET 0
#define BUTTON_CLOSE_SIZE_MAX 30 30
#define PLAY_BTN_SIZE_MIN_MAX 80 80
#define FF_BTN_SIZE_MIN_MAX 80 80


#define MC_BG						30 28 28 0


#define MC_MUSIC_LAGRE_BTN_EF                  "mini_controller/bg_btn_player_01_ef.png"
#define MC_MUSIC_LAGRE_BTN_BG                  "mini_controller/bg_btn_player_01.png"
#define MC_MUSIC_PLAY_BTN                  "mini_controller/music_btn_player_play_nor.png"
#define MC_MUSIC_PAUSE_BTN                  "mini_controller/music_btn_player_pause_nor.png"


#define MC_MUSIC_SMALL_BTN_EF                  "mini_controller/bg_btn_player_02_ef.png"
#define MC_MUSIC_SMALL_BTN_BG                  "mini_controller/bg_btn_player_02.png"

#define MC_MUSIC_CLOSE_BTN                  "mini_controller/btn_controller_close.png"
#define MC_MUSIC_PREV_BTN                  "mini_controller/music_btn_player_prev_nor.png"
#define MC_MUSIC_NEXT_BTN                  "mini_controller/music_btn_player_next_nor.png"

#define MC_MUSIC_ALBUM_FRAME                  "mini_controller/album_frame.png"




#define MC_FOCUSED_COVER(__name, __over_part_bg) \
part { \
	name: __name"_focus"; \
	type: SWALLOW; \
	mouse_events: 1; \
	scale: 1; \
	repeat_events: 1; \
	description { \
		state: "default" 0.0; \
		align: 0 0; \
		visible:1; \
		fixed: 1 1;\
		rel1 { \
			relative: 0 0; \
			to: __over_part_bg; \
		} \
		rel2 { \
			relative: 1 1; \
			to: __over_part_bg; \
		} \
	} \
}

#define MC_PART_AREA_FROM_LEFT(__name, __left_part, __width, __height) \
part { name: __name; \
	type: SPACER; \
	scale: 1; \
	mouse_events: 0; \
	description { state: "default" 0.0; \
		rel1 { relative: 1.0 0.5; to: __left_part; } \
		rel2 { relative: 1.0 0.5; to: __left_part; } \
		min: __width __height; \
		fixed: 1 1; \
		align: 0.0 0.5; \
	} \
}

#define MC_PART_AREA_FROM_SWALLOW_LEFT(__name, __left_part, __width, __height) \
part { name: __name; \
	type: SWALLOW; \
	scale: 1; \
	mouse_events: 1; \
	description { state: "default" 0.0; \
		rel1 { relative: 1.0 0.5; to: __left_part; } \
		rel2 { relative: 1.0 0.5; to: __left_part; } \
		min: __width __height; \
		fixed: 1 1; \
		align: 0.0 0.5; \
	} \
}
#define MC_IMAGE_PART_FOCUS(__name,__to,__image,__btn_min_max)\
part { name: __name;\
		type: IMAGE;\
		scale: 1;\
		mouse_events: 1;\
		description { state: "default" 0.0;\
			rel1 { relative: 0.5 0.5; to: __to; }\
			rel2 { relative: 0.5 0.5; to: __to; }\
			min: __btn_min_max;\
			max: __btn_min_max;\
			image.normal: __image;\
			fixed: 1 1;\
			align: 0.5 0.5;\
			color: 41 215 255 255;\
		}\
		description { state: "pressed" 0.0;\
			inherit: "default" 0.0;\
			color: 41 215 255 255;\
		}\
		description { state: "focus" 0.0;\
			inherit: "default" 0.0;\
			color: 6 119 194 255;\
		}\
		description { state: "hide" 0.0;\
			inherit: "default" 0.0;\
			visible: 0;\
		}\
	}


#define MC_IMAGE_PART(__name,__to,__image,__normal_code_red_component,__normal_code_green_component,__normal_code_blue_component,__normal_code_alpha_component,__press_code_red_component,__press_code_green_component,__press_code_blue_component,__press_code_alpha_component,__btn_min_max)\
part { name: __name;\
		type: IMAGE;\
		scale: 1;\
		mouse_events: 1;\
		description { state: "default" 0.0;\
			rel1 { relative: 0.5 0.5; to: __to; }\
			rel2 { relative: 0.5 0.5; to: __to; }\
			min: __btn_min_max;\
			max: __btn_min_max;\
			image.normal: __image;\
			fixed: 1 1;\
			align: 0.5 0.5;\
			color: __normal_code_red_component __normal_code_green_component __normal_code_blue_component __normal_code_alpha_component;\
		}\
		description { state: "pressed" 0.0;\
			inherit: "default" 0.0;\
			color: __press_code_red_component __press_code_green_component __press_code_blue_component __press_code_alpha_component;\
		}\
		description { state: "hide" 0.0;\
			inherit: "default" 0.0;\
			visible: 0;\
		}\
	}

#define MC_PROGRAM_IMAGE_VISIBLE(__btn, __show_signal, __hide_signal) \
program { \
	signal: __show_signal; \
	source: "*"; \
	action: STATE_SET "default" 0.0; \
	target: __btn; \
} \
program { \
	signal: __hide_signal; \
	source: "*"; \
	action: STATE_SET "hide" 0.0; \
	target: __btn; \
}


#define MC_PART_ICON_BTN(__name, __to, __normal, __pressed, __btn_min_max) \
part { name: __name"_clip"; \
	type: RECT; \
	scale: 1; \
	mouse_events: 0; \
	description { state: "default" 0.0; \
		rel1.to: __name"_bg"; \
		rel2.to: __name"_bg"; \
		color: 255 255 255 255; \
	} \
	description { state: "hide" 0.0; \
		inherit: "default" 0.0; \
		visible: 0; \
	} \
} \
part { name: __name"_bg"; \
	type: IMAGE; \
	scale: 1; \
	mouse_events: 0; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1 { relative: 0.5 0.5; to: __to; } \
		rel2 { relative: 0.5 0.5; to: __to; }\
		min: __btn_min_max; \
		max: __btn_min_max; \
		image.normal: __normal; \
		fixed: 1 1; \
		align: 0.5 0.5; \
	} \
	description { state: "pressed" 0.0; \
		inherit: "default" 0.0; \
		image.normal: __pressed; \
	} \
} \
part { name: __name; \
	type: RECT; \
	scale: 1; \
	mouse_events: 1; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1.to: __name"_bg"; \
		rel2.to: __name"_bg"; \
		color: 0 0 0 0; \
	} \
}

#define MC_PART_TEXT_BTN(__name, __to, __text_part_name) \
part { name: __name"_clip"; \
	type: RECT; \
	scale: 1; \
	mouse_events: 0; \
	description { state: "default" 0.0; \
		rel1.to: __to; \
		rel2.to: __to; \
		color: 255 255 255 255; \
	} \
	description { state: "hide" 0.0; \
		inherit: "default" 0.0; \
		visible: 0; \
	} \
} \
part { name: __name"_bg"; \
	type: SPACER; \
	scale: 1; \
	mouse_events: 0; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1.to: __to; \
		rel2.to: __to; \
	} \
	description { state: "pressed" 0.0; \
		inherit: "default" 0.0; \
	} \
} \
part { name: __text_part_name; \
	type: TEXT; \
	scale: 1; \
	mouse_events: 0; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1.to: __name"_bg"; \
		rel2.to: __name"_bg"; \
		text { \
			font: "Tizen:style=Medium"; \
			size: 28; \
			align: 0.5 0.5; \
		} \
		color: 149 149 149 255; \
	} \
} \
part { name: __name; \
	type: RECT; \
	scale: 1; \
	mouse_events: 1; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1.to: __to; \
		rel2.to: __to; \
		color: 0 0 0 0; \
	} \
}

#define MC_PART_RECT(__name, __to, __sx, __sy, __ex, __ey) \
part { \
	name: __name; \
	mouse_events: 1; \
	repeat_events: 1; \
	type: RECT; \
	scale: 1; \
	description { \
		state: "default" 0.0; \
		align: 0 0; \
		visible: 1; \
		rel1 { \
			relative: __sx __sy; \
			to: __to; \
		} \
		rel2 { \
			relative: __ex __ey; \
			to: __to; \
		} \
		color: 0 0 0 0; \
	}\
	description { \
		state: "hide" 0.0; \
		visible: 0; \
	}\
}

#define MC_PART_SWALLOW(__name, __to, __sx, __sy, __ex, __ey) \
part { \
	name: __name; \
	mouse_events: 1; \
	type: SWALLOW; \
	scale: 1; \
	description { \
		state: "default" 0.0; \
		align: 0.5 0.5; \
		fixed: 1 1; \
		visible: 1; \
		fixed:1 1;\
		rel1 { \
			relative: __sx __sy; \
			to: __to; \
		} \
		rel2 { \
			relative: __ex __ey; \
			to: __to; \
		} \
		color: 0 0 0 0; \
	} \
}

#define MC_PROGRAM_BTN_ACTION(__btn, __down_emission, __down_src, __up_emission, __up_src, __clicked_emission, __clicked_src) \
program { \
	name: __btn"_after_down"; \
	signal: "mouse,down,1"; \
	source: __btn; \
	script { \
		set_state(PART:__btn"_bg", "pressed", 0.0); \
		emit(__down_emission, __down_src); \
	} \
} \
program { \
	source: __btn; \
	signal: "mouse,down,1"; \
	action: PLAY_SAMPLE "button-pressed" 1.0; \
	after:  __btn"_after_down"; \
	transition: ACCELERATE 0.02;\
} \
program { \
	signal: "mouse,up,1"; \
	source: __btn; \
	script { \
		set_state(PART:__btn"_bg", "default", 0.0); \
		emit(__up_emission, __up_src); \
	} \
} \
program { \
	signal: "mouse,clicked,1"; \
	source: __btn; \
	action: SIGNAL_EMIT __clicked_emission __clicked_src; \
}

#define MC_PROGRAM_BTN_VISIBLE(__btn, __show_signal, __hide_signal) \
program { \
	signal: __show_signal; \
	source: "*"; \
	action: STATE_SET "default" 0.0; \
	target: __btn"_clip"; \
} \
program { \
	signal: __hide_signal; \
	source: "*"; \
	action: STATE_SET "hide" 0.0; \
	target: __btn"_clip"; \
}

#define MINI_CONTROL_HIDE_SWALLOW_OPTION(__name, __to) \
part { \
	name: __name; \
	mouse_events: 1; \
	type: SWALLOW; \
	scale: 1; \
	repeat_events: 1; \
	description { \
		state: "default" 0.0; \
		align: 0.5 0.5; \
		visible: 0; \
		rel1 { \
			relative: 0 0; \
			to: __to; \
		} \
		rel2 { \
			relative: 1 1; \
			to: __to; \
		} \
		color: 0 0 0 0; \
	} \
	description { \
		state: "visible" 0.0; \
		inherit: "default"; \
		visible: 1; \
	} \
}

#define MINI_CONTROL_BUTTON_INVISIVBLE_PROGRAM(__name) \
program { \
	name: __name"_visible" ; \
	signal: __name"_visible"; \
	source: __name; \
	action:   STATE_SET "visible" 0.0; \
	target: __name; \
} \
program { \
	name: __name"_invisible" ; \
	signal: __name"_invisible"; \
	source: __name; \
	action:   STATE_SET "default" 0.0; \
	target: __name; \
}

externals {
	external: "elm";
	external: "feedback";
}

collections {
base_scale: 2.4;
sounds {
	sample {
		name: "button-pressed" AS_IS;
		source: MP_BUTTON_PRESSED_NAME;
	}
}

plugins {
	plugin {
		name: "touch_sound_plugin";
		source: "feedback";
		param: "FEEDBACK_TYPE_SOUND FEEDBACK_PATTERN_TAP";
	}
}
group {
	name: "music-minicontroller";
	images {
		image: MC_MUSIC_LAGRE_BTN_EF COMP;
		image: MC_MUSIC_LAGRE_BTN_BG COMP;
		image: MC_MUSIC_PLAY_BTN COMP;
		image: MC_MUSIC_PAUSE_BTN COMP;
		image: MC_MUSIC_SMALL_BTN_EF COMP;
		image: MC_MUSIC_SMALL_BTN_BG COMP;

		image: MC_MUSIC_CLOSE_BTN  COMP;
		image: MC_MUSIC_PREV_BTN   COMP;
		image: MC_MUSIC_NEXT_BTN   COMP;

		image: MC_MUSIC_ALBUM_FRAME       COMP;
	}
	parts {
		part{ name: "bg";
			type : RECT;
			scale : 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min : 0 MINI_H_PORT;
				fixed: 1 1;
				rel1{ relative : 0 0;}
				rel2{ relative : 1 1;}
				color: MC_BG;
			}
		}

		part { name: "event_box";
			type : SWALLOW;
			mouse_events: 1;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 {
					relative: 0 0;
					to: "bg";
				}
				rel2 {
					relative: 1 1;
					to: "bg";
				}
			}
		}

		part { name: "padding.top";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 0; to: "bg"; }
				rel2 { relative: 1 0; to: "bg"; }
				min: 0 TOP_PADDING;
				fixed: 0 1;
				align: 0 0;
			}
		}

		part { name: "padding.left";
			type: SPACER;			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 0; to: "bg"; }
				rel2 { relative: 0 1; to: "bg"; }
				min: LEFT_PADDING 0;
				fixed: 1 0;
				align: 0 0;
			}
		}

		part { name: "padding.right";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1 0; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: RIGHT_PADDING 0;
				fixed: 1 0;
				align: 1 0;
			}
		}

		part { name: "padding.bottom";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 1; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: 0 BOTTOM_PADDING;
				fixed: 0 1;
				align: 0 1;
			}
		}

		part { name: "padding_for_albumart.top";
			type: SPACER;
			scale: 1;
			description { 
				state: "default" 0.0;
                rel1 { relative: 0 0; to: "bg"; }
                rel2 { relative: 1 0; to: "bg"; }
				min: 0 15;
				fixed: 0 1;
				align: 0.0 0.0;
			}
		}

                part { name: "padding_for_albumart.bottom";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0 1; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: 0 15;
				fixed: 0 1;
				align: 0 1;
			}
		}

		part { name: "albumarmt_bg";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1.0 1.0; to_x: "padding.left"; to_y: "padding_for_albumart.top"; }
				rel2 { relative: 1.0 0.0; to_x: "padding.left"; to_y: "padding_for_albumart.bottom"; }
				min: ALBUM_ART_SIZE;
				max: ALBUM_ART_SIZE;
				fixed: 1 1;
				align: 0.0 0.5;
			}
		}

		part { name: "albumart_image";
			type: SWALLOW;
			scale: 1;
			mouse_events: 1;
			clip_to: "albumarmt_bg";
			description { state: "default" 0.0;
				rel1 { relative: 0.5 0.5; to: "albumarmt_bg"; }
				rel2 { relative: 0.5 0.5; to: "albumarmt_bg"; }
				min: ALBUM_ART_SIZE;
				max: ALBUM_ART_SIZE;
				fixed: 1 1;
				align: 0.5 0.5;
			}
		}

		part { name: "albumarmt_frame";
			type: IMAGE;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0.0 0.0; to: "albumarmt_bg";}
				rel2 { relative: 1.0 1.0; to: "albumarmt_bg";}
				min: ALBUM_ART_SIZE;
				image.normal: MC_MUSIC_ALBUM_FRAME;
				color_class:"AO009";
			}
		}

		part { name: "right_area";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1.0 1.0; to_x: "albumarmt_bg"; to_y: "padding.top"; }
				rel2 { relative: 0.0 0.0; to_x: "padding.right"; to_y: "padding.bottom"; }
				align: 0.0 0.0;
			}
		}

		part { name: "elm.text";		// title
			type: SWALLOW;
			mouse_events: 1;
			scale: 1;
			description { state: "default" 0.0;
			   rel1 { relative: 0.0 1.0; to_x: "right_area"; to_y: "padding.top"; offset: 38 0;}
			   rel2 { relative: 0.83 1.0; to_x: "right_area"; to_y: "padding.top";}
			   min: 143 17;
			   fixed: 1 1;
			   align: 0.5 0.0;
			}
		}

		part { name: "close_btn_area";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0.0 1.0; to_x: "padding.right"; to_y: "elm.text";offset: -25 1;}
				rel2 { relative: 0.0 0.0; to_x: "padding.right"; to_y: "elm.text"; offset: -25 1;}
				min: BUTTON_CLOSE_SIZE_MAX;
                max: BUTTON_CLOSE_SIZE_MAX;
				color: 255 0 0 0;
				fixed: 1 1;
			}
		}
		MC_IMAGE_PART("close_btn","close_btn_area",MC_MUSIC_CLOSE_BTN,61,185,204,255,61,185,204,255,BUTTON_CLOSE_SIZE_MAX)
                part { name: "close_btn_touch_area";
                        type: RECT;
                        scale: 1;
                        mouse_events: 1;
			repeat_events: 1;
                        description { state: "default" 0.0;
                                rel1 { to: "close_btn_area"; offset: -7 -7; }
                                rel2 { to: "close_btn_area"; offset: 7 7; }
                                color: 0 0 0 0;
                        }
                }

		part { name: "mid_padding";
			type: RECT;
			mouse_events: 0;
			scale: 1;
			description
			{       state: "default" 0.0;
				rel1 { relative: 0.0 1.0; to_x: "right_area"; to_y: "elm.text"; offset: 40 0; }
				rel2 { relative: 1.0 1.0; to_x: "padding.right"; to_y: "elm.text"; offset: 0 0; }
				align: 0.0 0.0;
				color: 255 0 0 0;
			}
		}

		part { name: "button_area";
			type: RECT;
			scale: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0 1; to: "mid_padding";}
				rel2 { relative: 1 0; to_x: "elm.text"; to_y: "padding.bottom"; }
                                visible: 1;
			}
		}

		part { name: "rew_btn_area";
			type: RECT;
			scale: 1;
			mouse_events: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0.0 0.5; to: "button_area"; offset: 10 0;}
				rel2 { relative: 0.0 0.5; to: "button_area"; offset: 10 -16;}
				min: BUTTON_SIZE_MIN_MAX;
				fixed: 1 1;
				align: 0.0 0.5;
				visible: 0;
			}
		}

		MC_IMAGE_PART("rew_btn_bg","rew_btn_area",MC_MUSIC_SMALL_BTN_BG,0,0,0,0,0,0,0,0,BUTTON_SIZE_MIN_MAX)
		MC_IMAGE_PART("rew_btn_ef","rew_btn_area",MC_MUSIC_SMALL_BTN_EF,0,0,0,0,0,0,0,0,BUTTON_SIZE_MIN_MAX)
		MC_IMAGE_PART("rew_btn","rew_btn_area",MC_MUSIC_PREV_BTN,61,185,204,255,34,104,115,255,FF_BTN_SIZE_MIN_MAX)
		part { name: "rew_btn_touch_area";
			type: RECT;
			scale: 1;
			mouse_events: 1;
			repeat_events: 1;
			description { state: "default" 0.0;
				rel1 { to: "rew_btn_area"; }
				rel2 { to: "rew_btn_area";}
				color: 0 0 0 0;
			}
		}
		MC_FOCUSED_COVER("rew_btn", "rew_btn_area");

		part { name: "play_pause_btn_area";
			type: SPACER;
			scale: 1;
			mouse_events: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0.4 0.5; to: "button_area"; offset: 0 0;}
				rel2 { relative: 0.4 0.5; to: "button_area"; offset: 0 -16; }
				min: BUTTON_SIZE_MIN_MAX;
				max: BUTTON_SIZE_MIN_MAX;
				fixed: 1 1;
				align:0.0 0.5;
			}
		}

		MC_IMAGE_PART("play_btn_bg","play_pause_btn_area",MC_MUSIC_LAGRE_BTN_BG,61,185,204,255,34,104,115,255,BIG_BTN_SIZE_MIN_MAX)
		MC_IMAGE_PART_FOCUS("play_btn_ef","play_pause_btn_area",MC_MUSIC_LAGRE_BTN_EF,BIG_BTN_SIZE_MIN_MAX)
		MC_IMAGE_PART("play_btn","play_pause_btn_area",MC_MUSIC_PLAY_BTN,255,255,255,255,255,255,255,255,PLAY_BTN_SIZE_MIN_MAX)
		MC_IMAGE_PART("pause_btn","play_pause_btn_area",MC_MUSIC_PAUSE_BTN,255,255,255,255,255,255,255,255,PLAY_BTN_SIZE_MIN_MAX)
		part { name: "play_btn_touch_area";
				type: RECT;
				scale: 1;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					rel1 { to: "play_pause_btn_area"; }
					rel2 { to: "play_pause_btn_area"; }
					color: 0 0 0 0;
				}
		}
		MC_FOCUSED_COVER("play_pause", "play_pause_btn_area");

		part { name: "ff_btn_area";
			type: SPACER;
			scale: 1;
			mouse_events: 1;
			description { state: "default" 0.0;
				rel1 { relative:0.8 0.5; to: "button_area";offset: -10 0;}
				rel2 { relative:0.8 0.5; to: "button_area";offset: -10 -16;}
				min: FF_BTN_SIZE_MIN_MAX;
				max: FF_BTN_SIZE_MIN_MAX;
				fixed: 1 1;
				align:0.0 0.5;
			}
		}
		MC_IMAGE_PART("ff_btn_bg","ff_btn_area",MC_MUSIC_SMALL_BTN_BG,0,0,0,0,0,0,0,0,BUTTON_SIZE_MIN_MAX)
		MC_IMAGE_PART("ff_btn_ef","ff_btn_area",MC_MUSIC_SMALL_BTN_EF,0,0,0,0,0,0,0,0,BUTTON_SIZE_MIN_MAX)
		MC_IMAGE_PART("ff_btn","ff_btn_area",MC_MUSIC_NEXT_BTN,61,185,204,255,34,104,115,255,FF_BTN_SIZE_MIN_MAX)
		part { name: "ff_btn_touch_area";
				type: RECT;
				scale: 1;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					rel1 { to: "ff_btn_area"; }
					rel2 { to: "ff_btn_area";}
					color: 0 0 0 0;
				}
			}
		MC_FOCUSED_COVER("ff_btn", "ff_btn_area");
	}

	programs {
		MC_PROGRAM_IMAGE_VISIBLE("play_btn", "show_play_btn", "hide_play_btn")
		MC_PROGRAM_IMAGE_VISIBLE("pause_btn", "show_pause_btn", "hide_pause_btn")

		program { name: "albumart_cb";
		   signal: "mouse,clicked,1";
		   source: "albumart_image";
			script{
			   emit("albumart_clicked", "edje");
		   }
		}

		program { name: "close_area_btn_down";
		   signal: "mouse,down,1";
		   source: "close_btn_touch_area";
			script{
                           set_state(PART:"close_btn", "pressed", 0.0);
			   emit("close_btn_down", "edje");
		   }
		}

		program { name: "close_area_btn_up";
		   signal: "mouse,up,1";
		   source: "close_btn_touch_area";
			script{
                           set_state(PART:"close_btn", "default", 0.0);
			   emit("close_btn_up", "edje");
		   }
		}

		program { name: "play_pause_btn_area_press";
		   signal: "mouse,down,1";
		   source: "play_btn_touch_area";
			script{
			   set_state(PART:"play_btn_bg", "pressed", 0.0);
			   set_state(PART:"play_btn_ef", "pressed", 0.0);
		   }
		}

		program { name: "play_pause_btn_area_up";
		   signal: "mouse,up,1";
		   source: "play_btn_touch_area";
			script{
			     set_state(PART:"play_btn_bg", "default", 0.0);
			     set_state(PART:"play_btn_ef", "default", 0.0);
		   }
		}

		program { name: "rew_btn_touch_area_press";
		   signal: "mouse,down,1";
		   source: "rew_btn_touch_area";
			script{
                           set_state(PART:"rew_btn_bg", "pressed", 0.0);
			   set_state(PART:"rew_btn_ef", "pressed", 0.0);
			   set_state(PART:"rew_btn", "pressed", 0.0);
		   }
		}

		program { name: "rew_btn_touch_area_up";
		   signal: "mouse,up,1";
		   source: "rew_btn_touch_area";
			script{
			     set_state(PART:"rew_btn_bg", "default", 0.0);
			     set_state(PART:"rew_btn_ef", "default", 0.0);
			     set_state(PART:"rew_btn", "default", 0.0);
		   }
		}

		program { name: "ff_btn_touch_area_press";
		   signal: "mouse,down,1";
		   source: "ff_btn_touch_area";
			script{
                           set_state(PART:"ff_btn_bg", "pressed", 0.0);
			   set_state(PART:"ff_btn_ef", "pressed", 0.0);
			   set_state(PART:"ff_btn", "pressed", 0.0);
		   }
		}

		program { name: "ff_btn_touch_area_up";
		   signal: "mouse,up,1";
		   source: "ff_btn_touch_area";
			script{
			     set_state(PART:"ff_btn_bg", "default", 0.0);
			     set_state(PART:"ff_btn_ef", "default", 0.0);
			     set_state(PART:"ff_btn", "default", 0.0);
		   }
		}

		program { name: "close_area_btn_clicked";
		   signal: "mouse,clicked,1";
		   source: "close_btn_touch_area";
			script{
			   emit("close_btn_clicked", "edje");
		   }
		}

		program{
			name: "albumart_cb_after_down";
			source: "albumart_image";
			signal: "mouse,down,1";
			transition: ACCELERATE 0.02;
		}
		program {
			name: "albumart_cb_down";
			source: "albumart_image";
			signal: "mouse,down,1";
			action: PLAY_SAMPLE "button-pressed" 1.0;
			after:	"albumart_cb_after_down";
			transition: ACCELERATE 0.02;
		}

		program { name: "set_pause_icon";
		   signal: "set_pause";
		   source: "*";
		   script{
				set_state(PART:"play_btn", "hide", 0.0);
				set_state(PART:"pause_btn", "default",0.0);
				set_state(PART:"play_btn_ef", "focus", 0.0);
		   }
		}
		program { name: "set_play_icon";
		   signal: "set_play";
		   source: "*";
		   script{
				set_state(PART:"play_btn", "default", 0.0);
				set_state(PART:"pause_btn", "hide",0.0);
				set_state(PART:"play_btn_ef", "default", 0.0);
		   }
		}
		program { name: "set_ff_btn_uppressed";
		   signal: "ff_btn_unpressed";
		   source: "*";
		   script{
				set_state(PART:"ff_btn_bg", "default", 0.0);
				set_state(PART:"ff_btn_ef", "default", 0.0);
				set_state(PART:"ff_btn", "default", 0.0);
		   }
		}
		program { name: "set_rew_btn_uppressed";
		   signal: "rew_btn_unpressed";
		   source: "*";
		   script{
				set_state(PART:"rew_btn_bg", "default", 0.0);
				set_state(PART:"rew_btn_ef", "default", 0.0);
				set_state(PART:"rew_btn", "default", 0.0);
		   }
		}

        program { name: "touch_snd_rew";
                  signal: "mouse,down,1";
                  source: "rew_btn_touch_area";
                  action: RUN_PLUGIN "touch_sound_plugin";
                }

        program { name: "touch_snd_ff";
                  signal: "mouse,down,1";
                  source: "ff_btn_touch_area";
                  action: RUN_PLUGIN "touch_sound_plugin";
                }
		program { name: "touch_snd_play_pause";
                  signal: "mouse,down,1";
                  source: "play_btn_touch_area";
                  action: RUN_PLUGIN "touch_sound_plugin";
                }
		program { name: "touch_snd_shuffle";
                  signal: "mouse,down,1";
                  source: "shuffle_btn_touch_area";
                  action: RUN_PLUGIN "touch_sound_plugin";
                }
		program { name: "touch_snd_close";
                  signal: "mouse,down,1";
                  source: "close_btn_touch_area";
                  action: RUN_PLUGIN "touch_sound_plugin";
                }
        program { name: "touch_snd_repeat";
                  signal: "mouse,down,1";
                  source: "repeat_btn_touch_area";
                  action: RUN_PLUGIN "touch_sound_plugin";
                }

	}

}


group {
	name: "music-minicontroller-ld";
	images {
		image: MC_MUSIC_LAGRE_BTN_EF COMP;
		image: MC_MUSIC_LAGRE_BTN_BG COMP;
		image: MC_MUSIC_PLAY_BTN COMP;
		image: MC_MUSIC_PAUSE_BTN COMP;
		image: MC_MUSIC_SMALL_BTN_EF COMP;
		image: MC_MUSIC_SMALL_BTN_BG COMP;

		image: MC_MUSIC_CLOSE_BTN  COMP;
		image: MC_MUSIC_PREV_BTN   COMP;
		image: MC_MUSIC_NEXT_BTN   COMP;
	}
	parts {
		part{ name: "bg";
			type : RECT;
			scale : 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min : 0 MINI_H;
				fixed: 1 1;
				rel1{ relative : 0 0;}
				rel2{ relative : 1 1;}
				color: MC_BG;
			}
		}

		part { name: "padding.top";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 0; to: "bg"; }
				rel2 { relative: 1 0; to: "bg"; }
				min: 0 TOP_PADDING;
				fixed: 0 1;
				align: 0 0;
			}
		}

		part { name: "padding.left";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 0; to: "bg"; }
				rel2 { relative: 0 1; to: "bg"; }
				min: LEFT_PADDING 0;
				fixed: 1 0;
				align: 0 0;
			}
		}

		part { name: "padding.right";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1 0; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: RIGHT_PADDING 0;
				fixed: 1 0;
				align: 1 0;
			}
		}

		part { name: "padding.bottom";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 1; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: 0 BOTTOM_PADDING;
				fixed: 0 1;
				align: 0 1;
			}
		}

		part { name: "padding_for_albumart.top";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				rel2 { relative: 1.0 0.0; }
				min: 0 7;
				fixed: 0 1;
				align: 0.0 0.0;
			}
		}

                part { name: "padding_for_albumart.bottom";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0 1; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: 0 7;
				fixed: 0 1;
				align: 0 1;
			}
		}

		part { name: "albumarmt_bg";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1.0 1.0; to_x: "padding.left"; to_y: "padding_for_albumart.top"; }
				rel2 { relative: 1.0 0.0; to_x: "padding.left"; to_y: "padding_for_albumart.bottom"; }
				min: ALBUM_ART_SIZE;
				max: ALBUM_ART_SIZE;
				fixed: 1 1;
				align: 0.0 0.5;
			}
		}
		part { name: "albumart_image";
			type: SWALLOW;
			scale: 1;
			mouse_events: 1;
			clip_to: "albumarmt_bg";
			description { state: "default" 0.0;
				rel1 { relative: 0.5 0.5; to: "albumarmt_bg"; }
				rel2 { relative: 0.5 0.5; to: "albumarmt_bg"; }
				min: ALBUM_ART_SIZE;
				max: ALBUM_ART_SIZE;
				fixed: 1 1;
				align: 0.5 0.5;
			}
		}
		part { name: "albumarmt_frame";
			type: IMAGE;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0.0 0.0; to: "albumarmt_bg";}
				rel2 { relative: 1.0 1.0; to: "albumarmt_bg";}
				min: ALBUM_ART_SIZE;
				image.normal: MC_MUSIC_ALBUM_FRAME;
				color_class:"AO009";
			}
		}

		part { name: "right_area";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1 { relative: 1.0 1.0; to_x: "albumarmt_bg"; to_y: "padding.top"; }
					rel2 { relative: 0.0 0.0; to_x: "padding.right"; to_y: "padding.bottom"; }
					align: 0.0 0.0;
					color:0 255 0 0;
				}
		}
		part { name: "elm.text";		// title
			type: SWALLOW;
			mouse_events: 1;
			scale: 1;
			description { state: "default" 0.0;
			   rel1 { relative: 0.1 1.0; to_x: "right_area"; to_y: "padding.top";}
			   rel2 { relative: 290/329 1.0; to_x: "right_area"; to_y: "padding.top";}
			   fixed: 1 1;
			   align: 0.5 0.0;
			}
		}

		part { name: "mid_padding";
			type: RECT;
			mouse_events: 0;
			scale: 1;
			description
			{       state: "default" 0.0;
				//min: 323 3;
				//max: 323 3;
				fixed: 1 1;
				rel1 { relative: 0.0 1.0; to_x: "right_area"; to_y: "elm.text"; offset: 40 0; }
				rel2 { relative: 1.0 1.0; to_x: "right_area"; to_y: "elm.text"; }
				fixed: 1 1;
				align: 0.0 0.0;
				color: 255 0 0 0;
			}
		}

		part { name: "close_btn_area";
			type: SPACER;
			scale: 1;
			mouse_events: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0.0 0.0; to_x: "padding.right"; to_y: "elm.text";offset: -30 15;}
				rel2 { relative: 0.0 0.0; to: "padding.right";to_y: "elm.text"; offset: -30 15;}
				min: BUTTON_CLOSE_SIZE_MAX;
                max: BUTTON_CLOSE_SIZE_MAX;
				fixed: 1 1;
			}
		}
		MC_IMAGE_PART("close_btn","close_btn_area",MC_MUSIC_CLOSE_BTN,61,185,204,255,61,185,204,255,BUTTON_CLOSE_SIZE_MAX)
                part { name: "close_btn_touch_area";
                        type: RECT;
                        scale: 1;
                        mouse_events: 1;
						repeat_events: 1;
                        description { 
                        		state: "default" 0.0;
                                rel1 { to: "close_btn_area"; offset: -7 -7;}
                                rel2 { to: "close_btn_area"; offset: 7 7;}
                                color: 0 0 0 0;
                        }
                }

		part { name: "button_area";
			type: RECT;
			scale: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0 1; to_x:"elm.text"; to_y: "mid_padding";}
				rel2 { relative: 1 0; to_x: "elm.text"; to_y: "padding.bottom"; }
                visible: 1;
				color: 0 255 0 0;
			}
		}

		part { name: "rew_btn_area";
			type: RECT;
			scale: 1;
			mouse_events: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0.2 0.5; to: "button_area"; offset: 10 0;}
				rel2 { relative: 0.2 0.5; to: "button_area"; offset: 10 -16;}
				min: BUTTON_SIZE_MIN_MAX;
				fixed: 1 1;
				align: 0.0 0.5;
				visible: 0;
			}
		}


		MC_IMAGE_PART("rew_btn_bg","rew_btn_area",MC_MUSIC_SMALL_BTN_BG,0,0,0,0,0,0,0,0,BUTTON_SIZE_MIN_MAX)
		MC_IMAGE_PART("rew_btn_ef","rew_btn_area",MC_MUSIC_SMALL_BTN_EF,0,0,0,0,0,0,0,0,BUTTON_SIZE_MIN_MAX)
		MC_IMAGE_PART("rew_btn","rew_btn_area",MC_MUSIC_PREV_BTN,61,185,204,255,34,104,115,255,FF_BTN_SIZE_MIN_MAX)
		part { name: "rew_btn_touch_area";
			type: RECT;
			scale: 1;
			mouse_events: 1;
			repeat_events: 1;
			description { state: "default" 0.0;
				rel1 { to: "rew_btn_area"; }
				rel2 { to: "rew_btn_area";}
				color: 0 0 0 0;
			}
		}
		MC_FOCUSED_COVER("rew_btn", "rew_btn_area");



		part { name: "play_pause_btn_area";
			type: SPACER;
			scale: 1;
			mouse_events: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0.5 0.5; to: "button_area";offset: 0 0;}
				rel2 { relative: 0.5 0.5; to: "button_area";offset: 0 -16;}
				min: PLAY_BTN_SIZE_MIN_MAX;
				max: PLAY_BTN_SIZE_MIN_MAX;
				fixed: 1 1;
			}
		}


		MC_IMAGE_PART("play_btn_bg","play_pause_btn_area",MC_MUSIC_LAGRE_BTN_BG,61,185,204,255,34,104,115,255,BIG_BTN_SIZE_MIN_MAX)
		MC_IMAGE_PART_FOCUS("play_btn_ef","play_pause_btn_area",MC_MUSIC_LAGRE_BTN_EF,BIG_BTN_SIZE_MIN_MAX)
		MC_IMAGE_PART("play_btn","play_pause_btn_area",MC_MUSIC_PLAY_BTN,255,255,255,255,255,255,255,255,PLAY_BTN_SIZE_MIN_MAX)
		MC_IMAGE_PART("pause_btn","play_pause_btn_area",MC_MUSIC_PAUSE_BTN,255,255,255,255,255,255,255,255,PLAY_BTN_SIZE_MIN_MAX)
		part { name: "play_btn_touch_area";
			type: RECT;
			scale: 1;
			mouse_events: 1;
			repeat_events: 1;
			description { state: "default" 0.0;
				rel1 { to: "play_pause_btn_area"; }
				rel2 { to: "play_pause_btn_area";}
				color: 0 0 0 0;
				fixed: 1 1;
			}
		}
		MC_FOCUSED_COVER("play_pause", "play_pause_btn_area");


		part { name: "ff_btn_area";
			type: SPACER;
			scale: 1;
			mouse_events: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0.7 0.5; to: "button_area";offset: -10 0;}
				rel2 { relative: 0.7 0.5; to: "button_area";offset: -10 -16;}
				min: FF_BTN_SIZE_MIN_MAX;
				max: FF_BTN_SIZE_MIN_MAX;
				fixed: 1 1;
				align:0.0 0.5;
			}
		}

		MC_IMAGE_PART("ff_btn_bg","ff_btn_area",MC_MUSIC_SMALL_BTN_BG,0,0,0,0,0,0,0,0,BUTTON_SIZE_MIN_MAX)
		MC_IMAGE_PART("ff_btn_ef","ff_btn_area",MC_MUSIC_SMALL_BTN_EF,0,0,0,0,0,0,0,0,BUTTON_SIZE_MIN_MAX)
		MC_IMAGE_PART("ff_btn","ff_btn_area",MC_MUSIC_NEXT_BTN,61,185,204,255,34,104,115,255,FF_BTN_SIZE_MIN_MAX)
		part { name: "ff_btn_touch_area";
				type: RECT;
				scale: 1;
				mouse_events: 1;
				repeat_events: 1;
				description { state: "default" 0.0;
					rel1 { to: "ff_btn_area"; }
					rel2 { to: "ff_btn_area";}
					color: 0 0 0 0;
					fixed: 1 1;
				}
		}
		MC_FOCUSED_COVER("ff_btn", "ff_btn_area");
               }

	programs {

		MC_PROGRAM_IMAGE_VISIBLE("play_btn", "show_play_btn", "hide_play_btn")
		MC_PROGRAM_IMAGE_VISIBLE("pause_btn", "show_pause_btn", "hide_pause_btn")

		program { name: "play_pause_btn_area_press";
		   signal: "mouse,down,1";
		   source: "play_btn_touch_area";
			script{
			   set_state(PART:"play_btn_bg", "pressed", 0.0);
			   set_state(PART:"play_btn_ef", "pressed", 0.0);
		   }
		}

		program { name: "play_pause_btn_area_up";
		   signal: "mouse,up,1";
		   source: "play_btn_touch_area";
			script{
			     set_state(PART:"play_btn_bg", "default", 0.0);
			    set_state(PART:"play_btn_ef", "default", 0.0);
		   }
		}

		program { name: "rew_btn_touch_area_press";
		   signal: "mouse,down,1";
		   source: "rew_btn_touch_area";
			script{
			  set_state(PART:"rew_btn_bg", "pressed", 0.0);
			  set_state(PART:"rew_btn_ef", "pressed", 0.0);
			  set_state(PART:"rew_btn", "pressed", 0.0);
		   }
		}

		program { name: "rew_btn_touch_area_up";
		   signal: "mouse,up,1";
		   source: "rew_btn_touch_area";
			script{
			    set_state(PART:"rew_btn_bg", "default", 0.0);
			    set_state(PART:"rew_btn_ef", "default", 0.0);
			    set_state(PART:"rew_btn", "default", 0.0);
		   }
		}

		program { name: "ff_btn_touch_area_press";
		   signal: "mouse,down,1";
		   source: "ff_btn_touch_area";
			script{
			   set_state(PART:"ff_btn_bg", "pressed", 0.0);
			  set_state(PART:"ff_btn_ef", "pressed", 0.0);
			  set_state(PART:"ff_btn", "pressed", 0.0);
		   }
		}

		program { name: "ff_btn_touch_area_up";
		   signal: "mouse,up,1";
		   source: "ff_btn_touch_area";
			script{
			    set_state(PART:"ff_btn_bg", "default", 0.0);
			    set_state(PART:"ff_btn_ef", "default", 0.0);
			    set_state(PART:"ff_btn", "default", 0.0);
		   }
		}

		program { name: "albumart_cb";
		   signal: "mouse,clicked,1";
		   source: "albumart_image";
			script{
			   emit("albumart_clicked", "edje");
		   }
		}
		program{
			name: "albumart_cb_after_down";
			source: "albumart_image";
			signal: "mouse,down,1";
			transition: ACCELERATE 0.02;
		}
		program {
			name: "albumart_cb_down";
			source: "albumart_image";
			signal: "mouse,down,1";
			action: PLAY_SAMPLE "button-pressed" 1.0;
			after:	"albumart_cb_after_down";
			transition: ACCELERATE 0.02;
		}

		program { name: "close_area_btn_down";
		   signal: "mouse,down,1";
		   source: "close_btn_touch_area";
			script{
                           set_state(PART:"close_btn", "pressed", 0.0);
			   emit("close_btn_down", "edje");
		   }
		}

		program { name: "close_area_btn_up";
		   signal: "mouse,up,1";
		   source: "close_btn_touch_area";
			script{
                           set_state(PART:"close_btn", "default", 0.0);
			   emit("close_btn_up", "edje");
		   }
		}

		program { name: "close_area_btn_clicked";
		   signal: "mouse,up,1";
		   source: "close_btn_touch_area";
			script{
			   emit("close_btn_clicked", "edje");
		   }
		}

		program { name: "set_pause_icon";
		   signal: "set_pause";
		   source: "*";
		   script{
				set_state(PART:"play_btn", "hide", 0.0);
				set_state(PART:"pause_btn", "default",0.0);
				set_state(PART:"play_btn_ef", "focus", 0.0);
		   }
		}
		program { name: "set_play_icon";
		   signal: "set_play";
		   source: "*";
		   script{
				set_state(PART:"play_btn", "default", 0.0);
				set_state(PART:"pause_btn", "hide",0.0);
				set_state(PART:"play_btn_ef", "default", 0.0);
		   }
		}

		program { name: "set_ff_btn_uppressed";
		   signal: "ff_btn_unpressed";
		   source: "*";
		   script{
				set_state(PART:"ff_btn_bg", "default", 0.0);
				set_state(PART:"ff_btn_ef", "default", 0.0);
				set_state(PART:"ff_btn", "default", 0.0);
		   }
		}
		program { name: "set_rew_btn_uppressed";
		   signal: "rew_btn_unpressed";
		   source: "*";
		   script{
				set_state(PART:"rew_btn_bg", "default", 0.0);
				set_state(PART:"rew_btn_ef", "default", 0.0);
				set_state(PART:"rew_btn", "default", 0.0);
		   }
		}
        program { name: "touch_snd_rew";
                  signal: "mouse,down,1";
                  source: "rew_btn_touch_area";
                  action: RUN_PLUGIN "touch_sound_plugin";
                }

        program { name: "touch_snd_ff";
                  signal: "mouse,down,1";
                  source: "ff_btn_touch_area";
                  action: RUN_PLUGIN "touch_sound_plugin";
                }
		program { name: "touch_snd_play_pause";
                  signal: "mouse,down,1";
                  source: "play_btn_touch_area";
                  action: RUN_PLUGIN "touch_sound_plugin";
                }
		program { name: "touch_snd_shuffle";
                                signal: "mouse,down,1";
                                source: "shuffle_btn_touch_area";
                  action: RUN_PLUGIN "touch_sound_plugin";
                }
		program { name: "touch_snd_close";
                  signal: "mouse,down,1";
                  source: "close_btn_touch_area";
                  action: RUN_PLUGIN "touch_sound_plugin";
                }
        program { name: "touch_snd_repeat";
                  signal: "mouse,down,1";
                  source: "repeat_btn_touch_area";
                  action: RUN_PLUGIN "touch_sound_plugin";
                }

       }
}

} // collection
