/* 
* Copyright (c) 2000-2015 Samsung Electronics Co., Ltd All Rights Reserved
*
* Licensed under the Apache License, Version 2.0 (the "License"); 
* you may not use this file except in compliance with the License. 
* You may obtain a copy of the License at 
* 
* http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS, 
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
* See the License for the specific language governing permissions and 
* limitations under the License. 
* 
*/

#define NAVIFRAME_ICON_RIGHT_PADDING_INC 16 0
#define NAVIFRAME_BASE_COLOR_INC 248 246 239 255
#define NAVIFRAME_VIEW_PUSH_TRANS_TIME 0.2
#define NAVIFRAME_VIEW_POP_TRANS_TIME 0.3
#define MP_NAVIFRAME_TITLE_BG_COLOR_INC 248 246 239 255
#define MP_NAVIFRAME_TITLE_BG_COLOR_BLACK_INC MP_COLOR_BG_BLACK
#define MP_NAVIFRAME_TOOLBAR_BG_COLOR_INC 248 246 239 0
#define MP_NAVIFRAME_TITLE_TOP_PADDING_INC 0 32
#define MP_NAVIFRAME_TITLE_RIGHT_PADDING_INC 17 0
#define MP_NAVIFRAME_TITLE_TOOLBAR_TOP_PADDING_INC 0 33
#define MP_NAVIFRAME_TITLE_TOOLBAR_BOTTOM_PADDING_INC 0 8
//modify MP_NAVIFRAME_TITLE_H_INC 100 to 165 in black style
#define MP_NAVIFRAME_TITLE_H_INC 165
#define MP_NAVIFRAME_TAB_TITLE_H_INC 165
#define MP_NAVIFRAME_TOOLBAR_HEIGHT_INC 98
//modify btn size 86 111 to 63 63 in black style
#define MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC 63 63
#define MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC 86 98
#define MP_NAVIFRAME_TITLE_TAB_H_INC 68
#define MP_NAVIFRAME_TITLE_TAB_LARGE_H_INC 111
#define MP_NAVIFRAME_TITLE_TAB_FONT_SIZE_INC 44
#define MP_NAVIFRAME_TITLE_TAB_TEXT_H_INC 87
#define MP_NAVIFRAME_TITLE_FONT_SIZE_INC 56
#define MP_NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC 44
#define MP_NAVIFRAME_ICON_SIZE_INC 38 38
#define MP_NAVIFRAME_PADDING_INC 16 0
#define MP_NAVIFRAME_PADDING2_INC 9 0
#define MP_NAVIFRAME_PADDING3_INC 8 0
#define MP_NAVIFRAME_BOTTOM_TEXT_PADDING_INC 0 11
#define MP_NAVIFRAME_BOTTOM_PADDING_INC 0 10
#define MP_NAVIFRAME_BADGE_PADDING_INC 78 0
#define MP_NAVIFRAME_BADGE_BOTTOM_TEXT_PADDING_INC 0 13
#define MP_NAVIFRAME_BADGE_LEFT_TEXT_PADDING_INC 10 0
#define MP_NAVIFRAME_BADGE_TEXT_H_INC 43
#define MP_NAVIFRAME_BADGE_BG_IMAGE_SIZE_INC 60 56
#define MP_NAVIFRAME_BADGE_BG_IMAGE_BORDER_INC 8 8 8 21
#define MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC 115 0
#define MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 15
#define MP_NAVIFRAME_ICON_PADDING_INC 70 0
#define MP_NAVIFRAME_TITLE_TEXT_COLOR_INC 59 115 182 255
#define MP_NAVIFRAME_TITLE_STYLE_COLOR_INC "#3B73B6"
#define MP_NAVIFRAME_SUBTITLE_TEXT_COLOR_INC 128 128 128 255
#define MP_NAVIFRAME_SUBTITLE_FONT_SIZE_INC 32
#define MP_NAVIFRAME_LEFT_BUTTON_PT_SIZE 63 92
#define MP_NAVIFRAME_LEFT_BUTTON_LD_SIZE  63 86
#define NAVIFRAME_BG_COLOR 250 250 250 255
#define NAVIFRAME_BADGE_PADDING_W_INC 83

#define SCREEN_WIDTH 720
#define SCREEN_HIGHT 1280

   group { name:"elm/naviframe/item/basic/music/default";
   	alias:"elm/naviframe/item/miniplayer/music/default";
      data.item: "tizen_zoom" 1;
      images {
         image: "M01_title_bubble.png" COMP;
      }
      script {
         public tbar_bg = 0;     //Toolbar BG Show call count
         public toolbar_buttons_visible = 0; //when both toolbar buttons are visible
         public title_toolbar_buttons_visible = 0; //when both title toolbar buttons are visible
         public tbar_close = 0; //Toolbar lastest Open/Close status
         public sip_visible = 0; //SIP latest visible/hidden status
         public title_slide_visible = 0; //Title slide visible/hidden status
      }
      parts {
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
               visible: 1;
            }
            description { state: "hide" 0.0;
               visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               color: MP_NAVIFRAME_TITLE_BG_COLOR_BLACK_INC;
            }
         }
         part { name: "title_toolbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
               color: MP_NAVIFRAME_TITLE_BG_COLOR_BLACK_INC;//change color to black
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 MP_NAVIFRAME_TITLE_H_INC;
               visible: 1;
            }
         }
         part { name: "title_toolbar_top_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_TOOLBAR_TOP_PADDING_INC;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_toolbar_bg"; }
               rel2 { relative: 1.0 0.0; to: "title_toolbar_bg"; }
               visible: 0;
            }
         }
         part { name: "title_toolbar_bottom_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_TOOLBAR_BOTTOM_PADDING_INC;
               fixed: 0 1;
               align: 0.0 1.0;
               rel1 { relative: 0.0 1.0; to: "title_toolbar_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_toolbar_bg"; }
               visible: 0;
            }
         }
         part { name: "title_more_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 1.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_top_padding"; }
               rel2 { relative: 0.0 0.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_bottom_padding"; }
               visible: 0;
            }
         }
         part { name: "title_prev_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 1;
               align: 1.0 0.0;
               rel1 { relative: 1.0 1.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_top_padding"; }
               rel2 { relative: 1.0 0.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_bottom_padding"; }
               visible: 0;
            }
         }
         part { name: "title_toolbar_btns_area";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "title_more_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_prev_btn_bg"; }
               visible: 0;
            }
         }
         part { name: "title_toolbar_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { to: "title_toolbar_bg"; }
               rel2 { to: "title_toolbar_bg"; }
            }
         }
         part { name: "title_toolbar_button_padding";
            type: RECT;
            scale : 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 0;
               max: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 9999;
               fixed : 1 0;
               visible: 0;
               align: 0.5 0.5;
               rel1.to: "title_toolbar_btns_area";
               rel2.to: "title_toolbar_btns_area";
            }
         }
         part { name: "title_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 MP_NAVIFRAME_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
               color: MP_NAVIFRAME_TITLE_BG_COLOR_BLACK_INC;//change color to black
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to: "title_bg"; }
               rel2 { to: "title_bg"; }
            }
         }
         part { name: "top_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_TOP_PADDING_INC;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 0.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "right_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_RIGHT_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "padding_center_text1";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_bg"; }
               visible: 0;
            }
            description { state: "icon" 0.0;
               inherit: "default" 0.0;
               min: MP_NAVIFRAME_ICON_PADDING_INC;
            }
         }
	 part { name: "toolbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
               color: MP_NAVIFRAME_TOOLBAR_BG_COLOR_INC;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 0 MP_NAVIFRAME_TOOLBAR_HEIGHT_INC;
               max: 999999 MP_NAVIFRAME_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "toolbar_btns_area";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "more_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "prev_btn_bg"; }
               visible: 0;
            }
         }
         part { name: "toolbar_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to: "toolbar_bg"; }
               rel2 { to: "toolbar_bg"; }
            }
         }
         part { name: "toolbar_button1";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "toolbar_btns_area";
               rel2.to: "toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 1.0 0.5;
               rel2 {
                  relative: 0.0 1.0;
                  to: "toolbar_button_padding";
               }
            }
         }
         part { name: "toolbar_button_padding";
            type: RECT;
            scale : 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 0;
               max: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 9999;
               fixed : 1 0;
               visible: 0;
               align: 0.5 0.5;
               rel1.to: "toolbar_btns_area";
               rel2.to: "toolbar_btns_area";
            }
         }
         part { name: "toolbar_button2";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "toolbar_btns_area";
               rel2.to: "toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to: "toolbar_button_padding";
               }
            }
         }
	part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "base";
               rel1.to_y: "title_bg";
	       rel2.relative: 1.0 1.0;
               rel2.to: "base";
            }
            description { state: "sip_visible" 0.0;
               inherit: "default" 0.0;
               rel1.to_y: "title_toolbar_bg";
            }
         }
	part { name: "more_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "toolbar_bg"; }
               rel2 { relative: 0.0 1.0; to: "toolbar_bg"; }
               visible: 0;
            }
         }
         part { name: "toolbar_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               visible: 0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               rel1.to: "more_btn_bg";
               rel2.to: "more_btn_bg";
            }
         }
         part { name: "prev_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "toolbar_bg"; }
               rel2.to: "toolbar_bg";
               visible: 0;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               visible: 0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "prev_btn_bg";
               rel2.to: "prev_btn_bg";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.content";
               rel2.to: "elm.swallow.content";
            }
         }
         part { name: "padding_center_text2";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_PADDING2_INC;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_left_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_left_btn_bg"; }
               visible: 0;
            }
         }
         part { name: "padding_bottom_text";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_BOTTOM_TEXT_PADDING_INC;
               fixed: 0 1;
               align: 0.0 1.0;
               rel1 { relative: 0.0 1.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "badge_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 0.0 0.0; to: "padding_center_text2"; }
               rel2 { relative: 0.0 1.0; to: "padding_center_text2"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: MP_NAVIFRAME_BADGE_PADDING_INC;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Medium";
                  size: MP_NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               color: MP_NAVIFRAME_TITLE_TEXT_COLOR_INC;
               color3: 255 255 255 255;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 { relative: 1.0 1.0; to_x: "padding_center_text1"; to_y: "top_padding"; }
               rel2 { relative: 0.0 0.0; to_x: "badge_padding"; to_y: "padding_bottom_text"; }
            }
            description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               text { font: "Tizen:style=Medium";
                  size: MP_NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.2;
               }
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to_x: "padding_center_text1"; to_y: "top_padding"; }
            }
         }
         part { name: "elm.text.subtitle";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Medium";
                  size: MP_NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 1.0;
               }
               color: MP_NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
               align: 0.0 1.0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "padding_center_text1";
                  to_y: "elm.text.title";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to_x: "padding_center_text2";
                  to_y: "elm.text.title";
               }
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to: "elm.text.title"; }
               fixed: 1 0;
               min: MP_NAVIFRAME_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "badge_left_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_PADDING2_INC;
               fixed: 1 0;
               rel1 { relative: 1.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 1.0 1.0; to: "elm.text.title"; }
               align: 0.0 0.0;
            }
         }
         part { name: "badge_top_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_BADGE_BOTTOM_TEXT_PADDING_INC;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to_x: "title_bg"; to_y: "elm.text.title"; }
               rel2 { relative: 1.0 0.0; to_x: "title_bg"; to_y: "elm.text.title"; }
               align: 0.0 0.0;
            }
         }
         part { name: "badge_bg";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               fixed: 1 1;
               rel1 { relative: 1.0 1.0; to_x: "badge_left_padding"; to_y: "badge_top_padding"; }
               rel2 { relative: 1.0 1.0; to_x: "badge_left_padding"; to_y: "badge_top_padding"; }
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 0.0 0.0;
               image {
                  normal: "M01_title_bubble.png";
                  border: MP_NAVIFRAME_BADGE_BG_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: MP_NAVIFRAME_BADGE_BG_IMAGE_SIZE_INC;
               fixed: 1 1;
            }
         }
         part { name: "badge_left_text_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_BADGE_LEFT_TEXT_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "badge_bg"; }
               rel2 { relative: 0.0 1.0; to: "badge_bg"; }
            }
         }
         part { name: "badge_right_text_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_BADGE_LEFT_TEXT_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "badge_bg"; }
               rel2 { relative: 1.0 1.0; to: "badge_bg"; }
            }
         }
         part { name: "badge_bottom_text_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_BADGE_BOTTOM_TEXT_PADDING_INC;
               fixed: 0 1;
               align: 0.0 1.0;
               rel1 { relative: 0.0 1.0; to: "badge_bg"; }
               rel2 { relative: 1.0 1.0; to: "badge_bg"; }
            }
         }
         part { name: "title_badge";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 MP_NAVIFRAME_BADGE_TEXT_H_INC;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to_x: "badge_left_text_padding"; to_y: "badge_bottom_text_padding"; }
               rel2 { relative: 0.0 0.0; to_x: "badge_right_text_padding"; to_y: "badge_bottom_text_padding"; }
               align: 0.5 1.0;
               color: 255 255 255 255;
               text {
                  font: "Tizen:style=Medium";
                  size: 34;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             type: RECT;
             mouse_events: 1;
             description { state: "default" 0.0;
                rel1 { to: "title_bg"; }
                rel2 { to: "title_bg"; }
                color: 0 0 0 0;
             }
         }
         part { name: "elm.swallow.title";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            repeat_events: 1;
            description { state: "default" 0.0;
               align: 0.5 0.5;
               fixed: 1 1;
               rel1 { relative: 113/SCREEN_WIDTH 26/SCREEN_HIGHT; offset: 15 0;}
               rel2 { relative: 607/SCREEN_WIDTH 134/SCREEN_HIGHT;}
            }
	    description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1 { relative: 113/SCREEN_WIDTH 26/SCREEN_HIGHT;offset: 15 0;}
               rel2 { relative: 607/SCREEN_WIDTH 94/SCREEN_HIGHT;}
            }
         }
	 part { name: "elm.swallow.subtitle";
            type: SWALLOW;
            scale: 1;
            repeat_events: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
			   align: 0.5 0.5;
               rel1 { relative: 113/SCREEN_WIDTH 94/SCREEN_HIGHT;offset: 15 0;}
               rel2 { relative: 607/SCREEN_WIDTH 134/SCREEN_HIGHT;}
            }
         }
         part { name: "access.title";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "title_bg";
               rel2.to: "title_bg";
               color: 0 0 0 0;
            }
         }
         part { name: "title_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_more_btn_bg";
               rel2.to: "title_more_btn_bg";
            }
         }
         part { name: "title_prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_prev_btn_bg";
               rel2.to: "title_prev_btn_bg";
            }
         }
         part { name: "title_left_btn_bg";
            type: RECT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 34/SCREEN_WIDTH 51/SCREEN_HIGHT; }
               rel2 { relative: 97/SCREEN_WIDTH 114/SCREEN_HIGHT; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "title_left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1 { to: "title_left_btn_bg"; }
               rel2 { to: "title_left_btn_bg"; }
            }
         }
         part { name: "title_toolbar_button1";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_toolbar_btns_area";
               rel2.to: "title_toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 1.0 0.5;
               rel2 {
                  relative: 0.0 1.0;
                  to: "title_toolbar_button_padding";
               }
            }
         }
         part { name: "title_toolbar_button2";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_toolbar_btns_area";
               rel2.to: "title_toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to: "title_toolbar_button_padding";
               }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_ICON_SIZE_INC;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "title_right_btn_bg";
            type: RECT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 623/SCREEN_WIDTH 51/SCREEN_HIGHT; }
               rel2 { relative: 686/SCREEN_WIDTH 114/SCREEN_HIGHT; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "title_right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               align: 0.5 0.5;
               fixed: 1 1;
               rel1 { to: "title_right_btn_bg";}
               rel2 { to: "title_right_btn_bg";}
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "clipper";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
         program { name: "invisible";
            signal: "elm,state,invisible";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "clipper";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               if (get_int(sip_visible) == 0)
                 set_state(PART:"title_bg", "default", 0.0);
               else
                 set_state(PART:"title_toolbar_bg", "show", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            script {
               if (get_int(sip_visible) == 0)
                 set_state(PART:"title_bg", "hide", 0.0);
               else
                 set_state(PART:"title_toolbar_bg", "default", 0.0);
            }
         }
         program { name: "subtitle_show";
            signal: "elm,state,subtitle,show";
            source: "elm";
            script {
               set_state(PART:"elm.text.title", "subtitle_is_set", 0.0);
            }
         }
         program { name: "subtitle_hide";
            signal: "elm,state,subtitle,hide";
            source: "elm";
            script {
               set_state(PART:"elm.text.title", "default", 0.0);
            }
         }
	 program {
            name: "title_slide_show";
            signal: "elm,state,elm.swallow.title,show";
            source: "elm";
            script {
               set_int(title_slide_visible, 1);
            }
         }
         program {
            name: "title_slide_hide";
            signal: "elm,state,elm.swallow.title,hide";
            source: "elm";
            script {
               set_int(title_slide_visible, 0);
            }
         }
	 program {
            name: "subtitle_slide_show";
            signal: "elm,state,elm.swallow.subtitle,show";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.title", "subtitle_is_set", 0.0);
            }
         }
         program {
            name: "subtitle_slide_hide";
            signal: "elm,state,elm.swallow.subtitle,hide";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.title", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,show";
            source: "elm";
            action: STATE_SET "icon" 0.0;
            target: "padding_center_text1";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "padding_center_text1";
         }
         program { name: "left_btn_show";
            signal: "elm,state,title_left_btn,show";
            source: "elm";
            script {
               set_state(PART:"title_left_btn_bg", "visible", 0.0);
            }
         }
         program { name: "left_btn_hide";
            signal: "elm,state,title_left_btn,hide";
            source: "elm";
            script {
                 set_state(PART:"title_left_btn_bg", "default", 0.0);
            }
         }
         program { name: "right_btn_show";
            signal: "elm,state,title_right_btn,show";
            source: "elm";
            script {
               set_state(PART:"title_right_btn_bg", "visible", 0.0);
            }
         }
         program { name: "right_btn_hide";
            signal: "elm,state,title_right_btn,hide";
            source: "elm";
            script {
                 set_state(PART:"title_right_btn_bg", "default", 0.0);
            }
         }
         program { name: "sip_show";
            signal: "elm,state,sip,shown";
            source: "";
            script {
               set_int(sip_visible, 1);
               set_state(PART:"title_bg", "hide", 0.0);
               set_state(PART:"elm.swallow.content", "sip_visible", 0.0);
               set_state(PART:"title_toolbar_bg", "show", 0.0);
            }
         }
         program { name: "sip_hide";
            signal: "elm,state,sip,hidden";
            source: "";
            script {
               set_int(sip_visible, 0);
               set_state(PART:"title_bg", "default", 0.0);
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"title_toolbar_bg", "default", 0.0);
            }
         }
         program { name: "title_toolbar_button1_show";
            signal: "elm,state,title_toolbar_button1,show";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) + 1);
               if (get_int(title_toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"title_toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"title_toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "title_toolbar_button1_hide";
            signal: "elm,state,title_toolbar_button1,hide";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) - 1);
               set_state(PART:"title_toolbar_button1", "default", 0.0);
               set_state(PART:"title_toolbar_button2", "default", 0.0);
            }
         }
         program { name: "title_toolbar_button2_show";
            signal: "elm,state,title_toolbar_button2,show";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) + 1);
               if (get_int(title_toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"title_toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"title_toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "title_toolbar_button2_hide";
            signal: "elm,state,title_toolbar_button2,hide";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) - 1);
               set_state(PART:"title_toolbar_button1", "default", 0.0);
               set_state(PART:"title_toolbar_button2", "default", 0.0);
            }
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
            }
         }
         program { name: "more_btn_show";
            signal: "elm,state,toolbar_more_btn,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
            }
         }
         program { name: "more_btn_hide";
            signal: "elm,state,toolbar_more_btn,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
            }
         }
         program { name: "toolbar_button1_show";
            signal: "elm,state,toolbar_button1,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) + 1);
               if (get_int(toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "toolbar_button1_hide";
            signal: "elm,state,toolbar_button1,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) - 1);
               set_state(PART:"toolbar_button1", "default", 0.0);
               set_state(PART:"toolbar_button2", "default", 0.0);
            }
         }
         program { name: "toolbar_button2_show";
            signal: "elm,state,toolbar_button2,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) + 1);
               if (get_int(toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "toolbar_button2_hide";
            signal: "elm,state,toolbar_button2,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) - 1);
               set_state(PART:"toolbar_button1", "default", 0.0);
               set_state(PART:"toolbar_button2", "default", 0.0);
            }
         }
         program { name: "toolbar_bg_show";
            signal: "elm,state,toolbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"toolbar_bg", "visible", 0.0);
               set_int(tbar_bg, get_int(tbar_bg) + 1);
            }
         }
         program { name: "toolbar_bg_hide";
            signal: "elm,state,toolbar_bg,hide";
            source: "elm";
            script {
               set_int(tbar_bg, get_int(tbar_bg) - 1);
               if (get_int(tbar_bg) <= 0)
                 set_state(PART:"toolbar_bg", "default", 0.0);
            }
         }
         program { name: "toolbar_open_internal";
            signal: "elm,state,toolbar,open,internal";
            source: "elm";
            script {
               set_int(tbar_close, 0);
               set_state(PART:"toolbar_bg", "visible", 0.0);
            }
         }
         program { name: "toolbar_close_internal";
            signal: "elm,state,toolbar,close,internal";
            source: "elm";
            script {
               set_int(tbar_close, 1);
               set_state(PART:"toolbar_bg", "default", 0.0);
            }
         }
         program { name: "toolbar_open";
            signal: "elm,state,toolbar,open";
            source: "";
            action: STATE_SET "visible" 0.0;
            target: "toolbar_bg";
            transition: LINEAR 0.2;
            after: "toolbar_open_internal";
         }
         program { name: "toolbar_close";
            signal: "elm,state,toolbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "toolbar_bg";
            transition: LINEAR 0.2;
            after: "toolbar_close_internal";
         }
         program { name: "toolbar_instant_open";
            signal: "elm,state,toolbar,instant_open";
            source: "";
            script {
               emit("elm,state,toolbar,open,internal", "elm");
            }
         }
         program { name: "toolbar_instant_close";
            signal: "elm,state,toolbar,instant_close";
            source: "";
            script {
               emit("elm,state,toolbar,close,internal", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
         program {
            name: "display_mode_compress";
            signal: "display,mode,compress";
            source: "";
            script {
               set_state(PART:"toolbar_bg", "default", 0.0);
            }
         }
         program {
            name: "display_mode_default";
            signal: "display,mode,default";
            source: "";
            script {
               if ((get_int(tbar_bg) > 0) && (get_int(tbar_close) == 0))
                  set_state(PART:"toolbar_bg", "visible", 0.0);
            }
         }
         program {
            name: "badge_show";
            signal: "elm,state,title_badge,show";
            source: "elm";
            script {
               set_state(PART:"badge_padding", "show", 0.0);
               set_state(PART:"badge_bg", "show", 0.0);
               set_state(PART:"title_badge", "show", 0.0);
            }
         }
         program {
            name: "badge_hide";
            signal: "elm,state,title_badge,hide";
            source: "elm";
            script {
               set_state(PART:"badge_padding", "default", 0.0);
               set_state(PART:"badge_bg", "default", 0.0);
               set_state(PART:"title_badge", "default", 0.0);
            }
         }
      }
   }

  group { name:"elm/naviframe/item/basic/music/ld/default";
   	alias:"elm/naviframe/item/miniplayer/music/ld/default";
      data.item: "tizen_zoom" 1;
      images {
         image: "M01_title_bubble.png" COMP;
      }
      script {
         public tbar_bg = 0;     //Toolbar BG Show call count
         public toolbar_buttons_visible = 0; //when both toolbar buttons are visible
         public title_toolbar_buttons_visible = 0; //when both title toolbar buttons are visible
         public tbar_close = 0; //Toolbar lastest Open/Close status
         public sip_visible = 0; //SIP latest visible/hidden status
         public title_slide_visible = 0; //Title slide visible/hidden status
      }
      parts {
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
               visible: 1;
            }
            description { state: "hide" 0.0;
               visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               color: MP_NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "title_toolbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
               color: MP_NAVIFRAME_TITLE_BG_COLOR_INC;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 MP_NAVIFRAME_TITLE_H_INC;
               visible: 1;
            }
         }
         part { name: "title_toolbar_top_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_TOOLBAR_TOP_PADDING_INC;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_toolbar_bg"; }
               rel2 { relative: 1.0 0.0; to: "title_toolbar_bg"; }
               visible: 0;
            }
         }
         part { name: "title_toolbar_bottom_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_TOOLBAR_BOTTOM_PADDING_INC;
               fixed: 0 1;
               align: 0.0 1.0;
               rel1 { relative: 0.0 1.0; to: "title_toolbar_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_toolbar_bg"; }
               visible: 0;
            }
         }
         part { name: "title_more_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 1.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_top_padding"; }
               rel2 { relative: 0.0 0.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_bottom_padding"; }
               visible: 0;
            }
         }
         part { name: "title_prev_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 1;
               align: 1.0 0.0;
               rel1 { relative: 1.0 1.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_top_padding"; }
               rel2 { relative: 1.0 0.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_bottom_padding"; }
               visible: 0;
            }
         }
         part { name: "title_toolbar_btns_area";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "title_more_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_prev_btn_bg"; }
               visible: 0;
            }
         }
         part { name: "title_toolbar_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { to: "title_toolbar_bg"; }
               rel2 { to: "title_toolbar_bg"; }
            }
         }
         part { name: "title_toolbar_button_padding";
            type: RECT;
            scale : 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 0;
               max: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 9999;
               fixed : 1 0;
               visible: 0;
               align: 0.5 0.5;
               rel1.to: "title_toolbar_btns_area";
               rel2.to: "title_toolbar_btns_area";
            }
         }
         part { name: "title_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 MP_NAVIFRAME_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
               color: MP_NAVIFRAME_TITLE_BG_COLOR_INC;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to: "title_bg"; }
               rel2 { to: "title_bg"; }
            }
         }
         part { name: "top_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_TOP_PADDING_INC;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 0.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "right_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_RIGHT_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "padding_center_text1";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 600 0;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_bg"; }
               visible: 0;
            }
            description { state: "icon" 0.0;
               inherit: "default" 0.0;
               min: MP_NAVIFRAME_ICON_PADDING_INC;
            }
         }
	 part { name: "toolbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
               color: MP_NAVIFRAME_TOOLBAR_BG_COLOR_INC;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 0 MP_NAVIFRAME_TOOLBAR_HEIGHT_INC;
               max: 999999 MP_NAVIFRAME_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "toolbar_btns_area";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "more_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "prev_btn_bg"; }
               visible: 0;
            }
         }
         part { name: "toolbar_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to: "toolbar_bg"; }
               rel2 { to: "toolbar_bg"; }
            }
         }
         part { name: "toolbar_button1";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "toolbar_btns_area";
               rel2.to: "toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 1.0 0.5;
               rel2 {
                  relative: 0.0 1.0;
                  to: "toolbar_button_padding";
               }
            }
         }
         part { name: "toolbar_button_padding";
            type: RECT;
            scale : 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 0;
               max: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 9999;
               fixed : 1 0;
               visible: 0;
               align: 0.5 0.5;
               rel1.to: "toolbar_btns_area";
               rel2.to: "toolbar_btns_area";
            }
         }
         part { name: "toolbar_button2";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "toolbar_btns_area";
               rel2.to: "toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to: "toolbar_button_padding";
               }
            }
         }
	part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;//0.0 1.0;
               rel1.to: "base";
               //rel1.to_x: "base";
               //rel1.to_y: "title_bg";
	       rel2.relative: 1.0 1.0;
               rel2.to: "base";
            }
            description { state: "sip_visible" 0.0;
               inherit: "default" 0.0;
               rel1.to_y: "title_toolbar_bg";
            }
         }
	part { name: "more_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 560/1280 0.0; to: "toolbar_bg"; }
               rel2 { relative: 560/1280 1.0; to: "toolbar_bg"; }
               visible: 0;
            }
         }
         part { name: "toolbar_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               visible: 0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               rel1.to: "more_btn_bg";
               rel2.to: "more_btn_bg";
            }
         }
         part { name: "prev_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "toolbar_bg"; }
               rel2.to: "toolbar_bg";
               visible: 0;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               visible: 0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "prev_btn_bg";
               rel2.to: "prev_btn_bg";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.content";
               rel2.to: "elm.swallow.content";
            }
         }
         part { name: "padding_center_text2";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_PADDING2_INC;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_left_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_left_btn_bg"; }
               visible: 0;
            }
         }
         part { name: "padding_bottom_text";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_BOTTOM_TEXT_PADDING_INC;
               fixed: 0 1;
               align: 0.0 1.0;
               rel1 { relative: 0.0 1.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "badge_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 0.0 0.0; to: "padding_center_text2"; }
               rel2 { relative: 0.0 1.0; to: "padding_center_text2"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: MP_NAVIFRAME_BADGE_PADDING_INC;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Medium";
                  size: MP_NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               color: MP_NAVIFRAME_TITLE_TEXT_COLOR_INC;
               color3: 255 255 255 255;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 { relative: 1.0 1.0; to_x: "padding_center_text1"; to_y: "top_padding"; }
               rel2 { relative: 0.0 0.0; to_x: "badge_padding"; to_y: "padding_bottom_text"; }
            }
            description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               text { font: "Tizen:style=Medium";
                  size: MP_NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.2;
               }
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to_x: "padding_center_text1"; to_y: "top_padding"; }
            }
         }
         part { name: "elm.text.subtitle";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Medium";
                  size: MP_NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 1.0;
               }
               color: MP_NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
               align: 0.0 1.0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "padding_center_text1";
                  to_y: "elm.text.title";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to_x: "padding_center_text2";
                  to_y: "elm.text.title";
               }
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to: "elm.text.title"; }
               fixed: 1 0;
               min: MP_NAVIFRAME_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "badge_left_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_PADDING2_INC;
               fixed: 1 0;
               rel1 { relative: 1.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 1.0 1.0; to: "elm.text.title"; }
               align: 0.0 0.0;
            }
         }
         part { name: "badge_top_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_BADGE_BOTTOM_TEXT_PADDING_INC;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to_x: "title_bg"; to_y: "elm.text.title"; }
               rel2 { relative: 1.0 0.0; to_x: "title_bg"; to_y: "elm.text.title"; }
               align: 0.0 0.0;
            }
         }
         part { name: "badge_bg";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               fixed: 1 1;
               rel1 { relative: 1.0 1.0; to_x: "badge_left_padding"; to_y: "badge_top_padding"; }
               rel2 { relative: 1.0 1.0; to_x: "badge_left_padding"; to_y: "badge_top_padding"; }
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 0.0 0.0;
               image {
                  normal: "M01_title_bubble.png";
                  border: MP_NAVIFRAME_BADGE_BG_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: MP_NAVIFRAME_BADGE_BG_IMAGE_SIZE_INC;
               fixed: 1 1;
            }
         }
         part { name: "badge_left_text_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_BADGE_LEFT_TEXT_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "badge_bg"; }
               rel2 { relative: 0.0 1.0; to: "badge_bg"; }
            }
         }
         part { name: "badge_right_text_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_BADGE_LEFT_TEXT_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "badge_bg"; }
               rel2 { relative: 1.0 1.0; to: "badge_bg"; }
            }
         }
         part { name: "badge_bottom_text_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_BADGE_BOTTOM_TEXT_PADDING_INC;
               fixed: 0 1;
               align: 0.0 1.0;
               rel1 { relative: 0.0 1.0; to: "badge_bg"; }
               rel2 { relative: 1.0 1.0; to: "badge_bg"; }
            }
         }
         part { name: "title_badge";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 MP_NAVIFRAME_BADGE_TEXT_H_INC;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to_x: "badge_left_text_padding"; to_y: "badge_bottom_text_padding"; }
               rel2 { relative: 0.0 0.0; to_x: "badge_right_text_padding"; to_y: "badge_bottom_text_padding"; }
               align: 0.5 1.0;
               color: 255 255 255 255;
               text {
                  font: "Tizen:style=Medium";
                  size: 34;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             type: RECT;
             mouse_events: 1;
             repeat_events: 1;
             description { state: "default" 0.0;
                rel1 { to: "title_bg"; }
                rel2 { to: "title_bg"; }
                color: 0 0 0 0;
             }
         }
         part { name: "elm.swallow.title";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            repeat_events: 1;
            description { state: "default" 0.0;
               align: 0.5 0.5;
               fixed: 1 1;
               rel1 { relative: 673/SCREEN_HIGHT 26/SCREEN_WIDTH;}
               rel2 { relative: 1167/SCREEN_HIGHT 134/SCREEN_WIDTH;}
            }
	    description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1 { relative: 673/SCREEN_HIGHT 26/SCREEN_WIDTH;}
               rel2 { relative: 1167/SCREEN_HIGHT 94/SCREEN_WIDTH;}
            }
         }
	 part { name: "elm.swallow.subtitle";
            type: SWALLOW;
            scale: 1;
            repeat_events: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               //fixed: 1 1;
			   align: 0.5 0.5;
               rel1 { relative: 673/SCREEN_HIGHT 94/SCREEN_WIDTH;}
               rel2 { relative: 1167/SCREEN_HIGHT 134/SCREEN_WIDTH;}
            }
         }
         part { name: "access.title";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "title_bg";
               rel2.to: "title_bg";
               color: 0 0 0 0;
            }
         }
         part { name: "title_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_more_btn_bg";
               rel2.to: "title_more_btn_bg";
            }
         }
         part { name: "title_prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_prev_btn_bg";
               rel2.to: "title_prev_btn_bg";
            }
         }
         part { name: "title_left_btn_bg";
            type: RECT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               //fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 594/SCREEN_HIGHT 51/SCREEN_WIDTH; }
               rel2 { relative: 657/SCREEN_HIGHT 114/SCREEN_WIDTH; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "title_left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1 { to: "title_left_btn_bg"; }
               rel2 { to: "title_left_btn_bg"; }
            }
         }
         part { name: "title_toolbar_button1";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_toolbar_btns_area";
               rel2.to: "title_toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 1.0 0.5;
               rel2 {
                  relative: 0.0 1.0;
                  to: "title_toolbar_button_padding";
               }
            }
         }
         part { name: "title_toolbar_button2";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_toolbar_btns_area";
               rel2.to: "title_toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to: "title_toolbar_button_padding";
               }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_ICON_SIZE_INC;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "title_right_btn_bg";
            type: RECT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               //fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 1183/SCREEN_HIGHT 51/SCREEN_WIDTH; }
               rel2 { relative: 1246/SCREEN_HIGHT 114/SCREEN_WIDTH; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "title_right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               align: 0.5 0.5;
               fixed: 1 1;
               rel1 { to: "title_right_btn_bg"; }
               rel2 { to: "title_right_btn_bg"; }
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "clipper";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
         program { name: "invisible";
            signal: "elm,state,invisible";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "clipper";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               if (get_int(sip_visible) == 0)
                 set_state(PART:"title_bg", "default", 0.0);
               else
                 set_state(PART:"title_toolbar_bg", "show", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            script {
               if (get_int(sip_visible) == 0)
                 set_state(PART:"title_bg", "hide", 0.0);
               else
                 set_state(PART:"title_toolbar_bg", "default", 0.0);
            }
         }
         program { name: "subtitle_show";
            signal: "elm,state,subtitle,show";
            source: "elm";
            script {
               set_state(PART:"elm.text.title", "subtitle_is_set", 0.0);
            }
         }
         program { name: "subtitle_hide";
            signal: "elm,state,subtitle,hide";
            source: "elm";
            script {
               set_state(PART:"elm.text.title", "default", 0.0);
            }
         }
	 program {
            name: "title_slide_show";
            signal: "elm,state,elm.swallow.title,show";
            source: "elm";
            script {
               set_int(title_slide_visible, 1);
            }
         }
         program {
            name: "title_slide_hide";
            signal: "elm,state,elm.swallow.title,hide";
            source: "elm";
            script {
               set_int(title_slide_visible, 0);
            }
         }
	 program {
            name: "subtitle_slide_show";
            signal: "elm,state,elm.swallow.subtitle,show";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.title", "subtitle_is_set", 0.0);
            }
         }
         program {
            name: "subtitle_slide_hide";
            signal: "elm,state,elm.swallow.subtitle,hide";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.title", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,show";
            source: "elm";
            action: STATE_SET "icon" 0.0;
            target: "padding_center_text1";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "padding_center_text1";
         }
         program { name: "left_btn_show";
            signal: "elm,state,title_left_btn,show";
            source: "elm";
            script {
               set_state(PART:"title_left_btn_bg", "visible", 0.0);
            }
         }
         program { name: "left_btn_hide";
            signal: "elm,state,title_left_btn,hide";
            source: "elm";
            script {
                 set_state(PART:"title_left_btn_bg", "default", 0.0);
            }
         }
         program { name: "right_btn_show";
            signal: "elm,state,title_right_btn,show";
            source: "elm";
            script {
               set_state(PART:"title_right_btn_bg", "visible", 0.0);
            }
         }
         program { name: "right_btn_hide";
            signal: "elm,state,title_right_btn,hide";
            source: "elm";
            script {
                 set_state(PART:"title_right_btn_bg", "default", 0.0);
            }
         }
         program { name: "sip_show";
            signal: "elm,state,sip,shown";
            source: "";
            script {
               set_int(sip_visible, 1);
               set_state(PART:"title_bg", "hide", 0.0);
               set_state(PART:"elm.swallow.content", "sip_visible", 0.0);
               set_state(PART:"title_toolbar_bg", "show", 0.0);
            }
         }
         program { name: "sip_hide";
            signal: "elm,state,sip,hidden";
            source: "";
            script {
               set_int(sip_visible, 0);
               set_state(PART:"title_bg", "default", 0.0);
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"title_toolbar_bg", "default", 0.0);
            }
         }
         program { name: "title_toolbar_button1_show";
            signal: "elm,state,title_toolbar_button1,show";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) + 1);
               if (get_int(title_toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"title_toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"title_toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "title_toolbar_button1_hide";
            signal: "elm,state,title_toolbar_button1,hide";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) - 1);
               set_state(PART:"title_toolbar_button1", "default", 0.0);
               set_state(PART:"title_toolbar_button2", "default", 0.0);
            }
         }
         program { name: "title_toolbar_button2_show";
            signal: "elm,state,title_toolbar_button2,show";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) + 1);
               if (get_int(title_toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"title_toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"title_toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "title_toolbar_button2_hide";
            signal: "elm,state,title_toolbar_button2,hide";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) - 1);
               set_state(PART:"title_toolbar_button1", "default", 0.0);
               set_state(PART:"title_toolbar_button2", "default", 0.0);
            }
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
            }
         }
         program { name: "more_btn_show";
            signal: "elm,state,toolbar_more_btn,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
            }
         }
         program { name: "more_btn_hide";
            signal: "elm,state,toolbar_more_btn,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
            }
         }
         program { name: "toolbar_button1_show";
            signal: "elm,state,toolbar_button1,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) + 1);
               if (get_int(toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "toolbar_button1_hide";
            signal: "elm,state,toolbar_button1,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) - 1);
               set_state(PART:"toolbar_button1", "default", 0.0);
               set_state(PART:"toolbar_button2", "default", 0.0);
            }
         }
         program { name: "toolbar_button2_show";
            signal: "elm,state,toolbar_button2,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) + 1);
               if (get_int(toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "toolbar_button2_hide";
            signal: "elm,state,toolbar_button2,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) - 1);
               set_state(PART:"toolbar_button1", "default", 0.0);
               set_state(PART:"toolbar_button2", "default", 0.0);
            }
         }
         program { name: "toolbar_bg_show";
            signal: "elm,state,toolbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"toolbar_bg", "visible", 0.0);
               set_int(tbar_bg, get_int(tbar_bg) + 1);
            }
         }
         program { name: "toolbar_bg_hide";
            signal: "elm,state,toolbar_bg,hide";
            source: "elm";
            script {
               set_int(tbar_bg, get_int(tbar_bg) - 1);
               if (get_int(tbar_bg) <= 0)
                 set_state(PART:"toolbar_bg", "default", 0.0);
            }
         }
         program { name: "toolbar_open_internal";
            signal: "elm,state,toolbar,open,internal";
            source: "elm";
            script {
               set_int(tbar_close, 0);
               set_state(PART:"toolbar_bg", "visible", 0.0);
            }
         }
         program { name: "toolbar_close_internal";
            signal: "elm,state,toolbar,close,internal";
            source: "elm";
            script {
               set_int(tbar_close, 1);
               set_state(PART:"toolbar_bg", "default", 0.0);
            }
         }
         program { name: "toolbar_open";
            signal: "elm,state,toolbar,open";
            source: "";
            action: STATE_SET "visible" 0.0;
            target: "toolbar_bg";
            transition: LINEAR 0.2;
            after: "toolbar_open_internal";
         }
         program { name: "toolbar_close";
            signal: "elm,state,toolbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "toolbar_bg";
            transition: LINEAR 0.2;
            after: "toolbar_close_internal";
         }
         program { name: "toolbar_instant_open";
            signal: "elm,state,toolbar,instant_open";
            source: "";
            script {
               emit("elm,state,toolbar,open,internal", "elm");
            }
         }
         program { name: "toolbar_instant_close";
            signal: "elm,state,toolbar,instant_close";
            source: "";
            script {
               emit("elm,state,toolbar,close,internal", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
         program {
            name: "display_mode_compress";
            signal: "display,mode,compress";
            source: "";
            script {
               set_state(PART:"toolbar_bg", "default", 0.0);
            }
         }
         program {
            name: "display_mode_default";
            signal: "display,mode,default";
            source: "";
            script {
               if ((get_int(tbar_bg) > 0) && (get_int(tbar_close) == 0))
                  set_state(PART:"toolbar_bg", "visible", 0.0);
            }
         }
         program {
            name: "badge_show";
            signal: "elm,state,title_badge,show";
            source: "elm";
            script {
               set_state(PART:"badge_padding", "show", 0.0);
               set_state(PART:"badge_bg", "show", 0.0);
               set_state(PART:"title_badge", "show", 0.0);
            }
         }
         program {
            name: "badge_hide";
            signal: "elm,state,title_badge,hide";
            source: "elm";
            script {
               set_state(PART:"badge_padding", "default", 0.0);
               set_state(PART:"badge_bg", "default", 0.0);
               set_state(PART:"title_badge", "default", 0.0);
            }
         }
      }
   }


#define MP_NAVIFRAME_TITLE_SLIDE_TEXT_GAP 60
#define MP_NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP 40
#define MP_NAVIFRAME_TITLE_SLIDE_MAX_COUNT 3
#define MP_NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT 0.5
#define MP_BASIC_NAVIFRAME_TITLE_FONT_SIZE_INC 50
#define MP_BASIC_NAVIFRAME_TITLE_FONT_MIN_SIZE_INC 46
#define MP_BASIC_NAVIFRAME_SUBTITLE_FONT_SIZE_INC 30
#define MP_BASIC_NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC 28
#define MP_BASIC_NAVIFRAME_TITLE_H_INC 96
#define MP_BASIC_NAVIFRAME_TITLE_BG_IMAGE_BORDER_INC 8 8 2 2
#define MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_H_INC 91
#define MP_BASIC_NAVIFRAME_PADDING_INC 26 0
#define MP_BASIC_NAVIFRAME_ICON_PADDING_INC 77 0
#define MP_BASIC_NAVIFRAME_BADGE_PADDING_INC 92 0
#define MP_BASIC_NAVIFRAME_TITLE_TEXT_BG_H_INC 88
#define MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_TEXT_BG_H_INC 76
#define MP_BASIC_NAVIFRAME_TITLE_TEXT_COLOR_INC 40 40 40 255
#define MP_BASIC_NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC 250 250 250 255
#define MP_BASIC_NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC 42
#define MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC 38
#define MP_BASIC_NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC 63 27
#define MP_BASIC_NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC 0 0 13 12
#define MP_BASIC_NAVIFRAME_SUBTITLE_TOP_PADDING_H_INC 2
#define MP_BASIC_NAVIFRAME_LANDSCAPE_SUBTITLE_TOP_PADDING_H_INC 4
#define MP_BASIC_NAVIFRAME_SUBTITLE_H_INC 37
#define MP_BASIC_NAVIFRAME_LANDSCAPE_SUBTITLE_H_INC 30
#define MP_BASIC_NAVIFRAME_SUBTITLE_TEXT_COLOR_INC 40 40 40 255
#define MP_BASIC_NAVIFRAME_SUBTITLE_TEXT_SHADOW_COLOR_INC 250 250 250 255
#define MP_BASIC_NAVIFRAME_PADDING2_INC 16 0
#define MP_BASIC_NAVIFRAME_BADGE_TOP_PADDING_INC 0 10
#define MP_BASIC_NAVIFRAME_BADGE_LEFT_PADDING_INC 8 0
#define MP_BASIC_NAVIFRAME_BADGE_TEXT_LEFT_PADDING_INC 12 54
#define MP_BASIC_NAVIFRAME_BADGE_BG_IMAGE_BORDER_INC 26 26 0 0
#define MP_BASIC_NAVIFRAME_BADGE_BG_IMAGE_SIZE_INC 54 54
#define MP_BASIC_NAVIFRAME_BADGE_TEXT_MIN_W_INC 30
#define MP_BASIC_NAVIFRAME_BADGE_TEXT_MAX_W_INC 60
#define MP_BASIC_NAVIFRAME_BADGE_TEXT_COLOR_INC 250 250 250 255;
#define MP_BASIC_NAVIFRAME_BADGE_TEXT_H_INC 34
#define MP_BASIC_NAVIFRAME_TITLE_BUTTON_DIVIDER_COLOR_INC 138 138 138 82
#define MP_BASIC_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC 183 96
#define MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_FUNC_BTN_SIZE_INC 183 91
#define MP_BASIC_NAVIFRAME_ICON_SIZE_INC 62 62
#define MP_BASIC_NAVIFRAME_TOOLBAR_HEIGHT_INC 98
#define MP_BASIC_NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC 85
#define MP_BASIC_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC 112 0
#define MP_BASIC_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC 85 98
#define MP_BASIC_NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC 85 85


	  group { name: "elm/naviframe/item/music/basic/default";
		 data.item: "tizen_zoom" 1;
		 images {
			image: "00_title_bg.png" COMP;
			image: "00_badge_bg.png" COMP;
			image: "00_effect_title_text_dim_left.png" COMP;
			image: "00_effect_title_text_dim_right.png" COMP;
		 }
		 script {
			public tbar_bg = 0; 	//Toolbar BG Show call count
			public tbar_close = 0; //Toolbar lastest Open/Close status
			public title_badge_visible = 0; //Title badge visible/hidden status
			public landscape = 0; //Landscape mode status
			public subtitle = 0; //Subtitle on/off status

			public title_duration = 0;
			public subtitle_duration = 0;
			public title_slide_stop;
			public subtitle_slide_stop;
			public title_slide_anim_id;
			public subtitle_slide_anim_id;
			public title_text_w;
			public subtitle_text_w;
			public org_title_text_w;
			public org_subtitle_text_w;
			public title_slide_count = 0;
			public subtitle_slide_count = 0;

			public get_width(val) {
			   new x, y, w, h;
			   new buf[128];
			   new st[31];
			   new Float:vl;

			   // Title Text
			   if (val == 0) {
				  get_geometry(PART:"elm.text.title", x, y, w, h);
				  set_int(org_title_text_w, w);

				  get_text(PART:"elm.text.title", buf, 127);
				  set_text(PART:"elm.text.full_title", buf);
				  get_state(PART:"elm.text.title", st, 30, vl);
				  set_state(PART:"elm.text.full_title", st, 0.0);
				  get_geometry(PART:"elm.text.full_title", x, y, w, h);
				  set_int(title_text_w, w);
			   }
			   // Subtitle Text
			   else {
				  get_geometry(PART:"elm.text.subtitle", x, y, w, h);
				  set_int(org_subtitle_text_w, w);

				  get_text(PART:"elm.text.subtitle", buf, 127);
				  set_text(PART:"elm.text.full_subtitle", buf);
				  get_state(PART:"elm.text.subtitle", st, 30, vl);
				  set_state(PART:"elm.text.full_subtitle", st, 0.0);
				  get_geometry(PART:"elm.text.full_subtitle", x, y, w, h);
				  set_int(subtitle_text_w, w);
			   }
			}

			public slide_end_pending(val, Float:pos) {
			   if (pos >= 1.0) {
				  // Title Text
				  if (val == 0) {
					 if (get_int(title_slide_count) < MP_NAVIFRAME_TITLE_SLIDE_MAX_COUNT)
					   start_slide(0);
					 else
					   stop_slide(0);
				  }
				  // Subtitle Text
				  else{
					 if (get_int(subtitle_slide_count) < MP_NAVIFRAME_TITLE_SLIDE_MAX_COUNT)
					   start_slide(1);
					 else
					   stop_slide(1);
				  }
			   }
			}

			public slide_to_end_anim(val, Float:pos) {
			   // Title Text
			   if (val == 0) {
				  if (get_int(title_slide_stop)) return;

				  if (!get_int(subtitle)) {
					 set_tween_state(PART:"elm.text.slide_begin_title", pos, "title_slide_begin", 0.0, "title_slide_end", 0.0);
					 set_tween_state(PART:"elm.text.slide_end_title", pos, "title_slide_begin", 0.0, "title_slide_end", 0.0);
				  }
				  else {
					 if (!get_int(landscape)) {
						set_tween_state(PART:"elm.text.slide_begin_title", pos, "maintitle_slide_begin", 0.0, "maintitle_slide_end", 0.0);
						set_tween_state(PART:"elm.text.slide_end_title", pos, "maintitle_slide_begin", 0.0, "maintitle_slide_end", 0.0);
					 }
					 else {
						set_tween_state(PART:"elm.text.slide_begin_title", pos, "maintitle_slide_begin_landscape", 0.0, "maintitle_slide_end_landscape", 0.0);
						set_tween_state(PART:"elm.text.slide_end_title", pos, "maintitle_slide_begin_landscape", 0.0, "maintitle_slide_end_landscape", 0.0);
					 }
				  }

				  if (pos >= 1.0)
					anim(1, "slide_end_pending", 0);
			   }
			   // Subtitle Text
			   else {
				  if (get_int(subtitle_slide_stop)) return;

				  if (!get_int(landscape)) {
					 set_tween_state(PART:"elm.text.slide_begin_subtitle", pos, "slide_begin", 0.0, "slide_end", 0.0);
					 set_tween_state(PART:"elm.text.slide_end_subtitle", pos, "slide_begin", 0.0, "slide_end", 0.0);
				  }
				  else {
					 set_tween_state(PART:"elm.text.slide_begin_subtitle", pos, "slide_begin_landscape", 0.0, "slide_end_landscape", 0.0);
					 set_tween_state(PART:"elm.text.slide_end_subtitle", pos, "slide_begin_landscape", 0.0, "slide_end_landscape", 0.0);
				  }

				  if (pos >= 1.0)
					anim(1, "slide_end_pending", 1);
			   }
			}

			public slide_to_end(val) {
			   new slide_anim_id;
			   new Float:duration;

			   // Title Text
			   if (val == 0) {
				  if (get_int(title_slide_stop)) return;

				  duration = get_float(title_duration);
				  slide_anim_id = anim(duration, "slide_to_end_anim", 0);
				  set_int(title_slide_anim_id, slide_anim_id);
			   }
			   // Subtitle Text
			   else {
				  if (get_int(subtitle_slide_stop)) return;

				  duration = get_float(subtitle_duration);
				  slide_anim_id = anim(duration, "slide_to_end_anim", 1);
				  set_int(subtitle_slide_anim_id, slide_anim_id);
			   }
			}

			public start_slide(val) {
			   new Float:len;
			   new buf[128];
			   new st[31];
			   new Float:vl;
			   get_state(PART:"title_bg", st, 30, vl);
			   if (!strcmp(st, "hide"))
				  return;

			   // Title Text
			   if (val == 0) {
				  set_int(title_slide_count, get_int(title_slide_count) + 1);

				  if (get_int(title_slide_count) == 1) {
					 get_width(0);

					 if (get_int(title_text_w) <= get_int(org_title_text_w)) {
						set_int(title_slide_count, 0);
						return;
					 }

					 set_state(PART:"title_text_slide_effect_left", "visible", 0.0);
					 set_state(PART:"title_text_slide_effect_right", "visible", 0.0);

					 len = get_int(title_text_w) + MP_NAVIFRAME_TITLE_SLIDE_TEXT_GAP;
					 set_float(title_duration, len / MP_BASIC_NAVIFRAME_TITLE_FONT_SIZE_INC * MP_NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT);

					 set_int(title_slide_stop, 0);

					 get_text(PART:"elm.text.title", buf, 127);
					 set_text(PART:"elm.text.slide_begin_title", buf);
					 set_text(PART:"elm.text.slide_end_title", buf);
				  }

				  if (!get_int(subtitle)) {
					 set_state(PART:"elm.text.slide_begin_title", "title_slide_begin", 0.0);
					 set_state(PART:"elm.text.slide_end_title", "title_slide_begin", 0.0);
				  }
				  else {
					 set_state(PART:"elm.text.slide_begin_title", "maintitle_slide_begin", 0.0);
					 set_state(PART:"elm.text.slide_end_title", "maintitle_slide_begin", 0.0);
				  }

				  if (get_int(title_slide_count) == 1) {
					 set_state(PART:"title_text_clip", "slide", 0.0);
					 set_state(PART:"slide_title_text_clip", "slide", 0.0);
				  }

				  slide_to_end(0);
			   }
			   // Subtitle Text
			   else {
				  set_int(subtitle_slide_count, get_int(subtitle_slide_count) + 1);

				  if (get_int(subtitle_slide_count) == 1) {
					 get_width(1);

					 if (get_int(subtitle_text_w) <= get_int(org_subtitle_text_w)) {
						set_int(subtitle_slide_count, 0);
						return;
					 }

					 set_state(PART:"subtitle_text_slide_effect_left", "visible", 0.0);
					 set_state(PART:"subtitle_text_slide_effect_right", "visible", 0.0);

					 len = get_int(subtitle_text_w) + MP_NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP;
					 if (!get_int(landscape))
					   set_float(subtitle_duration, len / MP_BASIC_NAVIFRAME_SUBTITLE_FONT_SIZE_INC * MP_NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT);
					 else
					   set_float(subtitle_duration, len / MP_BASIC_NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC * MP_NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT);

					 set_int(subtitle_slide_stop, 0);

					 get_text(PART:"elm.text.subtitle", buf, 127);
					 set_text(PART:"elm.text.slide_begin_subtitle", buf);
					 set_text(PART:"elm.text.slide_end_subtitle", buf);
				  }

				  if (!get_int(landscape)) {
					 set_state(PART:"elm.text.slide_begin_subtitle", "slide_begin", 0.0);
					 set_state(PART:"elm.text.slide_end_subtitle", "slide_begin", 0.0);
				  }
				  else {
					 set_state(PART:"elm.text.slide_begin_subtitle", "slide_begin_landscape", 0.0);
					 set_state(PART:"elm.text.slide_end_subtitle", "slide_begin_landscape", 0.0);
				  }

				  if (get_int(subtitle_slide_count) == 1) {
					 set_state(PART:"subtitle_text_clip", "slide", 0.0);
					 set_state(PART:"slide_subtitle_text_clip", "slide", 0.0);
				  }

				  slide_to_end(1);
			   }
			}

			public stop_slide(val) {
			   new slide_anim_id;

			   // Title Text
			   if (val == 0) {
				  set_int(title_slide_stop, 1);
				  set_int(title_slide_count, 0);

				  slide_anim_id = get_int(title_slide_anim_id);
				  cancel_anim(slide_anim_id);
				  set_int(title_slide_anim_id, 0);

				  set_text(PART:"elm.text.slide_begin_title", "");
				  set_text(PART:"elm.text.slide_end_title", "");

				  set_state(PART:"elm.text.slide_begin_title", "default", 0.0);
				  set_state(PART:"elm.text.slide_end_title", "default", 0.0);

				  set_state(PART:"title_text_clip", "default", 0.0);
				  set_state(PART:"slide_title_text_clip", "default", 0.0);

				  set_state(PART:"title_text_slide_effect_left", "default", 0.0);
				  set_state(PART:"title_text_slide_effect_right", "default", 0.0);
			   }
			   // Subtitle Text
			   else {
				  set_int(subtitle_slide_stop, 1);
				  set_int(subtitle_slide_count, 0);

				  slide_anim_id = get_int(subtitle_slide_anim_id);
				  cancel_anim(slide_anim_id);
				  set_int(subtitle_slide_anim_id, 0);

				  set_text(PART:"elm.text.slide_begin_subtitle", "");
				  set_text(PART:"elm.text.slide_end_subtitle", "");

				  set_state(PART:"elm.text.slide_begin_subtitle", "default", 0.0);
				  set_state(PART:"elm.text.slide_end_subtitle", "default", 0.0);

				  set_state(PART:"subtitle_text_clip", "default", 0.0);
				  set_state(PART:"slide_subtitle_text_clip", "default", 0.0);

				  set_state(PART:"subtitle_text_slide_effect_left", "default", 0.0);
				  set_state(PART:"subtitle_text_slide_effect_right", "default", 0.0);
			   }
			}
		 }

		 parts {
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
               visible: 1;
            }
            description { state: "hide" 0.0;
               visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               visible: 0;
            }
         }
			part { name: "title_bg";
			   type: IMAGE;
			   scale: 1;
			   description { state: "default" 0.0;
				  min: 0 MP_BASIC_NAVIFRAME_TITLE_H_INC;
				  max: -1 MP_BASIC_NAVIFRAME_TITLE_H_INC;
				  align: 0.0 0.0;
				  fixed: 0 1;
				  rel1 { relative: 0.0 0.0; to: "base"; }
				  rel2 { relative: 1.0 0.0; to: "base"; }
				  image {
					 normal: "00_title_bg.png";
					 border: MP_BASIC_NAVIFRAME_TITLE_BG_IMAGE_BORDER_INC;
					 border_scale: 1;
				  }
			   }
			   description { state: "landscape" 0.0;
				  inherit: "default" 0.0;
				  min: 0 MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_H_INC;
				  max: -1 MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_H_INC;
			   }
			   description { state: "hide" 0.0;
				  inherit: "default" 0.0;
				  min: 0 0;
				  max: -1 0;
			   }
			}
			part { name: "title_clip";
			   type: RECT;
			   mouse_events: 0;
			   clip_to: "clipper";
			   description { state: "default" 0.0;
				  rel1 { to_y: "title_bg"; }
				  rel2 { to_y: "title_bg"; }
			   }
			}
			part { name: "title_right_padding";
			   type: RECT;
			   mouse_events: 0;
			   scale: 1;
			   description { state: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_PADDING_INC;
				  fixed: 1 1;
				  align: 1.0 0.0;
				  rel1 { relative: 1.0 0.0; to: "divider2"; }
				  rel2 { relative: 1.0 1.0; to: "divider2"; }
				  visible: 0;
			   }
			   description { state: "title_left_btn_set" 0.0;
				  inherit: "default" 0.0;
				  rel1 { relative: 1.0 0.0; to: "divider1"; }
				  rel2 { relative: 1.0 1.0; to: "divider1"; }
			   }
			}
			part { name: "title_left_padding";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_PADDING_INC;
				  fixed: 1 1;
				  align: 0.0 0.0;
				  rel1 { relative: 0.0 0.0; to: "title_bg"; }
				  rel2 { relative: 0.0 1.0; to: "title_bg"; }
				  visible: 0;
			   }
			   description { state: "icon" 0.0;
				  inherit: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_ICON_PADDING_INC;
			   }
			}
			part { name: "elm.swallow.content";
			   type: SWALLOW;
			   scale: 1;
			   repeat_events: 0;
			   clip_to: "content_clip";
			   description { state: "default" 0.0;
				  align: 0.0 0.0;
				  rel1.relative: 0.0 1.0;
				  rel1.to_x: "base";
				  rel1.to_y: "title_bg";
				  rel2.relative: 1.0 0.0;
				  rel2.to_x: "base";
				  rel2.to_y: "toolbar";
			   }
			}
			part { name: "content_clip";
			   type: RECT;
			   mouse_events: 0;
			   clip_to: "clipper";
			   description { state: "default" 0.0;
				  rel1.to_y: "elm.swallow.content";
				  rel2.to_y: "elm.swallow.content";
			   }
			}
			part { name: "badge_padding";
			   type: RECT;
			   mouse_events: 0;
			   scale: 1;
			   description { state: "default" 0.0;
				  min: 0 0;
				  fixed: 1 0;
				  align: 1.0 0.0;
				  rel1 { relative: 0.0 0.0; to: "title_right_padding"; }
				  rel2 { relative: 0.0 1.0; to: "title_right_padding"; }
				  visible: 0;
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_BADGE_PADDING_INC;
			   }
			}
			part { name: "title_text_bg";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  visible: 0;
				  min: 0 MP_BASIC_NAVIFRAME_TITLE_TEXT_BG_H_INC;
				  max: -1 MP_BASIC_NAVIFRAME_TITLE_TEXT_BG_H_INC;
				  fixed: 0 1;
				  rel1 { relative: 1.0 0.0; to_x: "title_left_padding"; to_y: "title_bg"; }
				  rel2 { relative: 0.0 1.0; to_x: "title_right_padding"; to_y: "title_bg"; }
			   }
			   description { state: "subtitle_is_set" 0.0;
				  inherit: "default" 0.0;
				  min: 0 MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_TEXT_BG_H_INC;
				  max: -1 MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_TEXT_BG_H_INC;
			   }
			}
			part { name: "maintitle_text_bg";
			   type: RECT;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  visible: 0;
				  rel1 { relative: 0.0 0.0; to: "title_text_bg"; }
				  rel2 { relative: 0.0 1.0; to_x: "badge_padding"; to_y: "title_text_bg"; }
			   }
			   description { state: "subtitle_is_set" 0.0;
				  inherit: "default" 0.0;
				  rel1 { relative: 0.0 0.0; to: "title_text_bg"; }
				  rel2 { relative: 0.0 0.0; to_x: "badge_padding"; to_y: "subtitle_top_padding"; }
			   }
			}
			part { name: "title_text_clip";
			   type: RECT;
			   mouse_events: 0;
			   clip_to: "title_clip";
			   description { state: "default" 0.0;
				  rel1.to: "maintitle_text_bg";
				  rel2.to: "maintitle_text_bg";
			   }
			   description { state: "slide" 0.0;
				  inherit: "default" 0.0;
				  visible: 0;
			   }
			}
			part { name: "elm.text.title";
			   type: TEXT;
			   effect: FAR_SHADOW BOTTOM;
			   scale: 1;
			   clip_to: "title_text_clip";
			   description { state: "default" 0.0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_TITLE_FONT_SIZE_INC;
					 size_range: MP_BASIC_NAVIFRAME_TITLE_FONT_MIN_SIZE_INC MP_BASIC_NAVIFRAME_TITLE_FONT_SIZE_INC;
					 fit: 1 0;
					 min: 0 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
				  color: MP_BASIC_NAVIFRAME_TITLE_TEXT_COLOR_INC;
				  color3: MP_BASIC_NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
				  align: 0.0 0.5;
				  rel1.to: "maintitle_text_bg";
				  rel2.to: "maintitle_text_bg";
			   }
			   description { state: "subtitle_is_set" 0.0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
					 min: 0 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
				  color: MP_BASIC_NAVIFRAME_TITLE_TEXT_COLOR_INC;
				  color3: MP_BASIC_NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
				  align: 0.0 0.5;
				  rel1.to: "maintitle_text_bg";
				  rel2.to: "maintitle_text_bg";
			   }
			   description { state: "subtitle_is_set_landscape" 0.0;
				  inherit: "subtitle_is_set" 0.0;
				  text.size: MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
			   }
			}
			part { name: "slide_title_text_clip";
			   type: RECT;
			   mouse_events: 0;
			   clip_to: "title_clip";
			   description { state: "default" 0.0;
				  visible: 0;
				  rel1.to: "elm.text.title";
				  rel2.to: "elm.text.title";
			   }
			   description { state: "slide" 0.0;
				  inherit: "default" 0.0;
				  visible: 1;
			   }
			}
			part { name: "slide_text_gap1";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  visible: 0;
				  fixed: 1 0;
				  min: MP_NAVIFRAME_TITLE_SLIDE_TEXT_GAP 0;
				  max: MP_NAVIFRAME_TITLE_SLIDE_TEXT_GAP -1;
				  align: 1.0 0.5;
				  rel1 { relative: 0.0 0.0; to: "maintitle_text_bg"; }
				  rel2 { relative: 0.0 1.0; to: "maintitle_text_bg"; }
			   }
			}
			part { name: "elm.text.slide_begin_title";
			   type: TEXT;
			   effect: FAR_SHADOW BOTTOM;
			   scale: 1;
			   clip_to: "slide_title_text_clip";
			   description { state: "default" 0.0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_TITLE_FONT_SIZE_INC;
					 size_range: MP_BASIC_NAVIFRAME_TITLE_FONT_MIN_SIZE_INC MP_BASIC_NAVIFRAME_TITLE_FONT_SIZE_INC;
					 fit: 1 0;
					 min: 1 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
				  color: MP_BASIC_NAVIFRAME_TITLE_TEXT_COLOR_INC;
				  color3: MP_BASIC_NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
				  fixed: 1 0;
				  align: 0.0 0.5;
				  rel1.to: "maintitle_text_bg";
				  rel2.to: "maintitle_text_bg";
			   }
			   description { state: "title_slide_begin" 0.0;
				  inherit: "default" 0.0;
				  rel1.relative: 0.0 0.0;
				  rel2.relative: 0.0 1.0;
			   }
			   description { state: "title_slide_end" 0.0;
				  inherit: "default" 0.0;
				  text.align: 1.0 0.5;
				  align: 1.0 0.5;
				  rel1 { relative: 0.0 0.0; to: "slide_text_gap1"; }
				  rel2 { relative: 0.0 1.0; to: "slide_text_gap1"; }
			   }
			   description { state: "maintitle_slide_begin" 0.0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
					 min: 1 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
				  color: MP_BASIC_NAVIFRAME_TITLE_TEXT_COLOR_INC;
				  color3: MP_BASIC_NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
				  fixed: 1 0;
				  align: 0.0 0.5;
				  rel1 { relative: 0.0 0.0; to: "maintitle_text_bg"; }
				  rel2 { relative: 0.0 1.0; to: "maintitle_text_bg"; }
			   }
			   description { state: "maintitle_slide_end" 0.0;
				  inherit: "maintitle_slide_begin" 0.0;
				  text.align: 1.0 0.5;
				  align: 1.0 0.5;
				  rel1 { relative: 0.0 0.0; to: "slide_text_gap1"; }
				  rel2 { relative: 0.0 1.0; to: "slide_text_gap1"; }
			   }
			   description { state: "maintitle_slide_begin_landscape" 0.0;
				  inherit: "maintitle_slide_begin" 0.0;
				  text.size: MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
			   }
			   description { state: "maintitle_slide_end_landscape" 0.0;
				  inherit: "maintitle_slide_end" 0.0;
				  text.size: MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
			   }
			}
			part { name: "title_text_slide_effect_left_bg";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_PADDING_INC;
				  align: 1.0 0.5;
				  fixed: 1 1;
				  visible: 0;
				  rel1 { relative: 0.0 0.0; to: "elm.text.title"; }
				  rel2 { relative: 0.0 1.0; to: "elm.text.title"; }
			   }
			}
			part { name: "title_text_slide_effect_left";
			   type: IMAGE;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
				  align: 0.0 0.5;
				  fixed: 1 1;
				  visible: 0;
				  rel1 { relative: 0.0 0.0; to: "title_text_slide_effect_left_bg"; }
				  rel2 { relative: 0.0 1.0; to: "title_text_slide_effect_left_bg"; }
				  image {
					 normal: "00_effect_title_text_dim_left.png";
					 border: MP_BASIC_NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
					 border_scale: 1;
				  }
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  visible: 1;
			   }
			}
			part { name: "elm.text.full_title";
			   type: TEXT;
			   scale: 1;
			   clip_to: "slide_title_text_clip";
			   description { state: "default" 0.0;
				  visible: 0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_TITLE_FONT_SIZE_INC;
					 size_range: MP_BASIC_NAVIFRAME_TITLE_FONT_MIN_SIZE_INC MP_BASIC_NAVIFRAME_TITLE_FONT_SIZE_INC;
					 fit: 1 0;
					 min: 1 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
				  fixed: 1 0;
				  align: 0.0 0.5;
				  rel1.to: "maintitle_text_bg";
				  rel2.to: "maintitle_text_bg";
			   }
			   description { state: "subtitle_is_set" 0.0;
				  visible: 0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
					 min: 1 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
				  fixed: 1 0;
				  align: 0.0 0.5;
				  rel1.to: "maintitle_text_bg";
				  rel2.to: "maintitle_text_bg";
			   }
			   description { state: "subtitle_is_set_landscape" 0.0;
				  inherit: "subtitle_is_set" 0.0;
				  text.size: MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
			   }
			}
			part { name: "slide_text_gap2";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  visible: 0;
				  fixed: 1 0;
				  min: MP_NAVIFRAME_TITLE_SLIDE_TEXT_GAP 0;
				  max: MP_NAVIFRAME_TITLE_SLIDE_TEXT_GAP -1;
				  align: 0.0 0.5;
				  rel1 { relative: 1.0 0.0; to: "elm.text.full_title"; }
				  rel2 { relative: 1.0 1.0; to: "elm.text.full_title"; }
			   }
			}
			part { name: "elm.text.slide_end_title";
			   type: TEXT;
			   effect: FAR_SHADOW BOTTOM;
			   scale: 1;
			   clip_to: "slide_title_text_clip";
			   description { state: "default" 0.0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_TITLE_FONT_SIZE_INC;
					 size_range: MP_BASIC_NAVIFRAME_TITLE_FONT_MIN_SIZE_INC MP_BASIC_NAVIFRAME_TITLE_FONT_SIZE_INC;
					 fit: 1 0;
					 min: 1 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
				  color: MP_BASIC_NAVIFRAME_TITLE_TEXT_COLOR_INC;
				  color3: MP_BASIC_NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
				  fixed: 1 0;
				  align: 0.0 0.5;
				  rel1.to: "maintitle_text_bg";
				  rel2.to: "maintitle_text_bg";
			   }
			   description { state: "title_slide_begin" 0.0;
				  inherit: "default" 0.0;
				  rel1 { relative: 1.0 0.0; to: "slide_text_gap2"; }
				  rel2 { relative: 1.0 1.0; to: "slide_text_gap2"; }
			   }
			   description { state: "title_slide_end" 0.0;
				  inherit: "default" 0.0;
				  rel1.relative: 0.0 0.0;
				  rel2.relative: 0.0 1.0;
			   }
			   description { state: "maintitle_slide_begin" 0.0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
					 min: 1 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
				  color: MP_BASIC_NAVIFRAME_TITLE_TEXT_COLOR_INC;
				  color3: MP_BASIC_NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
				  fixed: 1 0;
				  align: 0.0 0.5;
				  rel1 { relative: 1.0 0.0; to: "slide_text_gap2"; }
				  rel2 { relative: 1.0 1.0; to: "slide_text_gap2"; }
			   }
			   description { state: "maintitle_slide_end" 0.0;
				  inherit: "maintitle_slide_begin" 0.0;
				  rel1 { relative: 0.0 0.0; to: "maintitle_text_bg"; }
				  rel2 { relative: 0.0 1.0; to: "maintitle_text_bg"; }
			   }
			   description { state: "maintitle_slide_begin_landscape" 0.0;
				  inherit: "maintitle_slide_begin" 0.0;
				  text.size: MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
			   }
			   description { state: "maintitle_slide_end_landscape" 0.0;
				  inherit: "maintitle_slide_end" 0.0;
				  text.size: MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
			   }
			}
			part { name: "title_text_slide_effect_right_bg";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_PADDING_INC;
				  align: 0.0 0.5;
				  fixed: 1 1;
				  visible: 0;
				  rel1 { relative: 1.0 0.0; to: "elm.text.title"; }
				  rel2 { relative: 1.0 1.0; to: "elm.text.title"; }
			   }
			}
			part { name: "title_text_slide_effect_right";
			   type: IMAGE;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
				  align: 1.0 0.5;
				  fixed: 1 1;
				  visible: 0;
				  rel1 { relative: 1.0 0.0; to: "title_text_slide_effect_right_bg"; }
				  rel2 { relative: 1.0 1.0; to: "title_text_slide_effect_right_bg"; }
				  image {
					 normal: "00_effect_title_text_dim_right.png";
					 border: MP_BASIC_NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
					 border_scale: 1;
				  }
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  visible: 1;
			   }
			}
			part { name: "subtitle_top_padding";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  visible: 0;
				  min: 0 0;
				  max: -1 0;
				  fixed: 0 1;
				  align: 0.5 1.0;
				  rel1 { relative: 0.0 0.0; to: "subtitle_text_bg"; }
				  rel2 { relative: 1.0 0.0; to: "subtitle_text_bg"; }
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  min: 0 MP_BASIC_NAVIFRAME_SUBTITLE_TOP_PADDING_H_INC;
				  max: -1 MP_BASIC_NAVIFRAME_SUBTITLE_TOP_PADDING_H_INC;
			   }
			   description { state: "visible_landscape" 0.0;
				  inherit: "default" 0.0;
				  min: 0 MP_BASIC_NAVIFRAME_LANDSCAPE_SUBTITLE_TOP_PADDING_H_INC;
				  max: -1 MP_BASIC_NAVIFRAME_LANDSCAPE_SUBTITLE_TOP_PADDING_H_INC;
			   }
			}
			part { name: "subtitle_text_bg";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  visible: 0;
				  min: 0 0;
				  max: -1 0;
				  fixed: 0 1;
				  align: 0.5 1.0;
				  rel1 { relative: 0.0 1.0; to: "title_text_bg"; }
				  rel2 { relative: 1.0 1.0; to: "title_text_bg"; }
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  min: 0 MP_BASIC_NAVIFRAME_SUBTITLE_H_INC;
				  max: -1 MP_BASIC_NAVIFRAME_SUBTITLE_H_INC;
			   }
			   description { state: "visible_landscape" 0.0;
				  inherit: "default" 0.0;
				  min: 0 MP_BASIC_NAVIFRAME_LANDSCAPE_SUBTITLE_H_INC;
				  max: -1 MP_BASIC_NAVIFRAME_LANDSCAPE_SUBTITLE_H_INC;
			   }
			}
			part { name: "subtitle_text_clip";
			   type: RECT;
			   mouse_events: 0;
			   clip_to: "title_clip";
			   description { state: "default" 0.0;
				  rel1.to: "subtitle_text_bg";
				  rel2.to: "subtitle_text_bg";
			   }
			   description { state: "slide" 0.0;
				  inherit: "default" 0.0;
				  visible: 0;
			   }
			}
			part { name: "elm.text.subtitle";
			   type: TEXT;
			   effect: FAR_SHADOW BOTTOM;
			   scale: 1;
			   clip_to: "subtitle_text_clip";
			   description { state: "default" 0.0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
					 min: 0 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
				  color: MP_BASIC_NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
				  color3: MP_BASIC_NAVIFRAME_SUBTITLE_TEXT_SHADOW_COLOR_INC;
				  align: 0.0 0.5;
				  rel1.to: "subtitle_text_bg";
				  rel2.to: "subtitle_text_bg";
			   }
			   description { state: "landscape" 0.0;
				  inherit: "default" 0.0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC;
					 min: 0 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
			   }
			}
			part { name: "slide_subtitle_text_clip";
			   type: RECT;
			   mouse_events: 0;
			   clip_to: "title_clip";
			   description { state: "default" 0.0;
				  visible: 0;
				  rel1.to: "elm.text.subtitle";
				  rel2.to: "elm.text.subtitle";
			   }
			   description { state: "slide" 0.0;
				  inherit: "default" 0.0;
				  visible: 1;
			   }
			}
			part { name: "slide_subtitle_divider1";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  visible: 0;
				  fixed: 1 0;
				  min: MP_NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP 0;
				  max: MP_NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP -1;
				  align: 1.0 0.5;
				  rel1 { relative: 0.0 0.0; to: "subtitle_text_bg"; }
				  rel2 { relative: 0.0 1.0; to: "subtitle_text_bg"; }
			   }
			}
			part { name: "elm.text.slide_begin_subtitle";
			   type: TEXT;
			   effect: FAR_SHADOW BOTTOM;
			   scale: 1;
			   clip_to: "slide_subtitle_text_clip";
			   description { state: "default" 0.0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
					 min: 1 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
				  color: MP_BASIC_NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
				  color3: MP_BASIC_NAVIFRAME_SUBTITLE_TEXT_SHADOW_COLOR_INC;
				  fixed: 1 0;
				  align: 0.0 0.5;
				  rel1.to: "subtitle_text_bg";
				  rel2.to: "subtitle_text_bg";
			   }
			   description { state: "slide_begin" 0.0;
				  inherit: "default" 0.0;
				  rel1.relative: 0.0 0.0;
				  rel2.relative: 0.0 1.0;
			   }
			   description { state: "slide_end" 0.0;
				  inherit: "default" 0.0;
				  text.align: 1.0 0.5;
				  align: 1.0 0.5;
				  rel1 { relative: 0.0 0.0; to: "slide_subtitle_divider1"; }
				  rel2 { relative: 0.0 1.0; to: "slide_subtitle_divider1"; }
			   }
			   description { state: "slide_begin_landscape" 0.0;
				  inherit: "default" 0.0;
				  text.size: MP_BASIC_NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC;
				  rel1 { relative: 0.0 0.0; to: "subtitle_text_bg"; }
				  rel2 { relative: 0.0 1.0; to: "subtitle_text_bg"; }
			   }
			   description { state: "slide_end_landscape" 0.0;
				  inherit: "slide_begin_landscape" 0.0;
				  text.align: 1.0 0.5;
				  align: 1.0 0.5;
				  rel1 { relative: 0.0 0.0; to: "slide_subtitle_divider1"; }
				  rel2 { relative: 0.0 1.0; to: "slide_subtitle_divider1"; }
			   }
			}
			part { name: "subtitle_text_slide_effect_left";
			   type: IMAGE;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
				  align: 0.0 0.5;
				  fixed: 1 1;
				  visible: 0;
				  rel1 { relative: 0.0 0.0; to_x: "title_text_slide_effect_left_bg"; to_y: "subtitle_text_bg"; }
				  rel2 { relative: 0.0 1.0; to_x: "title_text_slide_effect_left_bg"; to_y: "subtitle_text_bg"; }
				  image {
					 normal: "00_effect_title_text_dim_left.png";
					 border: MP_BASIC_NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
					 border_scale: 1;
				  }
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  visible: 1;
			   }
			}
			part { name: "elm.text.full_subtitle";
			   type: TEXT;
			   scale: 1;
			   clip_to: "slide_subtitle_text_clip";
			   description { state: "default" 0.0;
				  visible: 0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
					 min: 1 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
				  fixed: 1 0;
				  align: 0.0 0.5;
				  rel1.to: "subtitle_text_bg";
				  rel2.to: "subtitle_text_bg";
			   }
			   description { state: "landscape" 0.0;
				  inherit: "default" 0.0;
				  text.size: MP_BASIC_NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC;
			   }
			}
			part { name: "slide_subtitle_divider2";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  visible: 0;
				  fixed: 1 0;
				  min: MP_NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP 0;
				  max: MP_NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP -1;
				  align: 0.0 0.5;
				  rel1 { relative: 1.0 0.0; to: "elm.text.full_subtitle"; }
				  rel2 { relative: 1.0 1.0; to: "elm.text.full_subtitle"; }
			   }
			}
			part { name: "elm.text.slide_end_subtitle";
			   type: TEXT;
			   effect: FAR_SHADOW BOTTOM;
			   scale: 1;
			   clip_to: "slide_subtitle_text_clip";
			   description { state: "default" 0.0;
				  text { font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
					 min: 1 0;
					 max: 1 0;
					 align: 0.0 0.5;
				  }
				  color: MP_BASIC_NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
				  color3: MP_BASIC_NAVIFRAME_SUBTITLE_TEXT_SHADOW_COLOR_INC;
				  fixed: 1 0;
				  align: 0.0 0.5;
				  rel1.to: "subtitle_text_bg";
				  rel2.to: "subtitle_text_bg";
			   }
			   description { state: "slide_begin" 0.0;
				  inherit: "default" 0.0;
				  rel1 { relative: 1.0 0.0; to: "slide_subtitle_divider2"; }
				  rel2 { relative: 1.0 1.0; to: "slide_subtitle_divider2"; }
			   }
			   description { state: "slide_end" 0.0;
				  inherit: "default" 0.0;
				  rel1.relative: 0.0 0.0;
				  rel2.relative: 0.0 1.0;
			   }
			   description { state: "slide_begin_landscape" 0.0;
				  inherit: "default" 0.0;
				  text.size: MP_BASIC_NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC;
				  rel1 { relative: 1.0 0.0; to: "slide_subtitle_divider2"; }
				  rel2 { relative: 1.0 1.0; to: "slide_subtitle_divider2"; }
			   }
			   description { state: "slide_end_landscape" 0.0;
				  inherit: "slide_begin_landscape" 0.0;
				  rel1.relative: 0.0 0.0;
				  rel2.relative: 0.0 1.0;
			   }
			}
			part { name: "subtitle_text_slide_effect_right_bg";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_PADDING_INC;
				  align: 0.0 0.5;
				  fixed: 1 1;
				  visible: 0;
				  rel1 { relative: 1.0 0.0; to: "elm.text.subtitle"; }
				  rel2 { relative: 1.0 1.0; to: "elm.text.subtitle"; }
			   }
			}
			part { name: "subtitle_text_slide_effect_right";
			   type: IMAGE;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
				  align: 1.0 0.5;
				  fixed: 1 1;
				  visible: 0;
				  rel1 { relative: 1.0 0.0; to: "subtitle_text_slide_effect_right_bg"; }
				  rel2 { relative: 1.0 1.0; to: "subtitle_text_slide_effect_right_bg"; }
				  image {
					 normal: "00_effect_title_text_dim_right.png";
					 border: MP_BASIC_NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
					 border_scale: 1;
				  }
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  visible: 1;
			   }
			}
			part { name: "padding_before_text";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  align: 1.0 0.5;
				  rel1 { relative: 0.0 0.0; to: "title_text_bg"; }
				  rel2 { relative: 0.0 1.0; to: "title_text_bg"; }
				  fixed: 1 0;
				  min: MP_BASIC_NAVIFRAME_PADDING2_INC;
				  visible: 0;
			   }
			}
			part { name: "badge_top_padding";
			   type: RECT;
			   scale: 1;
			   description { state: "default" 0.0;
				  visible: 0;
				  min: MP_BASIC_NAVIFRAME_BADGE_TOP_PADDING_INC;
				  fixed: 0 1;
				  rel1 { relative: 0.0 0.0; to: "title_bg"; }
				  rel2 { relative: 1.0 0.0; to: "title_bg"; }
				  align: 0.0 0.0;
			   }
			   description { state: "subtitle_is_set" 0.0;
				  inherit: "default" 0.0;
				  min: 0 0;
				  fixed: 0 1;
			   }
			}
			part { name: "badge_left_padding";
			   type: RECT;
			   scale: 1;
			   description { state: "default" 0.0;
				  visible: 0;
				  min: 0 0;
				  fixed: 1 1;
				  rel1 { relative: 1.0 1.0; to_x: "elm.text.title"; to_y: "badge_top_padding"; }
				  rel2 { relative: 1.0 1.0; to_x: "elm.text.title"; to_y: "badge_top_padding"; }
				  align: 0.0 0.0;
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_BADGE_LEFT_PADDING_INC;
			   }
			}
			part { name: "left.padding.text";
			   type: RECT;
			   scale: 1;
			   description {
				  state: "default" 0.0;
				  visible: 0;
				  fixed: 1 1;
				  min: 0 0;
				  rel1 {
					 to: "badge_left_padding";
					 relative: 1.0 0.0;
				  }
				  rel2 {
					 to: "badge_left_padding";
					 relative: 1.0 1.0;
				  }
				  align: 0.0 0.0;
			   }
			   description {
				  state: "visible" 0.0;
				  inherit: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_BADGE_TEXT_LEFT_PADDING_INC;
			   }
			}
			part { name: "right.padding.text";
			   type: RECT;
			   scale: 1;
			   description {
				  state: "default" 0.0;
				  visible: 0;
				  fixed: 1 1;
				  min: 0 0;
				  rel1 {
					 to: "title_badge";
					 relative: 1.0 0.0;
				  }
				  rel2 {
					 to: "title_badge";
					 relative: 1.0 1.0;
				  }
				  align: 0.0 0.0;
			   }
			   description {
				  state: "visible" 0.0;
				  inherit: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_BADGE_TEXT_LEFT_PADDING_INC;
			   }
			}
			part { name: "badge_bg";
			   type: IMAGE;
			   scale: 1;
			   clip_to: "title_clip";
			   description { state: "default" 0.0;
				  visible: 0;
				  min: 0 0;
				  fixed: 1 1;
				  rel1 {
					 to: "left.padding.text";
					 relative: 0.0 0.0;
				  }
				  rel2 {
					 to: "right.padding.text";
					 relative: 1.0 1.0;
				  }
				  image {
					 normal: "00_badge_bg.png";
					 border: MP_BASIC_NAVIFRAME_BADGE_BG_IMAGE_BORDER_INC;
					 border_scale: 1;
				  }
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  visible: 1;
				  min: MP_BASIC_NAVIFRAME_BADGE_BG_IMAGE_SIZE_INC;
			   }
			}
			part { name: "title_badge";
			   type: TEXT;
			   mouse_events: 0;
			   scale: 1;
			   clip_to: "title_clip";
			   description { state: "default" 0.0;
				  visible: 0;
				  min: MP_BASIC_NAVIFRAME_BADGE_TEXT_MIN_W_INC 0;
				  max: MP_BASIC_NAVIFRAME_BADGE_TEXT_MAX_W_INC -1;
				  fixed: 1 1;
				  rel1 { relative: 1.0 0.0; to: "left.padding.text"; }
				  rel2 { relative: 1.0 1.0; to_y: "left.padding.text"; to_x: "badge_padding"; }
				  align: 0.0 0.5;
				  color: MP_BASIC_NAVIFRAME_BADGE_TEXT_COLOR_INC;
				  text {
					 font: "Tizen:style=Bold";
					 size: MP_BASIC_NAVIFRAME_BADGE_TEXT_H_INC;
					 min: 0 0;
					 max: 1 0;
				  }
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  visible: 1;
			   }
			}
			part { name: "click_event_area";
				ignore_flags: ON_HOLD;
				type: RECT;
             			mouse_events: 1;
				description { state: "default" 0.0;
				   rel1 { to: "title_bg"; }
				   rel2 { to: "title_bg"; }
				   color: 0 0 0 0;
				}
			}
			part { name: "access.title";
			   type: RECT;
			   repeat_events: 1;
			   description { state: "default" 0.0;
				  fixed: 1 1;
				  rel1.to: "title_bg";
				  rel2.to: "title_bg";
				  color: 0 0 0 0;
			   }
			}
			part { name: "divider1";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  min: 0 0;
				  max: 0 -1;
				  fixed: 1 1;
				  color: MP_BASIC_NAVIFRAME_TITLE_BUTTON_DIVIDER_COLOR_INC;
				  rel1 { relative: 0.0 0.0; to: "title_left_btn"; }
				  rel2 { relative: 0.0 1.0; to: "title_left_btn"; }
				  align: 1.0 0.5;
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  min: 2 48;
				  max: 2 48;
			   }
			}
			part { name: "title_left_btn";
			   type: SWALLOW;
			   scale: 1;
			   clip_to: "title_clip";
			   description { state: "default" 0.0;
				  max: MP_BASIC_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
				  fixed: 1 1;
				  align: 1.0 0.5;
				  rel1 { relative: 0.0 0.0; to: "divider2"; }
				  rel2 { relative: 0.0 1.0; to: "divider2"; }
			   }
			   description { state: "landscape" 0.0;
				  inherit: "default" 0.0;
				  max: MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_FUNC_BTN_SIZE_INC;
			   }
			}
			part { name: "divider2";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  min: 0 0;
				  max: 0 -1;
				  fixed: 1 1;
				  color: MP_BASIC_NAVIFRAME_TITLE_BUTTON_DIVIDER_COLOR_INC;
				  rel1 { relative: 0.0 0.0; to: "title_right_btn"; }
				  rel2 { relative: 0.0 1.0; to: "title_right_btn"; }
				  align: 1.0 0.5;
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  min: 2 48;
				  max: 2 48;
			   }
			}
			part { name: "elm.swallow.icon";
			   type: SWALLOW;
			   scale: 1;
			   clip_to: "title_clip";
			   description { state: "default" 0.0;
				  max: MP_BASIC_NAVIFRAME_ICON_SIZE_INC;
				  fixed: 1 1;
				  rel1 { relative: 0.0 0.0; to: "padding_before_text"; offset: 10 0;}
				  rel2 { relative: 0.0 1.0; to: "padding_before_text"; offset: 10 0;}
				  aspect: 1.0 1.0;
				  aspect_preference: VERTICAL;
				  align: 1.0 0.5;
			   }
			}
			part { name: "title_right_btn";
			   type: SWALLOW;
			   scale: 1;
			   clip_to: "title_clip";
			   description { state: "default" 0.0;
				  max: MP_BASIC_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
				  fixed: 1 1;
				  align: 1.0 0.5;
				  rel1 { relative: 1.0 0.0; to: "title_bg"; }
				  rel2 { relative: 1.0 1.0; to: "title_bg"; }
			   }
			   description { state: "landscape" 0.0;
				  inherit: "default" 0.0;
				  max: MP_BASIC_NAVIFRAME_LANDSCAPE_TITLE_FUNC_BTN_SIZE_INC;
			   }
			}
			part { name: "toolbar";
			   type: SWALLOW;
			   scale: 1;
			   clip_to: "toolbar_clip";
			   description { state: "default" 0.0;
				  min: 0 0;
				  max: 999999 0;
				  fixed: 0 1;
				  align: 0.0 1.0;
				  visible: 0;
				  rel1 { to: "base"; }
				  rel2 { to: "base"; }
			   }
			   description { state: "visible" 0.0;
				  inherit: "default" 0.0;
				  min: 0 MP_BASIC_NAVIFRAME_TOOLBAR_HEIGHT_INC;
				  max: 999999 MP_BASIC_NAVIFRAME_TOOLBAR_HEIGHT_INC;
				  visible: 1;
			   }
			   description { state: "visible_landscape" 0.0;
				  inherit: "default" 0.0;
				  min: 0 MP_BASIC_NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC;
				  max: 999999 MP_BASIC_NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC;
				  visible: 1;
			   }
			}
			part { name: "more_btn_bg";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
				  fixed: 1 0;
				  align: 0.0 0.0;
				  rel1 { relative: 0.0 0.0; to: "toolbar"; }
				  rel2 { relative: 0.0 1.0; to: "toolbar"; }
				  visible: 0;
			   }
			}
			part { name: "toolbar_more_btn";
			   type: SWALLOW;
			   scale: 1;
			   clip_to: "toolbar_clip";
			   description { state: "default" 0.0;
				  max: MP_BASIC_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
				  fixed: 1 1;
				  rel1.to: "more_btn_bg";
				  rel2.to: "more_btn_bg";
				  visible: 0;
			   }
			   description { state: "landscape" 0.0;
				  inherit: "default" 0.0;
				  max: MP_BASIC_NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC;
			   }
			}
			part { name: "prev_btn_bg";
			   type: RECT;
			   scale: 1;
			   mouse_events: 0;
			   description { state: "default" 0.0;
				  min: MP_BASIC_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
				  fixed: 1 0;
				  align: 1.0 0.0;
				  rel1 { relative: 1.0 0.0; to: "toolbar"; }
				  rel2.to: "toolbar";
				  visible: 0;
			   }
			}
			part { name: "elm.swallow.prev_btn";
			   type: SWALLOW;
			   scale: 1;
			   clip_to: "toolbar_clip";
			   description { state: "default" 0.0;
				  max: MP_BASIC_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
				  fixed: 1 1;
				  align: 0.5 0.5;
				  rel1.to: "prev_btn_bg";
				  rel2.to: "prev_btn_bg";
				  visible: 0;
			   }
			   description { state: "landscape" 0.0;
				  inherit: "default" 0.0;
				  max: MP_BASIC_NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC;
			   }
			}
			part { name: "toolbar_clip";
			   type: RECT;
			   mouse_events: 0;
			   clip_to: "clipper";
			   description { state: "default" 0.0;
				  rel1 { to: "toolbar"; }
				  rel2 { to: "toolbar"; }
			   }
			}
		 }
		 programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "clipper";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            script {
               set_state(PART:"clipper", "default", 0.0);
               run_program(PROGRAM:"start_title_slide");
            }
         }
         program { name: "invisible";
            signal: "elm,state,invisible";
            source: "elm";
            script {
               run_program(PROGRAM:"stop_title_slide");
               set_state(PART:"clipper", "hide", 0.0);
            }
         }
         program { name: "start_title_slide";
            signal: "elm,action,title,slide,start";
            source: "";
            script {
               run_program(PROGRAM:"stop_title_slide");
               set_int(title_slide_anim_id, timer(1.5, "start_slide", 0));
               if (get_int(subtitle))
                 set_int(subtitle_slide_anim_id, timer(1.5, "start_slide", 1));
            }
         }
         program { name: "stop_title_slide";
            signal: "elm,action,title,slide,stop";
            source: "";
            script {
               if (!get_int(title_slide_stop) || get_int(title_slide_anim_id))
                 stop_slide(0);
               if (get_int(subtitle))
                 if (!get_int(subtitle_slide_stop) || get_int(subtitle_slide_anim_id))
                   stop_slide(1);
            }
         }
			program { name: "title_show";
			   signal: "elm,state,title,show";
			   source: "elm";
			   script {
				  if (!get_int(landscape))
					set_state(PART:"title_bg", "default", 0.0);
				  else
					set_state(PART:"title_bg", "landscape", 0.0);
			   }
			}
			program { name: "title_hide";
			   signal: "elm,state,title,hide";
			   source: "elm";
			   script {
				  set_state(PART:"title_bg", "hide", 0.0);
			   }
			}
			program { name: "subtitle_show";
			   signal: "elm,state,subtitle,show";
			   source: "elm";
			   script {
				  set_state(PART:"badge_top_padding", "subtitle_is_set", 0.0);
				  set_state(PART:"maintitle_text_bg", "subtitle_is_set", 0.0);
				  if (!get_int(landscape)) {
					 set_state(PART:"elm.text.title", "subtitle_is_set", 0.0);
					 set_state(PART:"subtitle_top_padding", "visible", 0.0);
					 set_state(PART:"subtitle_text_bg", "visible", 0.0);
				  }
				  else {
					 set_state(PART:"elm.text.title", "subtitle_is_set_landscape", 0.0);
					 set_state(PART:"subtitle_top_padding", "visible_landscape", 0.0);
					 set_state(PART:"subtitle_text_bg", "visible_landscape", 0.0);
				  }
				  set_int(subtitle, 1);
			   }
			}
			program { name: "subtitle_hide";
			   signal: "elm,state,subtitle,hide";
			   source: "elm";
			   script {
				  set_state(PART:"badge_top_padding", "default", 0.0);
				  set_state(PART:"maintitle_text_bg", "default", 0.0);
				  set_state(PART:"subtitle_top_padding", "default", 0.0);
				  set_state(PART:"subtitle_text_bg", "default", 0.0);
				  set_state(PART:"elm.text.title", "default", 0.0);
				  set_int(subtitle, 0);
			   }
			}
			program { name: "icon_show";
			   signal: "elm,state,icon,show";
			   source: "elm";
			   action: STATE_SET "icon" 0.0;
			   target: "title_left_padding";
			}
			program { name: "icon_hide";
			   signal: "elm,state,icon,hide";
			   source: "elm";
			   action: STATE_SET "default" 0.0;
			   target: "title_left_padding";
			}
			program { name: "title_left_btn_show";
			   signal: "elm,state,title_left_btn,show";
			   source: "elm";
			   script {
				  set_state(PART:"divider1", "visible", 0.0);
				  set_state(PART:"title_right_padding", "title_left_btn_set", 0.0);
			   }
			}
			program { name: "title_left_btn_hide";
			   signal: "elm,state,title_left_btn,hide";
			   source: "elm";
			   script {
				  set_state(PART:"divider1", "default", 0.0);
				  set_state(PART:"title_right_padding", "default", 0.0);
			   }
			}
			program { name: "title_right_btn_show";
			   signal: "elm,state,title_right_btn,show";
			   source: "elm";
			   action: STATE_SET "visible" 0.0;
			   target: "divider2";
			}
			program { name: "title_right_btn_hide";
			   signal: "elm,state,title_right_btn,hide";
			   source: "elm";
			   action: STATE_SET "default" 0.0;
			   target: "divider2";
			}
			program { name: "toolbar_show";
			   signal: "elm,state,toolbar,show";
			   source: "elm";
			   script {
				  if (!get_int(landscape))
					set_state(PART:"toolbar", "visible", 0.0);
				  else
					set_state(PART:"toolbar", "visible_landscape", 0.0);
				  set_int(tbar_bg, get_int(tbar_bg) + 1);
			   }
			}
			program { name: "toolbar_hide";
			   signal: "elm,state,toolbar,hide";
			   source: "elm";
			   script {
				  set_int(tbar_bg, get_int(tbar_bg) - 1);
				  if (get_int(tbar_bg) <= 0)
					set_state(PART:"toolbar", "default", 0.0);
			   }
			}
			program { name: "toolbar_open_internal";
			   signal: "elm,state,toolbar,open,internal";
			   source: "elm";
			   script {
				  set_int(tbar_close, 0);
				  if (!get_int(landscape))
					set_state(PART:"toolbar", "visible", 0.0);
				  else
					set_state(PART:"toolbar", "visible_landscape", 0.0);
			   }
			}
			program { name: "toolbar_close_internal";
			   signal: "elm,state,toolbar,close,internal";
			   source: "elm";
			   script {
				  set_int(tbar_close, 1);
				  set_state(PART:"toolbar", "default", 0.0);
			   }
			}
			program { name: "toolbar_open";
			   signal: "elm,state,toolbar,open";
			   source: "";
			   script {
				  if (!get_int(landscape))
					set_state(PART:"toolbar", "visible", 0.0);
				  else
					set_state(PART:"toolbar", "visible_landscape", 0.0);
			   }
			   transition: LINEAR 0.2;
			   after: "toolbar_open_internal";
			}
			program { name: "toolbar_close";
			   signal: "elm,state,toolbar,close";
			   source: "";
			   action: STATE_SET "default" 0.0;
			   target: "toolbar";
			   transition: LINEAR 0.2;
			   after: "toolbar_close_internal";
			}
			program { name: "toolbar_instant_open";
			   signal: "elm,state,toolbar,instant_open";
			   source: "";
			   script {
				  emit("elm,state,toolbar,open,internal", "elm");
			   }
			}
			program { name: "toolbar_instant_close";
			   signal: "elm,state,toolbar,instant_close";
			   source: "";
			   script {
				  emit("elm,state,toolbar,close,internal", "elm");
			   }
			}
			program { name: "show_finished";
			   action: SIGNAL_EMIT "elm,action,show,finished" "";
			}
         program { name: "pushed_finished";
            script {
               run_program(PROGRAM:"stop_title_slide");
               emit("elm,action,pushed,finished", "");
            }
         }
         program { name: "popped_finished";
            script {
               run_program(PROGRAM:"stop_title_slide");
               emit("elm,action,popped,finished", "");
            }
         }
			program {
			   name: "title_clicked";
			   signal: "mouse,clicked,1";
			   source: "click_event_area";
			   script {
				  emit("elm,action,title,clicked", "");
			   }
			}
			program {
			   name: "title_badge_show";
			   signal: "elm,state,title_badge,show";
			   source: "elm";
			   script {
				  set_state(PART:"badge_left_padding", "visible", 0.0);
				  set_state(PART:"badge_padding", "visible", 0.0);
				  set_state(PART:"left.padding.text", "visible", 0.0);
				  set_state(PART:"right.padding.text", "visible", 0.0);
				  set_state(PART:"badge_bg", "visible", 0.0);
				  set_state(PART:"title_badge", "visible", 0.0);
				  set_int(title_badge_visible, 1);
			   }
			}
			program {
			   name: "title_badge_hide";
			   signal: "elm,state,title_badge,hide";
			   source: "elm";
			   script {
				  set_state(PART:"badge_left_padding", "default", 0.0);
				  set_state(PART:"badge_padding", "default", 0.0);
				  set_state(PART:"left.padding.text", "default", 0.0);
				  set_state(PART:"right.padding.text", "default", 0.0);
				  set_state(PART:"badge_bg", "default", 0.0);
				  set_state(PART:"title_badge", "default", 0.0);
				  set_int(title_badge_visible, 0);
			   }
			}
			program {
			   name: "change_to_landscape";
			   signal: "elm,state,landscape";
			   source: "elm";
			   script {
				  if (!get_int(landscape)) {
					 set_state(PART:"title_text_bg", "landscape", 0.0);
					 set_state(PART:"elm.text.subtitle", "landscape", 0.0);
					 set_state(PART:"title_left_btn", "landscape", 0.0);
					 set_state(PART:"title_right_btn", "landscape", 0.0);
					 set_state(PART:"toolbar_more_btn", "landscape", 0.0);
					 set_state(PART:"elm.swallow.prev_btn", "landscape", 0.0);

					 new st[31];
					 new Float:vl;
					 get_state(PART:"title_bg", st, 30, vl);
					 if (!strcmp(st, "default"))
					   set_state(PART:"title_bg", "landscape", 0.0);

					 get_state(PART:"elm.text.title", st, 30, vl);
					 if (!strcmp(st, "subtitle_is_set"))
					   set_state(PART:"elm.text.title", "subtitle_is_set_landscape", 0.0);

					 get_state(PART:"subtitle_top_padding", st, 30, vl);
					 if (!strcmp(st, "visible"))
					   set_state(PART:"subtitle_top_padding", "visible_landscape", 0.0);

					 get_state(PART:"subtitle_text_bg", st, 30, vl);
					 if (!strcmp(st, "visible"))
					   set_state(PART:"subtitle_text_bg", "visible_landscape", 0.0);

					 get_state(PART:"toolbar", st, 30, vl);
					 if (!strcmp(st, "visible"))
					   set_state(PART:"toolbar", "visible_landscape", 0.0);

					 set_int(landscape, 1);
				  }
			   }
			}
			program {
			   name: "change_to_portrait";
			   signal: "elm,state,portrait";
			   source: "elm";
			   script {
				  if (get_int(landscape)) {
					 set_state(PART:"title_text_bg", "default", 0.0);
					 set_state(PART:"elm.text.subtitle", "default", 0.0);
					 set_state(PART:"title_left_btn", "default", 0.0);
					 set_state(PART:"title_right_btn", "default", 0.0);
					 set_state(PART:"toolbar_more_btn", "default", 0.0);
					 set_state(PART:"elm.swallow.prev_btn", "default", 0.0);

					 new st[31];
					 new Float:vl;
					 get_state(PART:"title_bg", st, 30, vl);
					 if (!strcmp(st, "landscape"))
					   set_state(PART:"title_bg", "default", 0.0);

					 get_state(PART:"elm.text.title", st, 30, vl);
					 if (!strcmp(st, "subtitle_is_set_landscape"))
					   set_state(PART:"elm.text.title", "subtitle_is_set", 0.0);

					 get_state(PART:"subtitle_top_padding", st, 30, vl);
					 if (!strcmp(st, "visible_landscape"))
					   set_state(PART:"subtitle_top_padding", "visible", 0.0);

					 get_state(PART:"subtitle_text_bg", st, 30, vl);
					 if (!strcmp(st, "visible_landscape"))
					   set_state(PART:"subtitle_text_bg", "visible", 0.0);

					 get_state(PART:"toolbar", st, 30, vl);
					 if (!strcmp(st, "visible_landscape"))
					   set_state(PART:"toolbar", "visible", 0.0);

					 set_int(landscape, 0);
				  }
			   }
			}
			program { name: "landscape_mode";
			   source: "elm";
			   signal: "elm,state,orient,90";
			   action: SIGNAL_EMIT "elm,state,landscape" "elm";
			}
			program { name: "landscape_mode2";
			   source: "elm";
			   signal: "elm,state,orient,270";
			   action: SIGNAL_EMIT "elm,state,landscape" "elm";
			}
			program { name: "portrait_mode";
			   source: "elm";
			   signal: "elm,state,orient,0";
			   action: SIGNAL_EMIT "elm,state,portrait" "elm";
			}
			program { name: "portrait_mode2";
			   source: "elm";
			   signal: "elm,state,orient,180";
			   action: SIGNAL_EMIT "elm,state,portrait" "elm";
			}
		 }
	}

#define MP_NAVIFRAME_TITLE_LD_H_INC 100

   group { name:"elm/naviframe/item/landscape/music/default";
   	alias: "elm/naviframe/item/miniplayer/music/landscape/default";
      data.item: "tizen_zoom" 1;
      images {
         image: "M01_title_bubble.png" COMP;
      }
      script {
         public tbar_bg = 0;     //Toolbar BG Show call count
         public toolbar_buttons_visible = 0; //when both toolbar buttons are visible
         public title_toolbar_buttons_visible = 0; //when both title toolbar buttons are visible
         public tbar_close = 0; //Toolbar lastest Open/Close status
         public sip_visible = 0; //SIP latest visible/hidden status
         public title_slide_visible = 0; //Title slide visible/hidden status
      }
      parts {
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
               visible: 1;
            }
            description { state: "hide" 0.0;
               visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               color: MP_NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "title_toolbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
               color: MP_NAVIFRAME_TITLE_BG_COLOR_INC;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 MP_NAVIFRAME_TITLE_LD_H_INC;
               visible: 1;
            }
         }
         part { name: "title_toolbar_top_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_TOOLBAR_TOP_PADDING_INC;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_toolbar_bg"; }
               rel2 { relative: 1.0 0.0; to: "title_toolbar_bg"; }
               visible: 0;
            }
         }
         part { name: "title_toolbar_bottom_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_TOOLBAR_BOTTOM_PADDING_INC;
               fixed: 0 1;
               align: 0.0 1.0;
               rel1 { relative: 0.0 1.0; to: "title_toolbar_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_toolbar_bg"; }
               visible: 0;
            }
         }
         part { name: "title_more_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 1.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_top_padding"; }
               rel2 { relative: 0.0 0.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_bottom_padding"; }
               visible: 0;
            }
         }
         part { name: "title_prev_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 1;
               align: 1.0 0.0;
               rel1 { relative: 1.0 1.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_top_padding"; }
               rel2 { relative: 1.0 0.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_bottom_padding"; }
               visible: 0;
            }
         }
         part { name: "title_toolbar_btns_area";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "title_more_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_prev_btn_bg"; }
               visible: 0;
            }
         }
         part { name: "title_toolbar_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { to: "title_toolbar_bg"; }
               rel2 { to: "title_toolbar_bg"; }
            }
         }
         part { name: "title_toolbar_button_padding";
            type: RECT;
            scale : 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 0;
               max: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 9999;
               fixed : 1 0;
               visible: 0;
               align: 0.5 0.5;
               rel1.to: "title_toolbar_btns_area";
               rel2.to: "title_toolbar_btns_area";
            }
         }
         part { name: "title_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 1 MP_NAVIFRAME_TITLE_LD_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
               color: 0 0 0 0;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to: "title_bg"; }
               rel2 { to: "title_bg"; }
            }
         }
         part { name: "top_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_TOP_PADDING_INC;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 0.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "right_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_RIGHT_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "padding_center_text1";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_bg"; }
               visible: 0;
            }
            description { state: "icon" 0.0;
               inherit: "default" 0.0;
               min: MP_NAVIFRAME_ICON_PADDING_INC;
            }
         }
	 part { name: "toolbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
               color: MP_NAVIFRAME_TOOLBAR_BG_COLOR_INC;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 0 MP_NAVIFRAME_TOOLBAR_HEIGHT_INC;
               max: 999999 MP_NAVIFRAME_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "toolbar_btns_area";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "more_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "prev_btn_bg"; }
               visible: 0;
            }
         }
         part { name: "toolbar_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to: "toolbar_bg"; }
               rel2 { to: "toolbar_bg"; }
            }
         }
         part { name: "toolbar_button1";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "toolbar_btns_area";
               rel2.to: "toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 1.0 0.5;
               rel2 {
                  relative: 0.0 1.0;
                  to: "toolbar_button_padding";
               }
            }
         }
         part { name: "toolbar_button_padding";
            type: RECT;
            scale : 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 0;
               max: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 9999;
               fixed : 1 0;
               visible: 0;
               align: 0.5 0.5;
               rel1.to: "toolbar_btns_area";
               rel2.to: "toolbar_btns_area";
            }
         }
         part { name: "toolbar_button2";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "toolbar_btns_area";
               rel2.to: "toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to: "toolbar_button_padding";
               }
            }
         }
	part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;//0.0 1.0;
               rel1.to: "base";
	       rel2.relative: 1.0 1.0;
               rel2.to: "base";
            }
            description { state: "sip_visible" 0.0;
               inherit: "default" 0.0;
               rel1.to_y: "title_toolbar_bg";
            }
         }
	part { name: "more_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "toolbar_bg"; }
               rel2 { relative: 0.0 1.0; to: "toolbar_bg"; }
               visible: 0;
            }
         }
         part { name: "toolbar_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               visible: 0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               rel1.to: "more_btn_bg";
               rel2.to: "more_btn_bg";
            }
         }
         part { name: "prev_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "toolbar_bg"; }
               rel2.to: "toolbar_bg";
               visible: 0;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               visible: 0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "prev_btn_bg";
               rel2.to: "prev_btn_bg";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.content";
               rel2.to: "elm.swallow.content";
            }
         }
         part { name: "padding_center_text2";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_PADDING2_INC;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_left_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_left_btn_bg"; }
               visible: 0;
            }
         }
         part { name: "padding_bottom_text";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_BOTTOM_TEXT_PADDING_INC;
               fixed: 0 1;
               align: 0.0 1.0;
               rel1 { relative: 0.0 1.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
               visible: 0;
            }
         }
         part { name: "badge_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 0.0 0.0; to: "padding_center_text2"; }
               rel2 { relative: 0.0 1.0; to: "padding_center_text2"; }
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: MP_NAVIFRAME_BADGE_PADDING_INC;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Medium";
                  size: MP_NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               color: MP_NAVIFRAME_TITLE_TEXT_COLOR_INC;
               color3: 255 255 255 255;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 { relative: 1.0 1.0; to_x: "padding_center_text1"; to_y: "top_padding"; }
               rel2 { relative: 0.0 0.0; to_x: "badge_padding"; to_y: "padding_bottom_text"; }
            }
            description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               text { font: "Tizen:style=Medium";
                  size: MP_NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.2;
               }
               align: 0.0 0.0;
               rel1 { relative: 1.0 0.0; to_x: "padding_center_text1"; to_y: "top_padding"; }
            }
         }
         part { name: "elm.text.subtitle";
            type: TEXT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Medium";
                  size: MP_NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 1.0;
               }
               color: MP_NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
               align: 0.0 1.0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "padding_center_text1";
                  to_y: "elm.text.title";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to_x: "padding_center_text2";
                  to_y: "elm.text.title";
               }
            }
         }
         part { name: "padding_before_text";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to: "elm.text.title"; }
               fixed: 1 0;
               min: MP_NAVIFRAME_PADDING_INC;
               visible: 0;
            }
         }
         part { name: "badge_left_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_PADDING2_INC;
               fixed: 1 0;
               rel1 { relative: 1.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 1.0 1.0; to: "elm.text.title"; }
               align: 0.0 0.0;
            }
         }
         part { name: "badge_top_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_BADGE_BOTTOM_TEXT_PADDING_INC;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to_x: "title_bg"; to_y: "elm.text.title"; }
               rel2 { relative: 1.0 0.0; to_x: "title_bg"; to_y: "elm.text.title"; }
               align: 0.0 0.0;
            }
         }
         part { name: "badge_bg";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               fixed: 1 1;
               rel1 { relative: 1.0 1.0; to_x: "badge_left_padding"; to_y: "badge_top_padding"; }
               rel2 { relative: 1.0 1.0; to_x: "badge_left_padding"; to_y: "badge_top_padding"; }
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 0.0 0.0;
               image {
                  normal: "M01_title_bubble.png";
                  border: MP_NAVIFRAME_BADGE_BG_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: MP_NAVIFRAME_BADGE_BG_IMAGE_SIZE_INC;
               fixed: 1 1;
            }
         }
         part { name: "badge_left_text_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_BADGE_LEFT_TEXT_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "badge_bg"; }
               rel2 { relative: 0.0 1.0; to: "badge_bg"; }
            }
         }
         part { name: "badge_right_text_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_BADGE_LEFT_TEXT_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "badge_bg"; }
               rel2 { relative: 1.0 1.0; to: "badge_bg"; }
            }
         }
         part { name: "badge_bottom_text_padding";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: MP_NAVIFRAME_BADGE_BOTTOM_TEXT_PADDING_INC;
               fixed: 0 1;
               align: 0.0 1.0;
               rel1 { relative: 0.0 1.0; to: "badge_bg"; }
               rel2 { relative: 1.0 1.0; to: "badge_bg"; }
            }
         }
         part { name: "title_badge";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 MP_NAVIFRAME_BADGE_TEXT_H_INC;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to_x: "badge_left_text_padding"; to_y: "badge_bottom_text_padding"; }
               rel2 { relative: 0.0 0.0; to_x: "badge_right_text_padding"; to_y: "badge_bottom_text_padding"; }
               align: 0.5 1.0;
               color: 255 255 255 255;
               text {
                  font: "Tizen:style=Medium";
                  size: 34;
                  min: 0 0;
                  max: 1 0;
                  align: 0.5 0.5;
               }
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "click_event_area";
             ignore_flags: ON_HOLD;
             type: RECT;
             mouse_events: 1;
             description { state: "default" 0.0;
                rel1 { to: "title_bg"; }
                rel2 { to: "title_bg"; }
                color: 0 0 0 0;
             }
         }
         part { name: "elm.swallow.title";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            repeat_events: 1;
            description { state: "default" 0.0;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 { relative: 1.0 1.0; to_x: "padding_center_text1"; to_y: "top_padding"; }
               rel2 { relative: 0.0 0.0; to_x: "badge_padding"; to_y: "padding_bottom_text"; }
            }
	    description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to_x: "padding_center_text1"; to_y: "top_padding"; }
			   rel2.to_y: "elm.swallow.subtitle";
            }
         }
	 part { name: "elm.swallow.subtitle";
            type: SWALLOW;
            scale: 1;
            repeat_events: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
	       align: 0.0 1.0;
               rel1 { relative: 1.0 1.0; to_x: "padding_center_text1"; to_y: "elm.text.title"; }
               rel2 { relative: 0.0 1.0; to_x: "padding_center_text2"; to_y: "elm.text.title"; }
            }
         }
         part { name: "access.title";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "title_bg";
               rel2.to: "title_bg";
               color: 0 0 0 0;
            }
         }
         part { name: "title_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_more_btn_bg";
               rel2.to: "title_more_btn_bg";
            }
         }
         part { name: "title_prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_prev_btn_bg";
               rel2.to: "title_prev_btn_bg";
            }
         }
         part { name: "title_left_btn_bg";
            type: RECT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_right_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_right_btn_bg"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "title_left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1 { to: "title_left_btn_bg"; }
               rel2 { to: "title_left_btn_bg"; }
            }
         }
         part { name: "title_toolbar_button1";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_toolbar_btns_area";
               rel2.to: "title_toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 1.0 0.5;
               rel2 {
                  relative: 0.0 1.0;
                  to: "title_toolbar_button_padding";
               }
            }
         }
         part { name: "title_toolbar_button2";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_toolbar_btns_area";
               rel2.to: "title_toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to: "title_toolbar_button_padding";
               }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_ICON_SIZE_INC;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to: "padding_before_text"; }
               rel2 { relative: 0.0 1.0; to: "padding_before_text"; }
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
            }
         }
         part { name: "title_right_btn_bg";
            type: RECT;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "right_padding"; }
               rel2 { relative: 0.0 1.0; to: "right_padding"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "title_right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               align: 0.5 0.5;
               fixed: 1 1;
               rel1 { to: "title_right_btn_bg"; }
               rel2 { to: "title_right_btn_bg"; }
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "clipper";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
         program { name: "invisible";
            signal: "elm,state,invisible";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "clipper";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               if (get_int(sip_visible) == 0)
                 set_state(PART:"title_bg", "default", 0.0);
               else
                 set_state(PART:"title_toolbar_bg", "show", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            script {
               if (get_int(sip_visible) == 0)
                 set_state(PART:"title_bg", "hide", 0.0);
               else
                 set_state(PART:"title_toolbar_bg", "default", 0.0);
            }
         }
         program { name: "subtitle_show";
            signal: "elm,state,subtitle,show";
            source: "elm";
            script {
               set_state(PART:"elm.text.title", "subtitle_is_set", 0.0);
            }
         }
         program { name: "subtitle_hide";
            signal: "elm,state,subtitle,hide";
            source: "elm";
            script {
               set_state(PART:"elm.text.title", "default", 0.0);
            }
         }
	 program {
            name: "title_slide_show";
            signal: "elm,state,elm.swallow.title,show";
            source: "elm";
            script {
               set_int(title_slide_visible, 1);
            }
         }
         program {
            name: "title_slide_hide";
            signal: "elm,state,elm.swallow.title,hide";
            source: "elm";
            script {
               set_int(title_slide_visible, 0);
            }
         }
	 program {
            name: "subtitle_slide_show";
            signal: "elm,state,elm.swallow.subtitle,show";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.title", "subtitle_is_set", 0.0);
            }
         }
         program {
            name: "subtitle_slide_hide";
            signal: "elm,state,elm.swallow.subtitle,hide";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.title", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,show";
            source: "elm";
            action: STATE_SET "icon" 0.0;
            target: "padding_center_text1";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "padding_center_text1";
         }
         program { name: "left_btn_show";
            signal: "elm,state,title_left_btn,show";
            source: "elm";
            script {
               set_state(PART:"title_left_btn_bg", "visible", 0.0);
            }
         }
         program { name: "left_btn_hide";
            signal: "elm,state,title_left_btn,hide";
            source: "elm";
            script {
                 set_state(PART:"title_left_btn_bg", "default", 0.0);
            }
         }
         program { name: "right_btn_show";
            signal: "elm,state,title_right_btn,show";
            source: "elm";
            script {
               set_state(PART:"title_right_btn_bg", "visible", 0.0);
            }
         }
         program { name: "right_btn_hide";
            signal: "elm,state,title_right_btn,hide";
            source: "elm";
            script {
                 set_state(PART:"title_right_btn_bg", "default", 0.0);
            }
         }
         program { name: "sip_show";
            signal: "elm,state,sip,shown";
            source: "";
            script {
               set_int(sip_visible, 1);
               set_state(PART:"title_bg", "hide", 0.0);
               set_state(PART:"elm.swallow.content", "sip_visible", 0.0);
               set_state(PART:"title_toolbar_bg", "show", 0.0);
            }
         }
         program { name: "sip_hide";
            signal: "elm,state,sip,hidden";
            source: "";
            script {
               set_int(sip_visible, 0);
               set_state(PART:"title_bg", "default", 0.0);
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"title_toolbar_bg", "default", 0.0);
            }
         }
         program { name: "title_toolbar_button1_show";
            signal: "elm,state,title_toolbar_button1,show";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) + 1);
               if (get_int(title_toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"title_toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"title_toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "title_toolbar_button1_hide";
            signal: "elm,state,title_toolbar_button1,hide";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) - 1);
               set_state(PART:"title_toolbar_button1", "default", 0.0);
               set_state(PART:"title_toolbar_button2", "default", 0.0);
            }
         }
         program { name: "title_toolbar_button2_show";
            signal: "elm,state,title_toolbar_button2,show";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) + 1);
               if (get_int(title_toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"title_toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"title_toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "title_toolbar_button2_hide";
            signal: "elm,state,title_toolbar_button2,hide";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) - 1);
               set_state(PART:"title_toolbar_button1", "default", 0.0);
               set_state(PART:"title_toolbar_button2", "default", 0.0);
            }
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
            }
         }
         program { name: "more_btn_show";
            signal: "elm,state,toolbar_more_btn,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
            }
         }
         program { name: "more_btn_hide";
            signal: "elm,state,toolbar_more_btn,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
            }
         }
         program { name: "toolbar_button1_show";
            signal: "elm,state,toolbar_button1,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) + 1);
               if (get_int(toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "toolbar_button1_hide";
            signal: "elm,state,toolbar_button1,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) - 1);
               set_state(PART:"toolbar_button1", "default", 0.0);
               set_state(PART:"toolbar_button2", "default", 0.0);
            }
         }
         program { name: "toolbar_button2_show";
            signal: "elm,state,toolbar_button2,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) + 1);
               if (get_int(toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "toolbar_button2_hide";
            signal: "elm,state,toolbar_button2,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) - 1);
               set_state(PART:"toolbar_button1", "default", 0.0);
               set_state(PART:"toolbar_button2", "default", 0.0);
            }
         }
         program { name: "toolbar_bg_show";
            signal: "elm,state,toolbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"toolbar_bg", "visible", 0.0);
               set_int(tbar_bg, get_int(tbar_bg) + 1);
            }
         }
         program { name: "toolbar_bg_hide";
            signal: "elm,state,toolbar_bg,hide";
            source: "elm";
            script {
               set_int(tbar_bg, get_int(tbar_bg) - 1);
               if (get_int(tbar_bg) <= 0)
                 set_state(PART:"toolbar_bg", "default", 0.0);
            }
         }
         program { name: "toolbar_open_internal";
            signal: "elm,state,toolbar,open,internal";
            source: "elm";
            script {
               set_int(tbar_close, 0);
               set_state(PART:"toolbar_bg", "visible", 0.0);
            }
         }
         program { name: "toolbar_close_internal";
            signal: "elm,state,toolbar,close,internal";
            source: "elm";
            script {
               set_int(tbar_close, 1);
               set_state(PART:"toolbar_bg", "default", 0.0);
            }
         }
         program { name: "toolbar_open";
            signal: "elm,state,toolbar,open";
            source: "";
            action: STATE_SET "visible" 0.0;
            target: "toolbar_bg";
            transition: LINEAR 0.2;
            after: "toolbar_open_internal";
         }
         program { name: "toolbar_close";
            signal: "elm,state,toolbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "toolbar_bg";
            transition: LINEAR 0.2;
            after: "toolbar_close_internal";
         }
         program { name: "toolbar_instant_open";
            signal: "elm,state,toolbar,instant_open";
            source: "";
            script {
               emit("elm,state,toolbar,open,internal", "elm");
            }
         }
         program { name: "toolbar_instant_close";
            signal: "elm,state,toolbar,instant_close";
            source: "";
            script {
               emit("elm,state,toolbar,close,internal", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            action: SIGNAL_EMIT "elm,action,title,clicked" "";
         }
         program {
            name: "display_mode_compress";
            signal: "display,mode,compress";
            source: "";
            script {
               set_state(PART:"toolbar_bg", "default", 0.0);
            }
         }
         program {
            name: "display_mode_default";
            signal: "display,mode,default";
            source: "";
            script {
               if ((get_int(tbar_bg) > 0) && (get_int(tbar_close) == 0))
                  set_state(PART:"toolbar_bg", "visible", 0.0);
            }
         }
         program {
            name: "badge_show";
            signal: "elm,state,title_badge,show";
            source: "elm";
            script {
               set_state(PART:"badge_padding", "show", 0.0);
               set_state(PART:"badge_bg", "show", 0.0);
               set_state(PART:"title_badge", "show", 0.0);
            }
         }
         program {
            name: "badge_hide";
            signal: "elm,state,title_badge,hide";
            source: "elm";
            script {
               set_state(PART:"badge_padding", "default", 0.0);
               set_state(PART:"badge_bg", "default", 0.0);
               set_state(PART:"title_badge", "default", 0.0);
            }
         }
      }

   }

   group { name:"elm/naviframe/item/empty/music/default";
      data.item: "tizen_zoom" 1;
      script {
         public tbar_bg = 0;     //Toolbar BG Show call count
         public toolbar_buttons_visible = 0; //when both toolbar buttons are visible
         public title_toolbar_buttons_visible = 0; //when both title toolbar buttons are visible
         public tbar_close = 0; //Toolbar lastest Open/Close status
         public sip_visible = 0; //SIP latest visible/hidden status
      }
      parts {
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
               visible: 1;
            }
            description { state: "hide" 0.0;
               visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               color: MP_NAVIFRAME_TITLE_BG_COLOR_INC;
            }
         }
         part { name: "title_toolbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
               color: MP_NAVIFRAME_TITLE_BG_COLOR_INC;
               visible: 0;
            }
            description { state: "show" 0.0;
               inherit: "default" 0.0;
               min: 0 MP_NAVIFRAME_TITLE_H_INC;
               visible: 1;
            }
         }
         part { name: "title_toolbar_top_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_TOOLBAR_TOP_PADDING_INC;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "title_toolbar_bg"; }
               rel2 { relative: 1.0 0.0; to: "title_toolbar_bg"; }
               visible: 0;
            }
         }
         part { name: "title_toolbar_bottom_padding";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TITLE_TOOLBAR_BOTTOM_PADDING_INC;
               fixed: 0 1;
               align: 0.0 1.0;
               rel1 { relative: 0.0 1.0; to: "title_toolbar_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_toolbar_bg"; }
               visible: 0;
            }
         }
         part { name: "title_more_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 1;
               align: 0.0 0.0;
               rel1 { relative: 0.0 1.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_top_padding"; }
               rel2 { relative: 0.0 0.0; to: "title_toolbar_bg"; to_y: "title_toolbar_bottom_padding"; }
               visible: 0;
            }
         }
         part { name: "title_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_more_btn_bg";
               rel2.to: "title_more_btn_bg";
            }
         }
         part { name: "title_prev_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 1;
               align: 1.0 0.0;
               rel1 { relative: 1.0 1.0; to_x: "title_toolbar_bg"; to_y: "title_toolbar_top_padding"; }
               rel2 { relative: 1.0 0.0; to: "title_toolbar_bg"; to_y: "title_toolbar_bottom_padding"; }
               visible: 0;
            }
         }
         part { name: "title_prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_prev_btn_bg";
               rel2.to: "title_prev_btn_bg";
            }
         }
         part { name: "title_toolbar_btns_area";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "title_more_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_prev_btn_bg"; }
               visible: 0;
            }
         }
         part { name: "title_toolbar_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { to: "title_toolbar_bg"; }
               rel2 { to: "title_toolbar_bg"; }
            }
         }
         part { name: "title_toolbar_button1";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_toolbar_btns_area";
               rel2.to: "title_toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 1.0 0.5;
               rel2 {
                  relative: 0.0 1.0;
                  to: "title_toolbar_button_padding";
               }
            }
         }
         part { name: "title_toolbar_button_padding";
            type: RECT;
            scale : 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 0;
               max: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 9999;
               fixed : 1 0;
               visible: 0;
               align: 0.5 0.5;
               rel1.to: "title_toolbar_btns_area";
               rel2.to: "title_toolbar_btns_area";
            }
         }
         part { name: "title_toolbar_button2";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "title_toolbar_btns_area";
               rel2.to: "title_toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to: "title_toolbar_button_padding";
               }
            }
         }
         part { name: "title";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               align: 0.5 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "base"; }
               rel2 { relative: 1.0 0.0; to: "base"; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
            }
         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1.to: "title";
               rel2.to: "title";
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "base";
               rel1.to_y: "title";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "base";
               rel2.to_y: "toolbar_bg";
            }
            description { state: "sip_visible" 0.0;
               inherit: "default" 0.0;
               rel1.to_y: "title_toolbar_bg";
            }
         }
         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.content";
               rel2.to: "elm.swallow.content";
            }
         }
         part { name: "toolbar_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
               color: MP_NAVIFRAME_TOOLBAR_BG_COLOR_INC;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 0 MP_NAVIFRAME_TOOLBAR_HEIGHT_INC;
               max: 999999 MP_NAVIFRAME_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "more_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "toolbar_bg"; }
               rel2 { relative: 0.0 1.0; to: "toolbar_bg"; }
               visible: 0;
            }
         }
         part { name: "toolbar_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               visible: 0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               rel1.to: "more_btn_bg";
               rel2.to: "more_btn_bg";
            }
         }
         part { name: "prev_btn_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "toolbar_bg"; }
               rel2.to: "toolbar_bg";
               visible: 0;
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               visible: 0;
               max: MP_NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "prev_btn_bg";
               rel2.to: "prev_btn_bg";
            }
         }
         part { name: "toolbar_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { to: "toolbar_bg"; }
               rel2 { to: "toolbar_bg"; }
            }
         }
         part { name: "toolbar_btns_area";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "more_btn_bg"; }
               rel2 { relative: 0.0 1.0; to: "prev_btn_bg"; }
               visible: 0;
            }
         }
         part { name: "toolbar_button1";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "toolbar_btns_area";
               rel2.to: "toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 1.0 0.5;
               rel2 {
                  relative: 0.0 1.0;
                  to: "toolbar_button_padding";
               }
            }
         }
         part { name: "toolbar_button_padding";
            type: RECT;
            scale : 1;
            description { state: "default" 0.0;
               min: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 0;
               max: MP_NAVIFRAME_TOOLBAR_BUTTONS_PADDING_INC 9999;
               fixed : 1 0;
               visible: 0;
               align: 0.5 0.5;
               rel1.to: "toolbar_btns_area";
               rel2.to: "toolbar_btns_area";
            }
         }
         part { name: "toolbar_button2";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "toolbar_btns_area";
               rel2.to: "toolbar_btns_area";
            }
            description { state: "buttons_set" 0.0;
               inherit: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to: "toolbar_button_padding";
               }
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "clipper";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
         program { name: "invisible";
            signal: "elm,state,invisible";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "clipper";
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               if (get_int(sip_visible) == 0)
                 set_state(PART:"title", "default", 0.0);
               else
                 set_state(PART:"title_toolbar_bg", "show", 0.0);
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            script {
               if (get_int(sip_visible) == 0)
                 set_state(PART:"title", "hide", 0.0);
               else
                 set_state(PART:"title_toolbar_bg", "default", 0.0);
            }
         }
         program { name: "sip_show";
            signal: "elm,state,sip,shown";
            source: "";
            script {
               set_int(sip_visible, 1);
               set_state(PART:"title", "hide", 0.0);
               set_state(PART:"title_toolbar_bg", "show", 0.0);
               set_state(PART:"elm.swallow.content", "sip_visible", 0.0);
            }
         }
         program { name: "sip_hide";
            signal: "elm,state,sip,hidden";
            source: "";
            script {
               set_int(sip_visible, 0);
               set_state(PART:"title", "default", 0.0);
               set_state(PART:"title_toolbar_bg", "default", 0.0);
               set_state(PART:"elm.swallow.content", "default", 0.0);
            }
         }
         program { name: "title_toolbar_button1_show";
            signal: "elm,state,title_toolbar_button1,show";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) + 1);
               if (get_int(title_toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"title_toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"title_toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "title_toolbar_button1_hide";
            signal: "elm,state,title_toolbar_button1,hide";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) - 1);
               set_state(PART:"title_toolbar_button1", "default", 0.0);
               set_state(PART:"title_toolbar_button2", "default", 0.0);
            }
         }
         program { name: "title_toolbar_button2_show";
            signal: "elm,state,title_toolbar_button2,show";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) + 1);
               if (get_int(title_toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"title_toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"title_toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "title_toolbar_button2_hide";
            signal: "elm,state,title_toolbar_button2,hide";
            source: "elm";
            script {
               set_int(title_toolbar_buttons_visible, get_int(title_toolbar_buttons_visible) - 1);
               set_state(PART:"title_toolbar_button1", "default", 0.0);
               set_state(PART:"title_toolbar_button2", "default", 0.0);
            }
         }
         program { name: "prev_btn_show";
            signal: "elm,state,prev_btn,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
            }
         }
         program { name: "prev_btn_hide";
            signal: "elm,state,prev_btn,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
            }
         }
         program { name: "more_btn_show";
            signal: "elm,state,toolbar_more_btn,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
            }
         }
         program { name: "more_btn_hide";
            signal: "elm,state,toolbar_more_btn,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
            }
         }
         program { name: "toolbar_button1_show";
            signal: "elm,state,toolbar_button1,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) + 1);
               if (get_int(toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "toolbar_button1_hide";
            signal: "elm,state,toolbar_button1,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) - 1);
               set_state(PART:"toolbar_button1", "default", 0.0);
               set_state(PART:"toolbar_button2", "default", 0.0);
            }
         }
         program { name: "toolbar_button2_show";
            signal: "elm,state,toolbar_button2,show";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,show", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) + 1);
               if (get_int(toolbar_buttons_visible) >= 2)
                 {
                    set_state(PART:"toolbar_button1", "buttons_set", 0.0);
                    set_state(PART:"toolbar_button2", "buttons_set", 0.0);
                 }
            }
         }
         program { name: "toolbar_button2_hide";
            signal: "elm,state,toolbar_button2,hide";
            source: "elm";
            script {
               emit("elm,state,toolbar_bg,hide", "elm");
               set_int(toolbar_buttons_visible, get_int(toolbar_buttons_visible) - 1);
               set_state(PART:"toolbar_button1", "default", 0.0);
               set_state(PART:"toolbar_button2", "default", 0.0);
            }
         }
         program { name: "toolbar_bg_show";
            signal: "elm,state,toolbar_bg,show";
            source: "elm";
            script {
               set_state(PART:"toolbar_bg", "visible", 0.0);
               set_int(tbar_bg, get_int(tbar_bg) + 1);
            }
         }
         program { name: "toolbar_bg_hide";
            signal: "elm,state,toolbar_bg,hide";
            source: "elm";
            script {
               set_int(tbar_bg, get_int(tbar_bg) - 1);
               if (get_int(tbar_bg) <= 0)
                 set_state(PART:"toolbar_bg", "default", 0.0);
            }
         }
         program { name: "toolbar_open_internal";
            signal: "elm,state,toolbar,open,internal";
            source: "elm";
            script {
               set_int(tbar_close, 0);
               set_state(PART:"toolbar_bg", "visible", 0.0);
            }
         }
         program { name: "toolbar_close_internal";
            signal: "elm,state,toolbar,close,internal";
            source: "elm";
            script {
               set_int(tbar_close, 1);
               set_state(PART:"toolbar_bg", "default", 0.0);
            }
         }
         program { name: "toolbar_open";
            signal: "elm,state,toolbar,open";
            source: "";
            action: STATE_SET "visible" 0.0;
            target: "toolbar_bg";
            transition: LINEAR 0.2;
            after: "toolbar_open_internal";
         }
         program { name: "toolbar_close";
            signal: "elm,state,toolbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "toolbar_bg";
            transition: LINEAR 0.2;
            after: "toolbar_close_internal";
         }
         program { name: "toolbar_instant_open";
            signal: "elm,state,toolbar,instant_open";
            source: "";
            script {
               emit("elm,state,toolbar,open,internal", "elm");
            }
         }
         program { name: "toolbar_instant_close";
            signal: "elm,state,toolbar,instant_close";
            source: "";
            script {
               emit("elm,state,toolbar,close,internal", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
         program {
            name: "display_mode_compress";
            signal: "display,mode,compress";
            source: "";
            script {
               set_state(PART:"toolbar_bg", "default", 0.0);
            }
         }
         program {
            name: "display_mode_default";
            signal: "display,mode,default";
            source: "";
            script {
               if ((get_int(tbar_bg) > 0) && (get_int(tbar_close) == 0))
                  set_state(PART:"toolbar_bg", "visible", 0.0);
            }
         }
      }
   }

   group { name:"elm/naviframe/item/basic/uglib";
      data.item: "tizen_zoom" 1;
      parts {
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
               visible: 1;
            }
            description { state: "hide" 0.0;
               visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 0.0;
               rel1.to: "base";
               rel2.relative: 1.0 1.0;
               rel2.to: "base";
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "clipper";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
         program { name: "invisible";
            signal: "elm,state,invisible";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "clipper";
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            action: SIGNAL_EMIT "elm,action,pushed,finished" "";
         }
         program { name: "popped_finished";
            action: SIGNAL_EMIT "elm,action,popped,finished" "";
         }
      }
   }

#define NAVIFRAME_VIEW_TRANS_TIME 0.3
#define NAVIFRAME_TITLE_TRANS_TIME 0.5
#define NAVIFRAME_TITLE_SLIDE_TEXT_GAP 60
#define NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP 40
#define NAVIFRAME_TITLE_SLIDE_MAX_COUNT 3
#define NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT 0.5


   group { name: "elm/naviframe/item/music/topline/default";
      data.item: "tizen_zoom" 1;
      images {
         image: "00_title_bg.png" COMP;
         image: "00_badge_bg.png" COMP;
         image: "00_effect_title_text_dim_left.png" COMP;
         image: "00_effect_title_text_dim_right.png" COMP;
      }
      script {
         public tbar_bg = 0;     //Toolbar BG Show call count
         public tbar_close = 0; //Toolbar lastest Open/Close status
         public title_badge_visible = 0; //Title badge visible/hidden status
         public landscape = 0; //Landscape mode status
         public subtitle = 0; //Subtitle on/off status
         public drawers_visible = 0; //Drawers on/off status //Used only for "drawers" style
         public icon_visible = 0; //Icon on/off status

         public title_duration = 0;
         public subtitle_duration = 0;
         public title_slide_stop;
         public subtitle_slide_stop;
         public title_slide_start_timer;
         public subtitle_slide_start_timer;
         public title_slide_anim_id;
         public subtitle_slide_anim_id;
         public title_text_w;
         public subtitle_text_w;
         public org_title_text_w;
         public org_subtitle_text_w;
         public title_slide_count = 0;
         public subtitle_slide_count = 0;

         public get_width(val) {
            new x, y, w, h;
            new buf[1024];
            new st[31];
            new Float:vl;

            // Title Text
            if (val == 0) {
               get_geometry(PART:"elm.text.title", x, y, w, h);
               set_int(org_title_text_w, w);
               get_text(PART:"elm.text.title", buf, 1024);
               set_text(PART:"elm.text.full_title", buf);
               get_state(PART:"elm.text.title", st, 30, vl);
               set_state(PART:"elm.text.full_title", st, 0.0);
               get_geometry(PART:"elm.text.full_title", x, y, w, h);
               set_int(title_text_w, w);
            }
            // Subtitle Text
            else {
               get_geometry(PART:"elm.text.subtitle", x, y, w, h);
               set_int(org_subtitle_text_w, w);
               get_text(PART:"elm.text.subtitle", buf, 1024);
               set_text(PART:"elm.text.full_subtitle", buf);
               get_state(PART:"elm.text.subtitle", st, 30, vl);
               set_state(PART:"elm.text.full_subtitle", st, 0.0);
               get_geometry(PART:"elm.text.full_subtitle", x, y, w, h);
               set_int(subtitle_text_w, w);
            }
         }

         public slide_to_end_anim(val, Float:pos) {
            // Title Text
            if (val == 0) {
               if (get_int(title_slide_stop)) return;

               if (!get_int(subtitle)) {
                  set_tween_state(PART:"elm.text.slide_begin_title", pos, "title_slide_begin", 0.0, "title_slide_end", 0.0);
                  set_tween_state(PART:"elm.text.slide_end_title", pos, "title_slide_begin", 0.0, "title_slide_end", 0.0);
               }
               else {
                  if (!get_int(landscape)) {
                     set_tween_state(PART:"elm.text.slide_begin_title", pos, "maintitle_slide_begin", 0.0, "maintitle_slide_end", 0.0);
                     set_tween_state(PART:"elm.text.slide_end_title", pos, "maintitle_slide_begin", 0.0, "maintitle_slide_end", 0.0);
                  }
                  else {
                     set_tween_state(PART:"elm.text.slide_begin_title", pos, "maintitle_slide_begin_landscape", 0.0, "maintitle_slide_end_landscape", 0.0);
                     set_tween_state(PART:"elm.text.slide_end_title", pos, "maintitle_slide_begin_landscape", 0.0, "maintitle_slide_end_landscape", 0.0);
                  }
               }

               if (pos >= 1.0) {
                  if (get_int(title_slide_count) < NAVIFRAME_TITLE_SLIDE_MAX_COUNT)
                    set_int(title_slide_start_timer, timer(1.0, "start_slide", 0));
                  else
                    stop_slide(0);
               }
            }
            // Subtitle Text
            else {
               if (get_int(subtitle_slide_stop)) return;

               if (!get_int(landscape)) {
                  set_tween_state(PART:"elm.text.slide_begin_subtitle", pos, "slide_begin", 0.0, "slide_end", 0.0);
                  set_tween_state(PART:"elm.text.slide_end_subtitle", pos, "slide_begin", 0.0, "slide_end", 0.0);
               }
               else {
                  set_tween_state(PART:"elm.text.slide_begin_subtitle", pos, "slide_begin_landscape", 0.0, "slide_end_landscape", 0.0);
                  set_tween_state(PART:"elm.text.slide_end_subtitle", pos, "slide_begin_landscape", 0.0, "slide_end_landscape", 0.0);
               }

               if (pos >= 1.0) {
                  if (get_int(subtitle_slide_count) < NAVIFRAME_TITLE_SLIDE_MAX_COUNT)
                    set_int(subtitle_slide_start_timer ,timer(1.0, "start_slide", 1));
                  else
                    stop_slide(1);
               }
            }
         }

         public slide_to_end(val) {
            // Title Text
            if (val == 0) {
               if (get_int(title_slide_stop)) return;
               set_int(title_slide_anim_id, anim(get_float(title_duration), "slide_to_end_anim", 0));
            }
            // Subtitle Text
            else {
               if (get_int(subtitle_slide_stop)) return;
               set_int(subtitle_slide_anim_id, anim(get_float(subtitle_duration), "slide_to_end_anim", 1));
            }
         }

         public start_slide(val) {
            new Float:len;
            new buf[1024];
            new st[31];
            new Float:vl;
            get_state(PART:"title_bg", st, 30, vl);
            if (!strcmp(st, "hide"))
               return;

            // Title Text
            if (val == 0) {
               set_int(title_slide_count, get_int(title_slide_count) + 1);

               if (get_int(title_slide_count) == 1) {
                  get_width(0);

                  if (get_int(title_text_w) <= get_int(org_title_text_w)) {
                     set_int(title_slide_count, 0);
                     return;
                  }

                  set_state(PART:"title_text_slide_effect_left", "visible", 0.0);
                  set_state(PART:"title_text_slide_effect_right", "visible", 0.0);

                  len = get_int(title_text_w) + NAVIFRAME_TITLE_SLIDE_TEXT_GAP;
                  set_float(title_duration, len / NAVIFRAME_TITLE_FONT_SIZE_INC * NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT);

                  set_int(title_slide_stop, 0);

                  get_text(PART:"elm.text.title", buf, 1024);
                  set_text(PART:"elm.text.slide_begin_title", buf);
                  set_text(PART:"elm.text.slide_end_title", buf);
               }

               if (!get_int(subtitle)) {
                  set_state(PART:"elm.text.slide_begin_title", "title_slide_begin", 0.0);
                  set_state(PART:"elm.text.slide_end_title", "title_slide_begin", 0.0);
               }
               else {
                  set_state(PART:"elm.text.slide_begin_title", "maintitle_slide_begin", 0.0);
                  set_state(PART:"elm.text.slide_end_title", "maintitle_slide_begin", 0.0);
               }

               if (get_int(title_slide_count) == 1) {
                  set_state(PART:"title_text_clip", "slide", 0.0);
                  set_state(PART:"slide_title_text_clip", "slide", 0.0);
               }

               slide_to_end(0);
            }
            // Subtitle Text
            else {
               set_int(subtitle_slide_count, get_int(subtitle_slide_count) + 1);

               if (get_int(subtitle_slide_count) == 1) {
                  get_width(1);

                  if (get_int(subtitle_text_w) <= get_int(org_subtitle_text_w)) {
                     set_int(subtitle_slide_count, 0);
                     return;
                  }

                  set_state(PART:"subtitle_text_slide_effect_left", "visible", 0.0);
                  set_state(PART:"subtitle_text_slide_effect_right", "visible", 0.0);

                  len = get_int(subtitle_text_w) + NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP;
                  if (!get_int(landscape))
                    set_float(subtitle_duration, len / NAVIFRAME_SUBTITLE_FONT_SIZE_INC * NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT);
                  else
                    set_float(subtitle_duration, len / NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC * NAVIFRAME_TITLE_SLIDE_SPEED_WEIGHT);

                  set_int(subtitle_slide_stop, 0);

                  get_text(PART:"elm.text.subtitle", buf, 1024);
                  set_text(PART:"elm.text.slide_begin_subtitle", buf);
                  set_text(PART:"elm.text.slide_end_subtitle", buf);
               }

               if (!get_int(landscape)) {
                  set_state(PART:"elm.text.slide_begin_subtitle", "slide_begin", 0.0);
                  set_state(PART:"elm.text.slide_end_subtitle", "slide_begin", 0.0);
               }
               else {
                  set_state(PART:"elm.text.slide_begin_subtitle", "slide_begin_landscape", 0.0);
                  set_state(PART:"elm.text.slide_end_subtitle", "slide_begin_landscape", 0.0);
               }

               if (get_int(subtitle_slide_count) == 1) {
                  set_state(PART:"subtitle_text_clip", "slide", 0.0);
                  set_state(PART:"slide_subtitle_text_clip", "slide", 0.0);
               }

               slide_to_end(1);
            }
         }

         public stop_slide(val) {
            new slide_start_timer;
            new slide_anim_id;

            // Title Text
            if (val == 0) {
               set_int(title_slide_stop, 1);
               set_int(title_slide_count, 0);

               slide_start_timer = get_int(title_slide_start_timer);
               if (slide_start_timer) {
                  cancel_timer(slide_start_timer);
                  set_int(title_slide_start_timer, 0);
               }
               slide_anim_id = get_int(title_slide_anim_id);
               if (slide_anim_id) {
                  cancel_anim(slide_anim_id);
                  set_int(title_slide_anim_id, 0);
               }

               set_text(PART:"elm.text.slide_begin_title", "");
               set_text(PART:"elm.text.slide_end_title", "");
               set_state(PART:"elm.text.slide_begin_title", "default", 0.0);
               set_state(PART:"elm.text.slide_end_title", "default", 0.0);
               set_state(PART:"title_text_clip", "default", 0.0);
               set_state(PART:"slide_title_text_clip", "default", 0.0);
               set_state(PART:"title_text_slide_effect_left", "default", 0.0);
               set_state(PART:"title_text_slide_effect_right", "default", 0.0);
            }
            // Subtitle Text
            else {
               set_int(subtitle_slide_stop, 1);
               set_int(subtitle_slide_count, 0);

               slide_start_timer = get_int(subtitle_slide_start_timer);
               if (slide_start_timer) {
                  cancel_timer(slide_start_timer);
                  set_int(subtitle_slide_start_timer, 0);
               }
               slide_anim_id = get_int(subtitle_slide_anim_id);
               if (slide_anim_id) {
                  cancel_anim(slide_anim_id);
                  set_int(subtitle_slide_anim_id, 0);
               }

               set_text(PART:"elm.text.slide_begin_subtitle", "");
               set_text(PART:"elm.text.slide_end_subtitle", "");
               set_state(PART:"elm.text.slide_begin_subtitle", "default", 0.0);
               set_state(PART:"elm.text.slide_end_subtitle", "default", 0.0);
               set_state(PART:"subtitle_text_clip", "default", 0.0);
               set_state(PART:"slide_subtitle_text_clip", "default", 0.0);
               set_state(PART:"subtitle_text_slide_effect_left", "default", 0.0);
               set_state(PART:"subtitle_text_slide_effect_right", "default", 0.0);
            }
         }
      }

      parts {
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
               visible: 1;
            }
            description { state: "hide" 0.0;
               visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events:  0;
            clip_to: "clipper";
            description { state: "default" 0.0;
              color: NAVIFRAME_BASE_COLOR_INC;
            }
         }
         part { name: "title_bg";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_TITLE_H_INC;
               max: -1 NAVIFRAME_TITLE_H_INC;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 { relative: 0.0 0.0; to: "topline"; }
               rel2 { relative: 1.0 0.0; to: "topline"; }
               image {
                  normal: "00_title_bg.png";
                  border: NAVIFRAME_TITLE_BG_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_LANDSCAPE_TITLE_H_INC;
               max: -1 NAVIFRAME_LANDSCAPE_TITLE_H_INC;
            }
            description { state: "hide_trans" 0.0;
               inherit: "default" 0.0;
               align: 0.0 1.0;
            }
            description { state: "hide_trans_landscape" 0.0;
               inherit: "landscape" 0.0;
               align: 0.0 1.0;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: -1 0;
            }
         }
         part {name: "topline";
		type: RECT;
		scale: 1;
		description { state: "default" 0.0;
			min: 0 6;
			max: -1 6;
			align: 0.0 0.0;
	               fixed: 0 1;
	               rel1 { relative: 0.0 0.0; to: "base"; }
	               rel2 { relative: 1.0 0.0; to: "base"; }
	               color: 23 160 248 255;
		}
		description {state: "hide" 0.0;
			inherit: "default" 0.0;
			visible: 0;
		}

         }
         part { name: "title_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to_y: "title_bg"; }
               rel2 { to_y: "title_bg"; }
            }
         }
         part { name: "title_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               fixed: 1 1;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "divider2"; }
               rel2 { relative: 1.0 1.0; to: "divider2"; }
            }
            description { state: "title_left_btn_set" 0.0;
               inherit: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "divider1"; }
               rel2 { relative: 1.0 1.0; to: "divider1"; }
            }
         }
         part { name: "title_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to_x: "elm.swallow.icon"; to_y: "title_bg"; }
               rel2 { relative: 1.0 1.0; to_x: "elm.swallow.icon"; to_y: "title_bg"; }
            }
            description { state: "icon" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_ICON_RIGHT_PADDING_INC;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            repeat_events: 0;
            clip_to: "content_clip";
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.relative: 0.0 1.0;
               rel1.to_x: "base";
               rel1.to_y: "title_bg";
               rel2.relative: 1.0 0.0;
               rel2.to_x: "base";
               rel2.to_y: "toolbar";
            }
         }

         part { name: "content_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1.to_y: "elm.swallow.content";
               rel2.to_y: "elm.swallow.content";
            }
         }
         part { name: "badge_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 -1;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_right_padding"; }
               rel2 { relative: 0.0 1.0; to: "title_right_padding"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_BADGE_PADDING_W_INC 0;
               max: NAVIFRAME_BADGE_PADDING_W_INC -1;
            }
         }
         part { name: "title_text_bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 NAVIFRAME_TITLE_TEXT_BG_H_INC;
               max: -1 NAVIFRAME_TITLE_TEXT_BG_H_INC;
               fixed: 0 1;
               rel1 { relative: 1.0 0.0; to_x: "title_left_padding"; to_y: "title_bg"; }
               rel2 { relative: 0.0 1.0; to_x: "title_right_padding"; to_y: "title_bg"; }
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_LANDSCAPE_TITLE_TEXT_BG_H_INC;
               max: -1 NAVIFRAME_LANDSCAPE_TITLE_TEXT_BG_H_INC;
            }
         }
         part { name: "maintitle_text_bg";
            type: SPACER;
            description { state: "default" 0.0;
               rel1 { relative: 0.0 0.0; to: "title_text_bg"; }
               rel2 { relative: 0.0 1.0; to_x: "badge_padding"; to_y: "title_text_bg"; }
            }
            description { state: "subtitle_is_set" 0.0;
               inherit: "default" 0.0;
               rel1 { relative: 0.0 0.0; to: "title_text_bg"; }
               rel2 { relative: 0.0 0.0; to_x: "badge_padding"; to_y: "subtitle_top_padding"; }
            }
         }
         part { name: "title_text_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "slide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text.title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "title_text_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               color: NAVIFRAME_BG_COLOR;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               align: 0.0 0.5;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "subtitle_is_set" 0.0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               color: NAVIFRAME_BG_COLOR;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               align: 0.0 0.5;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "subtitle_is_set_landscape" 0.0;
               inherit: "subtitle_is_set" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
            }
         }
         part { name: "slide_title_text_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.text.title";
               rel2.to: "elm.text.title";
            }
            description { state: "slide" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "slide_text_gap1";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 0;
               min: NAVIFRAME_TITLE_SLIDE_TEXT_GAP 0;
               max: NAVIFRAME_TITLE_SLIDE_TEXT_GAP -1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "maintitle_text_bg"; }
               rel2 { relative: 0.0 1.0; to: "maintitle_text_bg"; }
            }
         }
         part { name: "elm.text.slide_begin_title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "slide_title_text_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               color: NAVIFRAME_BG_COLOR;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "title_slide_begin" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "title_slide_end" 0.0;
               inherit: "default" 0.0;
               text.align: 1.0 0.5;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "slide_text_gap1"; }
               rel2 { relative: 0.0 1.0; to: "slide_text_gap1"; }
            }
            description { state: "maintitle_slide_begin" 0.0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               color: NAVIFRAME_BG_COLOR;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "maintitle_text_bg"; }
               rel2 { relative: 0.0 1.0; to: "maintitle_text_bg"; }
            }
            description { state: "maintitle_slide_end" 0.0;
               inherit: "maintitle_slide_begin" 0.0;
               text.align: 1.0 0.5;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "slide_text_gap1"; }
               rel2 { relative: 0.0 1.0; to: "slide_text_gap1"; }
            }
            description { state: "maintitle_slide_begin_landscape" 0.0;
               inherit: "maintitle_slide_begin" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
            }
            description { state: "maintitle_slide_end_landscape" 0.0;
               inherit: "maintitle_slide_end" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
            }
         }
         part { name: "title_text_slide_effect_left_bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               align: 1.0 0.5;
               fixed: 1 1;
               rel1 { relative: 0.0 0.0; to_x: "elm.text.title"; to_y: "title_bg"; }
               rel2 { relative: 0.0 1.0; to_x: "elm.text.title"; to_y: "title_bg"; }
            }
         }
         part { name: "title_text_slide_effect_left";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            clip_to :"slide_subtitle_text_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
               align: 0.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 0.0 0.0; to: "title_text_slide_effect_left_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_text_slide_effect_left_bg"; }
               image {
                  normal: "00_effect_title_text_dim_left.png";
                  border: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.text.full_title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "slide_title_text_clip";
            description { state: "default" 0.0;
               visible: 0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "subtitle_is_set" 0.0;
               visible: 0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "subtitle_is_set_landscape" 0.0;
               inherit: "subtitle_is_set" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
            }
         }
         part { name: "slide_text_gap2";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 0;
               min: NAVIFRAME_TITLE_SLIDE_TEXT_GAP 0;
               max: NAVIFRAME_TITLE_SLIDE_TEXT_GAP -1;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "elm.text.full_title"; }
               rel2 { relative: 1.0 1.0; to: "elm.text.full_title"; }
            }
         }
         part { name: "elm.text.slide_end_title";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "slide_title_text_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_TITLE_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               color: NAVIFRAME_BG_COLOR;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "maintitle_text_bg";
               rel2.to: "maintitle_text_bg";
            }
            description { state: "title_slide_begin" 0.0;
               inherit: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "slide_text_gap2"; }
               rel2 { relative: 1.0 1.0; to: "slide_text_gap2"; }
            }
            description { state: "title_slide_end" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "maintitle_slide_begin" 0.0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_TITLE_SMALL_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               color: NAVIFRAME_BG_COLOR;
               color3: NAVIFRAME_TITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "slide_text_gap2"; }
               rel2 { relative: 1.0 1.0; to: "slide_text_gap2"; }
            }
            description { state: "maintitle_slide_end" 0.0;
               inherit: "maintitle_slide_begin" 0.0;
               rel1 { relative: 0.0 0.0; to: "maintitle_text_bg"; }
               rel2 { relative: 0.0 1.0; to: "maintitle_text_bg"; }
            }
            description { state: "maintitle_slide_begin_landscape" 0.0;
               inherit: "maintitle_slide_begin" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
            }
            description { state: "maintitle_slide_end_landscape" 0.0;
               inherit: "maintitle_slide_end" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_TITLE_SMALL_FONT_SIZE_INC;
            }
         }
         part { name: "title_text_slide_effect_right_bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to_x: "elm.text.title"; to_y: "title_bg"; }
               rel2 { relative: 1.0 1.0; to_x: "elm.text.title"; to_y: "title_bg"; }
            }
         }
         part { name: "title_text_slide_effect_right";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            clip_to: "slide_subtitle_text_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
               align: 1.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 1.0 0.0; to: "title_text_slide_effect_right_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_text_slide_effect_right_bg"; }
               image {
                  normal: "00_effect_title_text_dim_right.png";
                  border: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "subtitle_top_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: -1 0;
               fixed: 0 1;
               align: 0.5 1.0;
               rel1 { relative: 0.0 0.0; to: "subtitle_text_bg"; }
               rel2 { relative: 1.0 0.0; to: "subtitle_text_bg"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_SUBTITLE_TOP_PADDING_H_INC;
               max: -1 NAVIFRAME_SUBTITLE_TOP_PADDING_H_INC;
            }
            description { state: "visible_landscape" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_LANDSCAPE_SUBTITLE_TOP_PADDING_H_INC;
               max: -1 NAVIFRAME_LANDSCAPE_SUBTITLE_TOP_PADDING_H_INC;
            }
         }
         part { name: "subtitle_text_bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: -1 0;
               fixed: 0 1;
               align: 0.5 1.0;
               rel1 { relative: 0.0 1.0; to: "title_text_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_text_bg"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_SUBTITLE_H_INC;
               max: -1 NAVIFRAME_SUBTITLE_H_INC;
            }
            description { state: "visible_landscape" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_LANDSCAPE_SUBTITLE_H_INC;
               max: -1 NAVIFRAME_LANDSCAPE_SUBTITLE_H_INC;
            }
         }
         part { name: "subtitle_text_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               rel1.to: "subtitle_text_bg";
               rel2.to: "subtitle_text_bg";
            }
            description { state: "slide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text.subtitle";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "subtitle_text_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               color: NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_SUBTITLE_TEXT_SHADOW_COLOR_INC;
               align: 0.0 0.5;
               rel1.to: "subtitle_text_bg";
               rel2.to: "subtitle_text_bg";
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC;
                  min: 0 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
            }
         }
         part { name: "slide_subtitle_text_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.text.subtitle";
               rel2.to: "elm.text.subtitle";
            }
            description { state: "slide" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "slide_subtitle_divider1";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 0;
               min: NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP 0;
               max: NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP -1;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "subtitle_text_bg"; }
               rel2 { relative: 0.0 1.0; to: "subtitle_text_bg"; }
            }
         }
         part { name: "elm.text.slide_begin_subtitle";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "slide_subtitle_text_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               color: NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_SUBTITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "subtitle_text_bg";
               rel2.to: "subtitle_text_bg";
            }
            description { state: "slide_begin" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "slide_end" 0.0;
               inherit: "default" 0.0;
               text.align: 1.0 0.5;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "slide_subtitle_divider1"; }
               rel2 { relative: 0.0 1.0; to: "slide_subtitle_divider1"; }
            }
            description { state: "slide_begin_landscape" 0.0;
               inherit: "default" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC;
               rel1 { relative: 0.0 0.0; to: "subtitle_text_bg"; }
               rel2 { relative: 0.0 1.0; to: "subtitle_text_bg"; }
            }
            description { state: "slide_end_landscape" 0.0;
               inherit: "slide_begin_landscape" 0.0;
               text.align: 1.0 0.5;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to: "slide_subtitle_divider1"; }
               rel2 { relative: 0.0 1.0; to: "slide_subtitle_divider1"; }
            }
         }
         part { name: "subtitle_text_slide_effect_left";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            clip_to: "slide_subtitle_text_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
               align: 0.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 0.0 0.0; to: "title_text_slide_effect_left_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_text_slide_effect_left_bg"; }
               image {
                  normal: "00_effect_title_text_dim_left.png";
                  border: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.text.full_subtitle";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "slide_subtitle_text_clip";
            description { state: "default" 0.0;
               visible: 0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "subtitle_text_bg";
               rel2.to: "subtitle_text_bg";
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC;
            }
         }
         part { name: "slide_subtitle_divider2";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 0;
               min: NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP 0;
               max: NAVIFRAME_SUBTITLE_SLIDE_TEXT_GAP -1;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "elm.text.full_subtitle"; }
               rel2 { relative: 1.0 1.0; to: "elm.text.full_subtitle"; }
            }
         }
         part { name: "elm.text.slide_end_subtitle";
            type: TEXT;
            effect: FAR_SHADOW BOTTOM;
            scale: 1;
            clip_to: "slide_subtitle_text_clip";
            description { state: "default" 0.0;
               text { font: "Tizen:style=Regular";
                  size: NAVIFRAME_SUBTITLE_FONT_SIZE_INC;
                  min: 1 0;
                  max: 1 0;
                  align: 0.0 0.5;
               }
               color: NAVIFRAME_SUBTITLE_TEXT_COLOR_INC;
               color3: NAVIFRAME_SUBTITLE_TEXT_SHADOW_COLOR_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1.to: "subtitle_text_bg";
               rel2.to: "subtitle_text_bg";
            }
            description { state: "slide_begin" 0.0;
               inherit: "default" 0.0;
               rel1 { relative: 1.0 0.0; to: "slide_subtitle_divider2"; }
               rel2 { relative: 1.0 1.0; to: "slide_subtitle_divider2"; }
            }
            description { state: "slide_end" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "slide_begin_landscape" 0.0;
               inherit: "default" 0.0;
               text.size: NAVIFRAME_LANDSCAPE_SUBTITLE_FONT_SIZE_INC;
               rel1 { relative: 1.0 0.0; to: "slide_subtitle_divider2"; }
               rel2 { relative: 1.0 1.0; to: "slide_subtitle_divider2"; }
            }
            description { state: "slide_end_landscape" 0.0;
               inherit: "slide_begin_landscape" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
            }
         }
         part { name: "subtitle_text_slide_effect_right_bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to_x: "elm.text.subtitle"; to_y: "title_bg"; }
               rel2 { relative: 1.0 1.0; to_x: "elm.text.subtitle"; to_y: "title_bg"; }
            }
         }
         part { name: "subtitle_text_slide_effect_right";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            clip_to: "slide_subtitle_text_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_SIZE_INC;
               align: 1.0 0.5;
               fixed: 1 1;
               visible: 0;
               rel1 { relative: 1.0 0.0; to: "subtitle_text_slide_effect_right_bg"; }
               rel2 { relative: 1.0 1.0; to: "subtitle_text_slide_effect_right_bg"; }
               image {
                  normal: "00_effect_title_text_dim_right.png";
                  border: NAVIFRAME_TITLE_TEXT_SLIDE_EFFECT_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "badge_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to: "elm.text.title"; }
               rel2 { relative: 1.0 1.0; to: "elm.text.title"; }
               align: 0.0 0.5;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_BADGE_LEFT_PADDING_INC;
               max: NAVIFRAME_BADGE_LEFT_PADDING_INC;
            }
         }
         part { name: "left.padding.text";
            type: SPACER;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               min: 0 0;
               max: 0 0;
               rel1 {
                  to: "badge_left_padding";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "badge_left_padding";
                  relative: 1.0 1.0;
               }
               align: 0.0 0.5;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_BADGE_TEXT_LEFT_PADDING_INC;
               max: NAVIFRAME_BADGE_TEXT_LEFT_PADDING_INC;
            }
         }
         part { name: "right.padding.text";
            type: SPACER;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               min: 0 0;
               max: 0 0;
               rel1 {
                  to: "title_badge";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "title_badge";
                  relative: 1.0 1.0;
               }
               align: 0.0 0.5;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               min: NAVIFRAME_BADGE_TEXT_LEFT_PADDING_INC;
               max: NAVIFRAME_BADGE_TEXT_LEFT_PADDING_INC;
            }
         }
         part { name: "badge_bg";
            type: IMAGE;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "left.padding.text";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "right.padding.text";
                  relative: 1.0 1.0;
               }
               image {
                  normal: "00_badge_bg.png";
                  border: NAVIFRAME_BADGE_BG_IMAGE_BORDER_INC;
                  border_scale: 1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: NAVIFRAME_BADGE_BG_IMAGE_SIZE_INC;
            }
         }
         part { name: "title_badge";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               visible: 0;
               min: NAVIFRAME_BADGE_TEXT_MIN_W_INC 0;
               fixed: 1 1;
               rel1 { relative: 1.0 0.0; to: "left.padding.text"; }
               rel2 { relative: 1.0 1.0; to_y: "left.padding.text"; to_x: "badge_padding"; }
               align: 0.0 0.5;
               color: NAVIFRAME_BADGE_TEXT_COLOR_INC;
               text {
                  font: "Tizen:style=Bold";
                  size: NAVIFRAME_BADGE_TEXT_H_INC;
                  min: 1 0;
                  max: 1 0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "click_event_area";
             type: RECT;
             ignore_flags: ON_HOLD;
             description { state: "default" 0.0;
                rel1 { to: "title_bg"; }
                rel2 { to: "title_bg"; }
                color: 0 0 0 0;
             }
         }
         part { name: "access.title";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "title_bg";
               rel2.to: "title_bg";
               color: 0 0 0 0;
            }
         }
         part { name: "divider1";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 -1;
               fixed: 1 1;
               color: NAVIFRAME_TITLE_BUTTON_DIVIDER_COLOR_INC;
               rel1 { relative: 0.0 0.0; to: "title_left_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_left_btn"; }
               align: 1.0 0.5;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 2 48;
               max: 2 48;
            }
         }
         part { name: "title_left_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 0.0 0.0; to_x: "divider2"; to_y: "title_bg"; }
               rel2 { relative: 0.0 1.0; to_x: "divider2"; to_y: "title_bg"; }
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_TITLE_FUNC_BTN_SIZE_INC;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "divider2";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 -1;
               fixed: 1 1;
               color: NAVIFRAME_TITLE_BUTTON_DIVIDER_COLOR_INC;
               rel1 { relative: 0.0 0.0; to: "title_right_btn"; }
               rel2 { relative: 0.0 1.0; to: "title_right_btn"; }
               align: 1.0 0.5;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 2 48;
               max: 2 48;
            }
         }
         part { name: "icon_left_padding";
            type: SPACER;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               min: NAVIFRAME_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 0.0 0.0; to: "title_bg"; }
               rel2 { relative: 0.0 1.0; to: "title_bg"; }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_ICON_SIZE_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0; to: "icon_left_padding"; }
               rel2 { relative: 1.0 1.0; to: "icon_left_padding"; }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               max: 0 -1;
               visible: 0;
            }
         }
         part { name: "title_right_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "title_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_TITLE_FUNC_BTN_SIZE_INC;
               fixed: 1 0;
               align: 1.0 0.5;
               rel1 { relative: 1.0 0.0; to: "title_bg"; }
               rel2 { relative: 1.0 1.0; to: "title_bg"; }
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_TITLE_FUNC_BTN_SIZE_INC;
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "toolbar";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               min: 0 0;
               max: 999999 0;
               fixed: 0 1;
               align: 0.0 1.0;
               visible: 0;
               rel1 { to: "base"; }
               rel2 { to: "base"; }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_TOOLBAR_HEIGHT_INC;
               max: 999999 NAVIFRAME_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
            description { state: "visible_landscape" 0.0;
               inherit: "default" 0.0;
               min: 0 NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC;
               max: 999999 NAVIFRAME_LANDSCAPE_TOOLBAR_HEIGHT_INC;
               visible: 1;
            }
         }
         part { name: "more_btn_bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 0.0 0.0;
               rel1 { relative: 0.0 0.0; to: "toolbar"; }
               rel2 { relative: 0.0 1.0; to: "toolbar"; }
            }
         }
         part { name: "toolbar_more_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               rel1.to: "more_btn_bg";
               rel2.to: "more_btn_bg";
               visible: 0;
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "prev_btn_bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: NAVIFRAME_TOOLBAR_BUTTON_BG_PADDING_INC;
               fixed: 1 0;
               align: 1.0 0.0;
               rel1 { relative: 1.0 0.0; to: "toolbar"; }
               rel2.to: "toolbar";
            }
         }
         part { name: "elm.swallow.prev_btn";
            type: SWALLOW;
            scale: 1;
            clip_to: "toolbar_clip";
            description { state: "default" 0.0;
               max: NAVIFRAME_PREV_FUNC_BTN_SIZE_INC;
               fixed: 1 1;
               align: 0.5 0.5;
               rel1.to: "prev_btn_bg";
               rel2.to: "prev_btn_bg";
               visible: 0;
            }
            description { state: "landscape" 0.0;
               inherit: "default" 0.0;
               max: NAVIFRAME_LANDSCAPE_PREV_FUNC_BTN_SIZE_INC;
            }
         }
         part { name: "toolbar_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 { to: "toolbar"; }
               rel2 { to: "toolbar"; }
            }
         }
      }
      programs {
         program { name: "content_new_pushed";
            signal: "elm,state,new,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_pushed";
            signal: "elm,state,cur,pushed,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
            transition: DECELERATE NAVIFRAME_VIEW_PUSH_TRANS_TIME;
            after: "pushed_finished";
         }
         program { name: "content_prev_popped";
            signal: "elm,state,prev,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "show_finished";
         }
         program { name: "content_cur_popped";
            signal: "elm,state,cur,popped,deferred";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "base";
            transition: DECELERATE NAVIFRAME_VIEW_POP_TRANS_TIME;
            after: "popped_finished";
         }
         program { name: "new_pushed";
            signal: "elm,state,new,pushed";
            source: "elm";
            action: STATE_SET "hide" 0.0;
            target: "clipper";
         }
         program { name: "prev_popped";
            signal: "elm,state,prev,popped";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
         program { name: "visible";
            signal: "elm,state,visible";
            source: "elm";
            script {
               set_state(PART:"clipper", "default", 0.0);
               run_program(PROGRAM:"start_title_slide");
            }
         }
         program { name: "invisible";
            signal: "elm,state,invisible";
            source: "elm";
            script {
               run_program(PROGRAM:"stop_title_slide");
               set_state(PART:"clipper", "hide", 0.0);
            }
         }
         program { name: "start_title_slide";
            signal: "elm,action,title,slide,start";
            source: "";
            script {
               run_program(PROGRAM:"stop_title_slide");
               set_int(title_slide_start_timer, timer(1.5, "start_slide", 0));
               if (get_int(subtitle))
                 set_int(subtitle_slide_start_timer, timer(1.5, "start_slide", 1));
            }
         }
         program { name: "stop_title_slide";
            signal: "elm,action,title,slide,stop";
            source: "";
            script {
               if (!get_int(title_slide_stop) || get_int(title_slide_start_timer))
                 stop_slide(0);
               if (get_int(subtitle))
                 if (!get_int(subtitle_slide_stop) || get_int(subtitle_slide_start_timer))
                   stop_slide(1);
            }
         }
         program { name: "title_show";
            signal: "elm,state,title,show";
            source: "elm";
            script {
               if (!get_int(landscape)) {
                  set_state(PART:"title_bg", "default", 0.0);
                  set_state(PART:"title_right_btn", "default", 0.0);
                  set_state(PART:"title_left_btn", "default", 0.0);
               }
               else {
                  set_state(PART:"title_bg", "landscape", 0.0);
                  set_state(PART:"title_right_btn", "landscape", 0.0);
                  set_state(PART:"title_left_btn", "landscape", 0.0);
               }
               set_state(PART:"elm.swallow.icon", "default", 0.0);
               run_program(PROGRAM:"start_title_slide");
            }
         }
         program { name: "title_hide";
            signal: "elm,state,title,hide";
            source: "elm";
            script {
               run_program(PROGRAM:"stop_title_slide");
               set_state(PART:"title_bg", "hide", 0.0);
               set_state(PART:"title_right_btn", "hide", 0.0);
               set_state(PART:"title_left_btn", "hide", 0.0);
               set_state(PART:"elm.swallow.icon", "hide", 0.0);
            }
         }
         program { name: "title_show_anim";
            signal: "elm,action,title,show";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.icon", "default", 0.0);
               if (!get_int(landscape)) {
                  set_state(PART:"title_bg", "hide_trans", 0.0);
                  set_state(PART:"title_right_btn", "default", 0.0);
                  set_state(PART:"title_left_btn", "default", 0.0);
                  run_program(PROGRAM:"title_show_anim_start_default");
               }
               else {
                  set_state(PART:"title_bg", "hide_trans_landscape", 0.0);
                  set_state(PART:"title_right_btn", "landscape", 0.0);
                  set_state(PART:"title_left_btn", "landscape", 0.0);
                  run_program(PROGRAM:"title_show_anim_start_landscape");
               }
            }
         }
         program { name: "title_show_anim_start_default";
            action: STATE_SET "default" 0.0;
            target: "title_bg";
            transition: SIN_FAC NAVIFRAME_TITLE_TRANS_TIME 1.7;
            after: "title_show_anim_finished";
         }
         program { name: "title_show_anim_start_landscape";
            action: STATE_SET "landscape" 0.0;
            target: "title_bg";
            transition: SIN_FAC NAVIFRAME_TITLE_TRANS_TIME 1.7;
            after: "title_show_anim_finished";
         }
         program { name: "title_show_anim_finished";
            script {
               emit("elm,action,title,transition,finished", "");
               run_program(PROGRAM:"start_title_slide");
            }
         }
         program { name: "title_hide_trans";
            signal: "elm,action,title,hide";
            source: "elm";
            script {
               run_program(PROGRAM:"stop_title_slide");

               if (!get_int(landscape)) {
                  set_state(PART:"title_bg", "default", 0.0);
                  run_program(PROGRAM:"title_hide_trans_start_default");
               }
               else {
                  set_state(PART:"title_bg", "landscape", 0.0);
                  run_program(PROGRAM:"title_hide_trans_start_landscape");
               }
            }
         }
         program { name: "title_hide_trans_start_default";
            action: STATE_SET "hide_trans" 0.0;
            target: "title_bg";
            transition: SIN_FAC NAVIFRAME_TITLE_TRANS_TIME 1.7;
            after: "title_hide_trans_finished";
         }
         program { name: "title_hide_trans_start_landscape";
            action: STATE_SET "hide_trans_landscape" 0.0;
            target: "title_bg";
            transition: SIN_FAC NAVIFRAME_TITLE_TRANS_TIME 1.7;
            after: "title_hide_trans_finished";
         }
         program { name: "title_hide_trans_finished";
            script {
               set_state(PART:"title_bg", "hide", 0.0);
               set_state(PART:"title_right_btn", "hide", 0.0);
               set_state(PART:"title_left_btn", "hide", 0.0);
               set_state(PART:"elm.swallow.icon", "hide", 0.0);
               emit("elm,action,title,transition,finished", "");
            }
         }
         program { name: "title_label_show";
            signal: "elm,state,title_label,show";
            source: "elm";
            script {
               run_program(PROGRAM:"start_title_slide");
            }
         }
         program { name: "title_label_hide";
            signal: "elm,state,title_label,hide";
            source: "elm";
            script {
               run_program(PROGRAM:"stop_title_slide");
            }
         }
         program { name: "subtitle_show";
            signal: "elm,state,subtitle,show";
            source: "elm";
            script {
               set_state(PART:"maintitle_text_bg", "subtitle_is_set", 0.0);
               if (!get_int(landscape)) {
                  set_state(PART:"elm.text.title", "subtitle_is_set", 0.0);
                  set_state(PART:"subtitle_top_padding", "visible", 0.0);
                  set_state(PART:"subtitle_text_bg", "visible", 0.0);
               }
               else {
                  set_state(PART:"elm.text.title", "subtitle_is_set_landscape", 0.0);
                  set_state(PART:"subtitle_top_padding", "visible_landscape", 0.0);
                  set_state(PART:"subtitle_text_bg", "visible_landscape", 0.0);
               }
               set_int(subtitle, 1);
               run_program(PROGRAM:"start_title_slide");
            }
         }
         program { name: "subtitle_hide";
            signal: "elm,state,subtitle,hide";
            source: "elm";
            script {
               set_state(PART:"maintitle_text_bg", "default", 0.0);
               set_state(PART:"subtitle_top_padding", "default", 0.0);
               set_state(PART:"subtitle_text_bg", "default", 0.0);
               set_state(PART:"elm.text.title", "default", 0.0);
               set_int(subtitle, 0);
               run_program(PROGRAM:"stop_title_slide");
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,show";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.icon", "default", 0.0);
               set_state(PART:"title_left_padding", "icon", 0.0);
            }
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hide";
            source: "elm";
            script {
               set_state(PART:"elm.swallow.icon", "hide", 0.0);
               set_state(PART:"title_left_padding", "default", 0.0);
            }
         }
         program { name: "title_left_btn_show";
            signal: "elm,state,title_left_btn,show";
            source: "elm";
            script {
               set_state(PART:"divider1", "visible", 0.0);
               set_state(PART:"title_right_padding", "title_left_btn_set", 0.0);
            }
         }
         program { name: "title_left_btn_hide";
            signal: "elm,state,title_left_btn,hide";
            source: "elm";
            script {
               set_state(PART:"divider1", "default", 0.0);
               set_state(PART:"title_right_padding", "default", 0.0);
            }
         }
         program { name: "title_right_btn_show";
            signal: "elm,state,title_right_btn,show";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "divider2";
         }
         program { name: "title_right_btn_hide";
            signal: "elm,state,title_right_btn,hide";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "divider2";
         }
         program { name: "toolbar_show";
            signal: "elm,state,toolbar,show";
            source: "elm";
            script {
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
            }
         }
         program { name: "toolbar_hide";
            signal: "elm,state,toolbar,hide";
            source: "elm";
            script {
               set_state(PART:"toolbar", "default", 0.0);
            }
         }
         program { name: "toolbar_open_internal";
            signal: "elm,state,toolbar,open,internal";
            source: "elm";
            script {
               set_int(tbar_close, 0);
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
            }
         }
         program { name: "toolbar_close_internal";
            signal: "elm,state,toolbar,close,internal";
            source: "elm";
            script {
               set_int(tbar_close, 1);
               set_state(PART:"toolbar", "default", 0.0);
            }
         }
         program { name: "toolbar_open";
            signal: "elm,state,toolbar,open";
            source: "";
            script {
               if (!get_int(landscape))
                 set_state(PART:"toolbar", "visible", 0.0);
               else
                 set_state(PART:"toolbar", "visible_landscape", 0.0);
            }
            transition: LINEAR 0.2;
            after: "toolbar_open_internal";
         }
         program { name: "toolbar_close";
            signal: "elm,state,toolbar,close";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "toolbar";
            transition: LINEAR 0.2;
            after: "toolbar_close_internal";
         }
         program { name: "toolbar_instant_open";
            signal: "elm,state,toolbar,instant_open";
            source: "";
            script {
               emit("elm,state,toolbar,open,internal", "elm");
            }
         }
         program { name: "toolbar_instant_close";
            signal: "elm,state,toolbar,instant_close";
            source: "";
            script {
               emit("elm,state,toolbar,close,internal", "elm");
            }
         }
         program { name: "show_finished";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
         }
         program { name: "pushed_finished";
            script {
               run_program(PROGRAM:"stop_title_slide");
               emit("elm,action,pushed,finished", "");
            }
         }
         program { name: "popped_finished";
            script {
               run_program(PROGRAM:"stop_title_slide");
               emit("elm,action,popped,finished", "");
            }
         }
         program {
            name: "title_clicked";
            signal: "mouse,clicked,1";
            source: "click_event_area";
            script {
               emit("elm,action,title,clicked", "");
            }
         }
         program {
            name: "title_badge_show";
            signal: "elm,state,title_badge,show";
            source: "elm";
            script {
               set_state(PART:"badge_left_padding", "visible", 0.0);
               set_state(PART:"badge_padding", "visible", 0.0);
               set_state(PART:"left.padding.text", "visible", 0.0);
               set_state(PART:"right.padding.text", "visible", 0.0);
               set_state(PART:"badge_bg", "visible", 0.0);
               set_state(PART:"title_badge", "visible", 0.0);
               set_int(title_badge_visible, 1);
               run_program(PROGRAM:"start_title_slide");
            }
         }
         program {
            name: "title_badge_hide";
            signal: "elm,state,title_badge,hide";
            source: "elm";
            script {
               set_state(PART:"badge_left_padding", "default", 0.0);
               set_state(PART:"badge_padding", "default", 0.0);
               set_state(PART:"left.padding.text", "default", 0.0);
               set_state(PART:"right.padding.text", "default", 0.0);
               set_state(PART:"badge_bg", "default", 0.0);
               set_state(PART:"title_badge", "default", 0.0);
               set_int(title_badge_visible, 0);
               run_program(PROGRAM:"start_title_slide");
            }
         }
         program {
            name: "change_to_landscape";
            script {
               if (!get_int(landscape)) {
                  set_state(PART:"title_text_bg", "landscape", 0.0);
                  set_state(PART:"elm.text.subtitle", "landscape", 0.0);
                  set_state(PART:"title_right_btn", "landscape", 0.0);
                  set_state(PART:"title_left_btn", "landscape", 0.0);
                  set_state(PART:"toolbar_more_btn", "landscape", 0.0);
                  set_state(PART:"elm.swallow.prev_btn", "landscape", 0.0);

                  new st[31];
                  new Float:vl;
                  get_state(PART:"title_bg", st, 30, vl);
                  if (!strcmp(st, "default"))
                    set_state(PART:"title_bg", "landscape", 0.0);

                  get_state(PART:"elm.text.title", st, 30, vl);
                  if (!strcmp(st, "subtitle_is_set"))
                    set_state(PART:"elm.text.title", "subtitle_is_set_landscape", 0.0);

                  get_state(PART:"subtitle_top_padding", st, 30, vl);
                  if (!strcmp(st, "visible"))
                    set_state(PART:"subtitle_top_padding", "visible_landscape", 0.0);

                  get_state(PART:"subtitle_text_bg", st, 30, vl);
                  if (!strcmp(st, "visible"))
                    set_state(PART:"subtitle_text_bg", "visible_landscape", 0.0);

                  get_state(PART:"toolbar", st, 30, vl);
                  if (!strcmp(st, "visible"))
                    set_state(PART:"toolbar", "visible_landscape", 0.0);

                  set_int(landscape, 1);
                  run_program(PROGRAM:"start_title_slide");
               }
            }
         }
         program {
            name: "change_to_portrait";
            script {
               if (get_int(landscape)) {
                  set_state(PART:"title_text_bg", "default", 0.0);
                  set_state(PART:"elm.text.subtitle", "default", 0.0);
                  set_state(PART:"title_right_btn", "default", 0.0);
                  set_state(PART:"title_left_btn", "default", 0.0);
                  set_state(PART:"toolbar_more_btn", "default", 0.0);
                  set_state(PART:"elm.swallow.prev_btn", "default", 0.0);

                  new st[31];
                  new Float:vl;
                  get_state(PART:"title_bg", st, 30, vl);
                  if (!strcmp(st, "landscape"))
                    set_state(PART:"title_bg", "default", 0.0);

                  get_state(PART:"elm.text.title", st, 30, vl);
                  if (!strcmp(st, "subtitle_is_set_landscape"))
                    set_state(PART:"elm.text.title", "subtitle_is_set", 0.0);

                  get_state(PART:"subtitle_top_padding", st, 30, vl);
                  if (!strcmp(st, "visible_landscape"))
                    set_state(PART:"subtitle_top_padding", "visible", 0.0);

                  get_state(PART:"subtitle_text_bg", st, 30, vl);
                  if (!strcmp(st, "visible_landscape"))
                    set_state(PART:"subtitle_text_bg", "visible", 0.0);

                  get_state(PART:"toolbar", st, 30, vl);
                  if (!strcmp(st, "visible_landscape"))
                    set_state(PART:"toolbar", "visible", 0.0);

                  set_int(landscape, 0);
                  run_program(PROGRAM:"start_title_slide");
               }
            }
         }
         program { name: "landscape_mode";
            source: "elm";
            signal: "elm,state,orient,90";
            after: "change_to_landscape";
         }
         program { name: "landscape_mode2";
            source: "elm";
            signal: "elm,state,orient,270";
            after: "change_to_landscape";
         }
         program { name: "portrait_mode";
            source: "elm";
            signal: "elm,state,orient,0";
            after: "change_to_portrait";
         }
         program { name: "portrait_mode2";
            source: "elm";
            signal: "elm,state,orient,180";
            after: "change_to_portrait";
         }
         program { name: "hide_top_line";
            source: "*";
            signal: "hide.topline";
            script {
	            set_state(PART:"topline", "hide", 0.0);
	    }
         }
         program { name: "show_top_line";
            source: "*";
            signal: "show.topline";
            script {
	            set_state(PART:"topline", "default", 0.0);
	    }
         }
      }
   }


